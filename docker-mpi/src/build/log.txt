main.c:373:0: warning: "MAX_WORD_LENGTH" redefined
 #define MAX_WORD_LENGTH 100
 
main.c:11:0: note: this is the location of the previous definition
 #define MAX_WORD_LENGTH 50 // Sostituisci con il valore appropriato
 
main.c:684:5: error: redefinition of ‘main’
 int main(int argc, char **argv)
     ^~~~
main.c:171:5: note: previous definition of ‘main’ was here
 int main(int argc, char **argv)
     ^~~~
main.c: In function ‘main’:
main.c:398:13: error: too many arguments to function ‘sendFileInfoList’
             sendFileInfoList(slaveFileInfo, i, &request_fileInfo);
             ^~~~~~~~~~~~~~~~
main.c:201:6: note: declared here
 void sendFileInfoList(struct File_inf *fileInfo, int dest)
      ^~~~~~~~~~~~~~~~
main.c:403:27: error: ‘request_array’ undeclared (first use in this function); did you mean ‘request_fileInfo’?
     MPI_Waitall(size - 1, request_array, MPI_STATUSES_IGNORE);
                           ^~~~~~~~~~~~~
                           request_fileInfo
main.c:403:27: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:398:13: error: too many arguments to function ‘sendFileInfoList’
             sendFileInfoList(slaveFileInfo, i, &request_fileInfo);
             ^~~~~~~~~~~~~~~~
main.c:201:6: note: declared here
 void sendFileInfoList(struct File_inf *fileInfo, int dest)
      ^~~~~~~~~~~~~~~~
main.c:403:27: error: ‘request_array’ undeclared (first use in this function); did you mean ‘request_fileInfo’?
     MPI_Waitall(size - 1, request_array, MPI_STATUSES_IGNORE);
                           ^~~~~~~~~~~~~
                           request_fileInfo
main.c:403:27: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:404:27: error: ‘request_array’ undeclared (first use in this function); did you mean ‘request_fileInfo’?
     MPI_Waitall(size - 1, request_array, MPI_STATUSES_IGNORE);
                           ^~~~~~~~~~~~~
                           request_fileInfo
main.c:404:27: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:404:30: warning: passing argument 2 of ‘MPI_Waitall’ from incompatible pointer type [-Wincompatible-pointer-types]
        MPI_Waitall(size - 1, request_partitionSize, MPI_STATUSES_IGNORE);
                              ^~~~~~~~~~~~~~~~~~~~~
In file included from main.c:4:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘MPI_Request {aka struct ompi_request_t *}’
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
main.c:405:27: warning: passing argument 2 of ‘MPI_Waitall’ from incompatible pointer type [-Wincompatible-pointer-types]
     MPI_Waitall(size - 1, request_fileInfo, MPI_STATUSES_IGNORE);
                           ^~~~~~~~~~~~~~~~
In file included from main.c:4:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘MPI_Request {aka struct ompi_request_t *}’
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
main.c: In function ‘main’:
main.c:399:83: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
             MPI_Isend(&partitionSize, 1, MPI_UNSIGNED_LONG, i, 0, MPI_COMM_WORLD, &request_partitionSize);
                                                                                   ^
In file included from main.c:4:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(size + -1)]’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:400:48: warning: passing argument 3 of ‘sendFileInfoList’ from incompatible pointer type [-Wincompatible-pointer-types]
             sendFileInfoList(slaveFileInfo, i, &request_fileInfo);
                                                ^
main.c:201:6: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(size + -1)]’
 void sendFileInfoList(struct File_inf *fileInfo, int dest, MPI_Request *request)
      ^~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:332:17: error: conflicting types for ‘request_partitionSize’
     MPI_Request request_partitionSize[size - 1];
                 ^~~~~~~~~~~~~~~~~~~~~
main.c:331:17: note: previous declaration of ‘request_partitionSize’ was here
     MPI_Request request_partitionSize, request_fileInfo;
                 ^~~~~~~~~~~~~~~~~~~~~
main.c:333:13: error: conflicting types for ‘request_fileInfo’
 MPI_Request request_fileInfo[size - 1];
             ^~~~~~~~~~~~~~~~
main.c:331:40: note: previous declaration of ‘request_fileInfo’ was here
     MPI_Request request_partitionSize, request_fileInfo;
                                        ^~~~~~~~~~~~~~~~
main.c:400:83: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
             MPI_Isend(&partitionSize, 1, MPI_UNSIGNED_LONG, i, 0, MPI_COMM_WORLD, &request_partitionSize);
                                                                                   ^
In file included from main.c:4:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(size + -1)]’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:401:48: warning: passing argument 3 of ‘sendFileInfoList’ from incompatible pointer type [-Wincompatible-pointer-types]
             sendFileInfoList(slaveFileInfo, i, &request_fileInfo);
                                                ^
main.c:201:6: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(size + -1)]’
 void sendFileInfoList(struct File_inf *fileInfo, int dest, MPI_Request *request)
      ^~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:399:13: error: too many arguments to function ‘sendFileInfoList’
             sendFileInfoList(slaveFileInfo, i, &request_fileInfo);
             ^~~~~~~~~~~~~~~~
main.c:201:6: note: declared here
 void sendFileInfoList(struct File_inf *fileInfo, int dest)
      ^~~~~~~~~~~~~~~~
main.c:404:27: error: ‘request_array’ undeclared (first use in this function); did you mean ‘request_fileInfo’?
     MPI_Waitall(size - 1, request_array, MPI_STATUSES_IGNORE);
                           ^~~~~~~~~~~~~
                           request_fileInfo
main.c:404:27: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:399:13: error: too many arguments to function ‘sendFileInfoList’
             sendFileInfoList(slaveFileInfo, i, &request_fileInfo);
             ^~~~~~~~~~~~~~~~
main.c:201:6: note: declared here
 void sendFileInfoList(struct File_inf *fileInfo, int dest)
      ^~~~~~~~~~~~~~~~
main.c:404:27: error: ‘request_array’ undeclared (first use in this function); did you mean ‘request_fileInfo’?
     MPI_Waitall(size - 1, request_array, MPI_STATUSES_IGNORE);
                           ^~~~~~~~~~~~~
                           request_fileInfo
main.c:404:27: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:398:9: error: too many arguments to function ‘sendFileInfoList’
         sendFileInfoList(slaveFileInfo, i, &request_fileInfo);
         ^~~~~~~~~~~~~~~~
main.c:201:6: note: declared here
 void sendFileInfoList(struct File_inf *fileInfo, int dest)
      ^~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:410:17: error: too few arguments to function ‘MPI_Barrier’
                 MPI_Barrier();
                 ^~~~~~~~~~~
In file included from main.c:4:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1246:20: note: declared here
 OMPI_DECLSPEC  int MPI_Barrier(MPI_Comm comm);
                    ^~~~~~~~~~~
main.c: In function ‘main’:
main.c:417:87: warning: passing argument 7 of ‘MPI_Irecv’ from incompatible pointer type [-Wincompatible-pointer-types]
                 MPI_Irecv(&partitionSize, 1, MPI_UNSIGNED_LONG, 0, 0, MPI_COMM_WORLD, &request_partitionSize);
                                                                                       ^
In file included from main.c:4:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1560:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(size + -1)]’
 OMPI_DECLSPEC  int MPI_Irecv(void *buf, int count, MPI_Datatype datatype, int source,
                    ^~~~~~~~~
main.c:420:26: warning: passing argument 1 of ‘MPI_Wait’ from incompatible pointer type [-Wincompatible-pointer-types]
                 MPI_Wait(&request_partitionSize, MPI_STATUS_IGNORE);
                          ^
In file included from main.c:4:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1839:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(size + -1)]’
 OMPI_DECLSPEC  int MPI_Wait(MPI_Request *request, MPI_Status *status);
                    ^~~~~~~~
main.c: In function ‘main’:
main.c:418:21: error: redeclaration of ‘request_partitionSize’ with no linkage
         MPI_Request request_partitionSize;
                     ^~~~~~~~~~~~~~~~~~~~~
main.c:415:21: note: previous declaration of ‘request_partitionSize’ was here
         MPI_Request request_partitionSize;
                     ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:417:79: warning: passing argument 7 of ‘MPI_Irecv’ from incompatible pointer type [-Wincompatible-pointer-types]
         MPI_Irecv(&partitionSize, 1, MPI_UNSIGNED_LONG, 0, 0, MPI_COMM_WORLD, &request_partitionSize);
                                                                               ^
In file included from main.c:4:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1560:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(size + -1)]’
 OMPI_DECLSPEC  int MPI_Irecv(void *buf, int count, MPI_Datatype datatype, int source,
                    ^~~~~~~~~
main.c:420:18: warning: passing argument 1 of ‘MPI_Wait’ from incompatible pointer type [-Wincompatible-pointer-types]
         MPI_Wait(&request_partitionSize, MPI_STATUS_IGNORE);
                  ^
In file included from main.c:4:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1839:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(size + -1)]’
 OMPI_DECLSPEC  int MPI_Wait(MPI_Request *request, MPI_Status *status);
                    ^~~~~~~~
main.c: In function ‘main’:
main.c:418:21: error: redeclaration of ‘request_partitionSize’ with no linkage
         MPI_Request request_partitionSize;
                     ^~~~~~~~~~~~~~~~~~~~~
main.c:415:21: note: previous declaration of ‘request_partitionSize’ was here
         MPI_Request request_partitionSize;
                     ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:398:13: warning: implicit declaration of function ‘sendFileInfoList’; did you mean ‘sendFileInfoListAsync’? [-Wimplicit-function-declaration]
             sendFileInfoList(slaveFileInfo, i);
             ^~~~~~~~~~~~~~~~
             sendFileInfoListAsync
main.c:403:31: warning: passing argument 2 of ‘MPI_Waitall’ from incompatible pointer type [-Wincompatible-pointer-types]
         MPI_Waitall(size - 1, request_partitionSize, MPI_STATUSES_IGNORE);
                               ^~~~~~~~~~~~~~~~~~~~~
In file included from main.c:4:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘MPI_Request {aka struct ompi_request_t *}’
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
build/main.o: In function `main':
main.c:(.text+0xfcc): undefined reference to `sendFileInfoList'
collect2: error: ld returned 1 exit status
In file included from main.c:6:0:
main.c: In function ‘master’:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:756:26: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_REQUEST_NULL OMPI_PREDEFINED_GLOBAL(MPI_Request, ompi_request_null)
                          ^~~~~~~~~~~~~~~~~~~~~~
main.c:44:62: note: in expansion of macro ‘MPI_REQUEST_NULL’
         MPI_Isend(&offset, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_REQUEST_NULL);
                                                              ^~~~~~~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:756:26: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_REQUEST_NULL OMPI_PREDEFINED_GLOBAL(MPI_Request, ompi_request_null)
                          ^~~~~~~~~~~~~~~~~~~~~~
main.c:45:67: note: in expansion of macro ‘MPI_REQUEST_NULL’
         MPI_Isend(NULL, sendSize, MPI_CHAR, i, 0, MPI_COMM_WORLD, MPI_REQUEST_NULL);
                                                                   ^~~~~~~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c: In function ‘calculateTotalSize’:
main.c:108:56: warning: ‘snprintf’ output may be truncated before the last format character [-Wformat-truncation=]
             snprintf(filePath, sizeof(filePath), "%s/%s", directory, entry->d_name);
                                                        ^
main.c:108:13: note: ‘snprintf’ output 2 or more bytes (assuming 257) into a destination of size 256
             snprintf(filePath, sizeof(filePath), "%s/%s", directory, entry->d_name);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from main.c:6:0:
main.c: In function ‘master’:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:756:26: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_REQUEST_NULL OMPI_PREDEFINED_GLOBAL(MPI_Request, ompi_request_null)
                          ^~~~~~~~~~~~~~~~~~~~~~
main.c:49:58: note: in expansion of macro ‘MPI_REQUEST_NULL’
     MPI_Isend(&offset, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_REQUEST_NULL);
                                                          ^~~~~~~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:756:26: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_REQUEST_NULL OMPI_PREDEFINED_GLOBAL(MPI_Request, ompi_request_null)
                          ^~~~~~~~~~~~~~~~~~~~~~
main.c:50:63: note: in expansion of macro ‘MPI_REQUEST_NULL’
     MPI_Isend(NULL, sendSize, MPI_CHAR, i, 0, MPI_COMM_WORLD, MPI_REQUEST_NULL);
                                                               ^~~~~~~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c: In function ‘calculateTotalSize’:
main.c:117:56: warning: ‘snprintf’ output may be truncated before the last format character [-Wformat-truncation=]
             snprintf(filePath, sizeof(filePath), "%s/%s", directory, entry->d_name);
                                                        ^
main.c:117:13: note: ‘snprintf’ output 2 or more bytes (assuming 257) into a destination of size 256
             snprintf(filePath, sizeof(filePath), "%s/%s", directory, entry->d_name);
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘master’:
main.c:100:9: error: ‘offset’ undeclared (first use in this function); did you mean ‘off_t’?
         offset += sendSize
         ^~~~~~
         off_t
main.c:100:9: note: each undeclared identifier is reported only once for each function it appears in
main.c:100:19: error: ‘sendSize’ undeclared (first use in this function); did you mean ‘size’?
         offset += sendSize
                   ^~~~~~~~
                   size
main.c:101:9: error: expected ‘;’ before ‘printf’
         printf("Invio dati completato\n");
         ^~~~~~
main.c: In function ‘master’:
main.c:172:1: error: expected declaration or statement at end of input
 }
 ^
In file included from main.c:3:0:
main.c: In function ‘master’:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:756:26: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_REQUEST_NULL OMPI_PREDEFINED_GLOBAL(MPI_Request, ompi_request_null)
                          ^~~~~~~~~~~~~~~~~~~~~~
main.c:41:62: note: in expansion of macro ‘MPI_REQUEST_NULL’
         MPI_Isend(&offset, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_REQUEST_NULL);
                                                              ^~~~~~~~~~~~~~~~
In file included from main.c:3:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:3:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:756:26: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_REQUEST_NULL OMPI_PREDEFINED_GLOBAL(MPI_Request, ompi_request_null)
                          ^~~~~~~~~~~~~~~~~~~~~~
main.c:42:67: note: in expansion of macro ‘MPI_REQUEST_NULL’
         MPI_Isend(NULL, sendSize, MPI_CHAR, i, 0, MPI_COMM_WORLD, MPI_REQUEST_NULL);
                                                                   ^~~~~~~~~~~~~~~~
In file included from main.c:3:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c: At top level:
main.c:49:6: error: conflicting types for ‘slave’
 void slave(int rank, int size) {
      ^~~~~
main.c:8:6: note: previous declaration of ‘slave’ was here
 void slave(int rank);
      ^~~~~
main.c: In function ‘calculateTotalSize’:
main.c:90:5: error: unknown type name ‘DIR’
     DIR *dir;
     ^~~
main.c:92:17: error: storage size of ‘fileStat’ isn’t known
     struct stat fileStat;
                 ^~~~~~~~
main.c:95:11: warning: implicit declaration of function ‘opendir’ [-Wimplicit-function-declaration]
     dir = opendir(directory);
           ^~~~~~~
main.c:95:9: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     dir = opendir(directory);
         ^
main.c:102:21: warning: implicit declaration of function ‘readdir’; did you mean ‘rand_r’? [-Wimplicit-function-declaration]
     while ((entry = readdir(dir)) != NULL) {
                     ^~~~~~~
                     rand_r
main.c:102:19: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     while ((entry = readdir(dir)) != NULL) {
                   ^
main.c:103:18: error: dereferencing pointer to incomplete type ‘struct dirent’
         if (entry->d_type == DT_REG) {  // Verifica se è un file regolare
                  ^~
main.c:103:30: error: ‘DT_REG’ undeclared (first use in this function)
         if (entry->d_type == DT_REG) {  // Verifica se è un file regolare
                              ^~~~~~
main.c:103:30: note: each undeclared identifier is reported only once for each function it appears in
main.c:108:17: warning: implicit declaration of function ‘stat’ [-Wimplicit-function-declaration]
             if (stat(filePath, &fileStat) == 0) {
                 ^~~~
main.c:112:17: warning: implicit declaration of function ‘closedir’; did you mean ‘pclose’? [-Wimplicit-function-declaration]
                 closedir(dir);
                 ^~~~~~~~
                 pclose
In file included from main.c:3:0:
main.c: In function ‘master’:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:756:26: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_REQUEST_NULL OMPI_PREDEFINED_GLOBAL(MPI_Request, ompi_request_null)
                          ^~~~~~~~~~~~~~~~~~~~~~
main.c:41:62: note: in expansion of macro ‘MPI_REQUEST_NULL’
         MPI_Isend(&offset, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_REQUEST_NULL);
                                                              ^~~~~~~~~~~~~~~~
In file included from main.c:3:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:3:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:756:26: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_REQUEST_NULL OMPI_PREDEFINED_GLOBAL(MPI_Request, ompi_request_null)
                          ^~~~~~~~~~~~~~~~~~~~~~
main.c:42:67: note: in expansion of macro ‘MPI_REQUEST_NULL’
         MPI_Isend(NULL, sendSize, MPI_CHAR, i, 0, MPI_COMM_WORLD, MPI_REQUEST_NULL);
                                                                   ^~~~~~~~~~~~~~~~
In file included from main.c:3:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c: At top level:
main.c:49:6: error: conflicting types for ‘slave’
 void slave(int rank, int size) {
      ^~~~~
main.c:8:6: note: previous declaration of ‘slave’ was here
 void slave(int rank);
      ^~~~~
main.c: In function ‘calculateTotalSize’:
main.c:90:5: error: unknown type name ‘DIR’
     DIR *dir;
     ^~~
main.c:92:17: error: storage size of ‘fileStat’ isn’t known
     struct stat fileStat;
                 ^~~~~~~~
main.c:95:11: warning: implicit declaration of function ‘opendir’ [-Wimplicit-function-declaration]
     dir = opendir(directory);
           ^~~~~~~
main.c:95:9: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     dir = opendir(directory);
         ^
main.c:102:21: warning: implicit declaration of function ‘readdir’; did you mean ‘rand_r’? [-Wimplicit-function-declaration]
     while ((entry = readdir(dir)) != NULL) {
                     ^~~~~~~
                     rand_r
main.c:102:19: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     while ((entry = readdir(dir)) != NULL) {
                   ^
main.c:103:18: error: dereferencing pointer to incomplete type ‘struct dirent’
         if (entry->d_type == DT_REG) {  // Verifica se è un file regolare
                  ^~
main.c:103:30: error: ‘DT_REG’ undeclared (first use in this function)
         if (entry->d_type == DT_REG) {  // Verifica se è un file regolare
                              ^~~~~~
main.c:103:30: note: each undeclared identifier is reported only once for each function it appears in
main.c:108:17: warning: implicit declaration of function ‘stat’ [-Wimplicit-function-declaration]
             if (stat(filePath, &fileStat) == 0) {
                 ^~~~
main.c:112:17: warning: implicit declaration of function ‘closedir’; did you mean ‘pclose’? [-Wimplicit-function-declaration]
                 closedir(dir);
                 ^~~~~~~~
                 pclose
In file included from main.c:3:0:
main.c: In function ‘master’:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:756:26: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_REQUEST_NULL OMPI_PREDEFINED_GLOBAL(MPI_Request, ompi_request_null)
                          ^~~~~~~~~~~~~~~~~~~~~~
main.c:41:62: note: in expansion of macro ‘MPI_REQUEST_NULL’
         MPI_Isend(&offset, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_REQUEST_NULL);
                                                              ^~~~~~~~~~~~~~~~
In file included from main.c:3:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:3:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:756:26: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_REQUEST_NULL OMPI_PREDEFINED_GLOBAL(MPI_Request, ompi_request_null)
                          ^~~~~~~~~~~~~~~~~~~~~~
main.c:42:67: note: in expansion of macro ‘MPI_REQUEST_NULL’
         MPI_Isend(NULL, sendSize, MPI_CHAR, i, 0, MPI_COMM_WORLD, MPI_REQUEST_NULL);
                                                                   ^~~~~~~~~~~~~~~~
In file included from main.c:3:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c: At top level:
main.c:49:6: error: conflicting types for ‘slave’
 void slave(int rank, int size) {
      ^~~~~
main.c:8:6: note: previous declaration of ‘slave’ was here
 void slave(int rank);
      ^~~~~
main.c: In function ‘calculateTotalSize’:
main.c:90:5: error: unknown type name ‘DIR’
     DIR *dir;
     ^~~
main.c:92:17: error: storage size of ‘fileStat’ isn’t known
     struct stat fileStat;
                 ^~~~~~~~
main.c:95:11: warning: implicit declaration of function ‘opendir’ [-Wimplicit-function-declaration]
     dir = opendir(directory);
           ^~~~~~~
main.c:95:9: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     dir = opendir(directory);
         ^
main.c:102:21: warning: implicit declaration of function ‘readdir’; did you mean ‘rand_r’? [-Wimplicit-function-declaration]
     while ((entry = readdir(dir)) != NULL) {
                     ^~~~~~~
                     rand_r
main.c:102:19: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     while ((entry = readdir(dir)) != NULL) {
                   ^
main.c:103:18: error: dereferencing pointer to incomplete type ‘struct dirent’
         if (entry->d_type == DT_REG) {  // Verifica se è un file regolare
                  ^~
main.c:103:30: error: ‘DT_REG’ undeclared (first use in this function)
         if (entry->d_type == DT_REG) {  // Verifica se è un file regolare
                              ^~~~~~
main.c:103:30: note: each undeclared identifier is reported only once for each function it appears in
main.c:108:17: warning: implicit declaration of function ‘stat’ [-Wimplicit-function-declaration]
             if (stat(filePath, &fileStat) == 0) {
                 ^~~~
main.c:112:17: warning: implicit declaration of function ‘closedir’; did you mean ‘pclose’? [-Wimplicit-function-declaration]
                 closedir(dir);
                 ^~~~~~~~
                 pclose
main.c: In function ‘main’:
main.c:350:9: error: expected ‘,’ or ‘;’ before ‘printf’
         printf("num_wors.... : %d", num_words_to_count);
         ^~~~~~
main.c: In function ‘main’:
main.c:348:40: error: invalid type argument of unary ‘*’ (have ‘long int’)
         int num_words_to_count = (int)(*chunk_size / MAX_WORD_LENGTH);
                                        ^~~~~~~~~~~
main.c:349:13: error: invalid type argument of unary ‘*’ (have ‘long int’)
         if (*chunk_size % MAX_WORD_LENGTH != 0)
             ^~~~~~~~~~~
main.c: In function ‘main’:
main.c:333:75: error: ‘buffer_size’ undeclared (first use in this function)
 printf("Processo %d: Buffer allocato. Dimensione: %d bytes\n", rank, (int)buffer_size);
                                                                           ^~~~~~~~~~~
main.c:333:75: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:351:58: error: invalid type argument of unary ‘*’ (have ‘long int’)
         printf("chunk_size: %ld, MAX_WORD_LENGTH: %d\n", *chunk_size, MAX_WORD_LENGTH);
                                                          ^~~~~~~~~~~
main.c:352:35: error: invalid type argument of unary ‘*’ (have ‘long int’)
         int num_words_to_count = (*chunk_size > 0) ? (int)(*chunk_size / MAX_WORD_LENGTH) : 0;
                                   ^~~~~~~~~~~
main.c:352:60: error: invalid type argument of unary ‘*’ (have ‘long int’)
         int num_words_to_count = (*chunk_size > 0) ? (int)(*chunk_size / MAX_WORD_LENGTH) : 0;
                                                            ^~~~~~~~~~~
main.c: In function ‘main’:
main.c:352:35: error: invalid type argument of unary ‘*’ (have ‘long int’)
         int num_words_to_count = (*chunk_size > 0) ? (int)(*chunk_size / MAX_WORD_LENGTH) : 0;
                                   ^~~~~~~~~~~
main.c:352:60: error: invalid type argument of unary ‘*’ (have ‘long int’)
         int num_words_to_count = (*chunk_size > 0) ? (int)(*chunk_size / MAX_WORD_LENGTH) : 0;
                                                            ^~~~~~~~~~~
main.c: In function ‘main’:
main.c:351:58: error: invalid type argument of unary ‘*’ (have ‘long int’)
         printf("chunk_size: %ld, MAX_WORD_LENGTH: %d\n", *chunk_size, MAX_WORD_LENGTH);
                                                          ^~~~~~~~~~~
main.c:352:35: error: invalid type argument of unary ‘*’ (have ‘long int’)
         int num_words_to_count = (*chunk_size > 0) ? (int)(*chunk_size / MAX_WORD_LENGTH) : 0;
                                   ^~~~~~~~~~~
main.c:352:60: error: invalid type argument of unary ‘*’ (have ‘long int’)
         int num_words_to_count = (*chunk_size > 0) ? (int)(*chunk_size / MAX_WORD_LENGTH) : 0;
                                                            ^~~~~~~~~~~
main.c: In function ‘main’:
main.c:363:29: error: ‘word’ undeclared (first use in this function); did you mean ‘void’?
             updateWordCount(word);
                             ^~~~
                             void
main.c:363:29: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:365:13: error: expected ‘;’ before ‘updateWordCount’
             updateWordCount(word);
             ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:87:63: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
     printf("Processo %d: Updating word count for word: %s\n", rank, word);
                                                               ^~~~
                                                               rand
main.c:87:63: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateWordCount’:
main.c:87:63: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
     printf("Processo %d: Updating word count for word: %s\n", rank, word);
                                                               ^~~~
                                                               rand
main.c:87:63: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:364:13: error: too many arguments to function ‘updateWordCount’
             updateWordCount(token,rank);
             ^~~~~~~~~~~~~~~
main.c:85:6: note: declared here
 void updateWordCount(const char *word)
      ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:127:25: error: ‘local_total_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
     for (int i = 0; i < local_total_occurrences; ++i)
                         ^~~~~~~~~~~~~~~~~~~~~~~
                         local_occurrences
main.c:127:25: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateWordCount’:
main.c:127:25: error: ‘local_total_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
     for (int i = 0; i < local_total_occurrences; ++i)
                         ^~~~~~~~~~~~~~~~~~~~~~~
                         local_occurrences
main.c:127:25: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateWordCount’:
main.c:127:25: error: ‘local_total_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
     for (int i = 0; i < local_total_occurrences; ++i)
                         ^~~~~~~~~~~~~~~~~~~~~~~
                         local_occurrences
main.c:127:25: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:361:5: error: expected ‘}’ before ‘else’
     else
     ^~~~
main.c: In function ‘main’:
main.c:244:21: error: ‘entry’ undeclared (first use in this function)
             while ((entry = readdir(dir)) != NULL)
                     ^~~~~
main.c:244:21: note: each undeclared identifier is reported only once for each function it appears in
main.c:285:23: error: ‘file’ undeclared (first use in this function); did you mean ‘free’?
                 fseek(file, offset, SEEK_SET);
                       ^~~~
                       free
main.c:289:17: error: too few arguments to function ‘MPI_Isend’
                 MPI_Isend(&current_chunk_size, 1, MPI_LONG, i, 0, MPI_COMM_WORLD);
                 ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:292:17: error: too few arguments to function ‘MPI_Isend’
                 MPI_Isend(chunk_buffer, current_chunk_size, MPI_CHAR, i, 0, MPI_COMM_WORLD);
                 ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:340:5: error: expected ‘}’ before ‘else’
     else
     ^~~~
main.c: In function ‘main’:
main.c:243:21: error: ‘entry’ undeclared (first use in this function)
             while ((entry = readdir(dir)) != NULL)
                     ^~~~~
main.c:243:21: note: each undeclared identifier is reported only once for each function it appears in
main.c:284:23: error: ‘file’ undeclared (first use in this function); did you mean ‘free’?
                 fseek(file, offset, SEEK_SET);
                       ^~~~
                       free
main.c:288:17: error: too few arguments to function ‘MPI_Isend’
                 MPI_Isend(&current_chunk_size, 1, MPI_LONG, i, 0, MPI_COMM_WORLD);
                 ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:291:17: error: too few arguments to function ‘MPI_Isend’
                 MPI_Isend(chunk_buffer, current_chunk_size, MPI_CHAR, i, 0, MPI_COMM_WORLD);
                 ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c: In function ‘main’:
main.c:288:5: error: too few arguments to function ‘MPI_Isend’
     MPI_Isend(&chunk_size, 1, MPI_LONG, i, 0, MPI_COMM_WORLD);
     ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:290:5: error: too few arguments to function ‘MPI_Isend’
     MPI_Isend(chunk_buffer, chunk_size, MPI_CHAR, i, 0, MPI_COMM_WORLD);
     ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c: In function ‘checkOverlap’:
main.c:209:35: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
             updateWordCount(word, rank);
                                   ^~~~
                                   rand
main.c:209:35: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:425:9: error: too few arguments to function ‘checkOverlap’
         checkOverlap(overlap_buffer, recv_buffer);
         ^~~~~~~~~~~~
main.c:190:6: note: declared here
 void checkOverlap(char *prev_chunk, char *current_chunk, int rank)
      ^~~~~~~~~~~~
main.c: In function ‘main’:
main.c:435:5: error: too few arguments to function ‘checkOverlap’
     checkOverlap(prev_chunk, recv_buffer);
     ^~~~~~~~~~~~
main.c:190:6: note: declared here
 void checkOverlap(char *prev_chunk, char *current_chunk, int rank)
      ^~~~~~~~~~~~
main.c: In function ‘main’:
main.c:436:89: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
         MPI_Isend(&local_total_occurrences, 1, MPI_INT, MASTER_RANK, 0, MPI_COMM_WORLD, &request_send_size);
                                                                                         ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(num_processes + -1)]’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:437:116: warning: passing argument 7 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
         MPI_Isend(local_occurrences, local_total_occurrences, MPI_OCCURRENCE_NODE, MASTER_RANK, 0, MPI_COMM_WORLD, &request_send_buffer);
                                                                                                                    ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(num_processes + -1)]’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:443:18: warning: passing argument 1 of ‘MPI_Wait’ from incompatible pointer type [-Wincompatible-pointer-types]
         MPI_Wait(&request_send_size, MPI_STATUS_IGNORE);
                  ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1839:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(num_processes + -1)]’
 OMPI_DECLSPEC  int MPI_Wait(MPI_Request *request, MPI_Status *status);
                    ^~~~~~~~
main.c:444:18: warning: passing argument 1 of ‘MPI_Wait’ from incompatible pointer type [-Wincompatible-pointer-types]
         MPI_Wait(&request_send_buffer, MPI_STATUS_IGNORE);
                  ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1839:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(num_processes + -1)]’
 OMPI_DECLSPEC  int MPI_Wait(MPI_Request *request, MPI_Status *status);
                    ^~~~~~~~
main.c: In function ‘main’:
main.c:444:18: warning: passing argument 1 of ‘MPI_Wait’ from incompatible pointer type [-Wincompatible-pointer-types]
         MPI_Wait(&request_send_size, MPI_STATUS_IGNORE);
                  ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1839:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(num_processes + -1)]’
 OMPI_DECLSPEC  int MPI_Wait(MPI_Request *request, MPI_Status *status);
                    ^~~~~~~~
main.c:445:18: warning: passing argument 1 of ‘MPI_Wait’ from incompatible pointer type [-Wincompatible-pointer-types]
         MPI_Wait(&request_send_buffer, MPI_STATUS_IGNORE);
                  ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1839:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘struct ompi_request_t * (*)[(sizetype)(num_processes + -1)]’
 OMPI_DECLSPEC  int MPI_Wait(MPI_Request *request, MPI_Status *status);
                    ^~~~~~~~
main.c: In function ‘main’:
main.c:336:22: error: ‘recv_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
             MPI_Send(recv_buffer, chunk_size + TAGLIO, MPI_CHAR, 1, 0, MPI_COMM_WORLD);
                      ^~~~~~~~~~~
                      setbuffer
main.c:336:22: note: each undeclared identifier is reported only once for each function it appears in
main.c:395:18: error: ‘overlap_buffer’ undeclared (first use in this function); did you mean ‘recv_buffer’?
         MPI_Recv(overlap_buffer, TAGLIO, MPI_CHAR, MASTER_RANK, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                  ^~~~~~~~~~~~~~
                  recv_buffer
main.c: In function ‘main’:
main.c:336:72: error: expected expression before ‘,’ token
             memcpy(chunk_buffer + TAGLIO, /* copia il chunk dai file */, /* dimensione del chunk dai file */);
                                                                        ^
main.c: In function ‘main’:
main.c:336:72: error: expected expression before ‘,’ token
             memcpy(chunk_buffer + TAGLIO, /* copia il chunk dai file */, /* dimensione del chunk dai file */);
                                                                        ^
main.c: In function ‘main’:
main.c:396:60: error: ‘recv_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
         MPI_Alloc_mem(chunk_size + TAGLIO, MPI_INFO_NULL, &recv_buffer);
                                                            ^~~~~~~~~~~
                                                            setbuffer
main.c:396:60: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:396:60: error: ‘recv_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
         MPI_Alloc_mem(chunk_size + TAGLIO, MPI_INFO_NULL, &recv_buffer);
                                                            ^~~~~~~~~~~
                                                            setbuffer
main.c:396:60: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:277:44: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘long int’ [-Wformat=]
                 printf("current_file_size %d ... bytes_read_now %d... : ",current_file_size,bytes_read_now);
                                           ~^
                                           %ld
main.c:277:66: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘size_t {aka long unsigned int}’ [-Wformat=]
                 printf("current_file_size %d ... bytes_read_now %d... : ",current_file_size,bytes_read_now);
                                                                 ~^
                                                                 %ld
main.c: In function ‘main’:
main.c:309:80: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘long int’ [-Wformat=]
             printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", chunk_size, i);
                                                                               ~^
                                                                               %ld
main.c:309:85: warning: format ‘%ld’ expects argument of type ‘long int’, but argument 3 has type ‘int’ [-Wformat=]
             printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", chunk_size, i);
                                                                                   ~~^
                                                                                   %d
main.c:392:16: error: ‘token’ undeclared (first use in this function); did you mean ‘popen’?
         while (token != NULL)
                ^~~~~
                popen
main.c:392:16: note: each undeclared identifier is reported only once for each function it appears in
main.c:413:22: error: ‘recv_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
         MPI_Free_mem(recv_buffer);
                      ^~~~~~~~~~~
                      setbuffer
main.c: In function ‘main’:
main.c:392:16: error: ‘token’ undeclared (first use in this function); did you mean ‘popen’?
         while (token != NULL)
                ^~~~~
                popen
main.c:392:16: note: each undeclared identifier is reported only once for each function it appears in
main.c:413:22: error: ‘recv_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
         MPI_Free_mem(recv_buffer);
                      ^~~~~~~~~~~
                      setbuffer
main.c: In function ‘main’:
main.c:358:100: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             printf("MASTER: Ricevuto la dimensione del chunk %d (%ld bytes) dal processo %d\n", i, chunk_size, i);
                                                                                                    ^~~~~~~~~~
                                                                                                    total_size
main.c:358:100: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:358:100: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             printf("MASTER: Ricevuto la dimensione del chunk %d (%ld bytes) dal processo %d\n", i, chunk_size, i);
                                                                                                    ^~~~~~~~~~
                                                                                                    total_size
main.c:358:100: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:347:44: error: ‘i’ undeclared (first use in this function)
             MPI_Wait(&request_receive_size[i - 1], MPI_STATUS_IGNORE);
                                            ^
main.c:347:44: note: each undeclared identifier is reported only once for each function it appears in
main.c:356:100: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             printf("MASTER: Ricevuto la dimensione del chunk %d (%ld bytes) dal processo %d\n", i, chunk_size, i);
                                                                                                    ^~~~~~~~~~
                                                                                                    total_size
main.c: In function ‘main’:
main.c:347:44: error: ‘i’ undeclared (first use in this function)
             MPI_Wait(&request_receive_size[i - 1], MPI_STATUS_IGNORE);
                                            ^
main.c:347:44: note: each undeclared identifier is reported only once for each function it appears in
main.c:356:100: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             printf("MASTER: Ricevuto la dimensione del chunk %d (%ld bytes) dal processo %d\n", i, chunk_size, i);
                                                                                                    ^~~~~~~~~~
                                                                                                    total_size
main.c: In function ‘main’:
main.c:347:44: error: ‘i’ undeclared (first use in this function)
             MPI_Wait(&request_receive_size[i - 1], MPI_STATUS_IGNORE);
                                            ^
main.c:347:44: note: each undeclared identifier is reported only once for each function it appears in
main.c:356:100: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             printf("MASTER: Ricevuto la dimensione del chunk %d (%ld bytes) dal processo %d\n", i, chunk_size, i);
                                                                                                    ^~~~~~~~~~
                                                                                                    total_size
main.c: In function ‘main’:
main.c:278:40: warning: implicit declaration of function ‘MPI_ALLOC_MEM’; did you mean ‘MPI_ERR_COMM’? [-Wimplicit-function-declaration]
                 chunk_buffer = (char *)MPI_ALLOC_MEM(chunk_size, MPI_INFO_NULL);
                                        ^~~~~~~~~~~~~
                                        MPI_ERR_COMM
main.c:278:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
                 chunk_buffer = (char *)MPI_ALLOC_MEM(chunk_size, MPI_INFO_NULL);
                                ^
build/main.o: In function `main':
/home/src/main.c:278: undefined reference to `MPI_ALLOC_MEM'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:306:13: error: too few arguments to function ‘MPI_Isend’
             MPI_Isend(&chunk_size, 1, MPI_LONG, i + 1, 0, MPI_COMM_WORLD);
             ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:307:13: error: too few arguments to function ‘MPI_Isend’
             MPI_Isend(chunk_buffer + bytes_read, overflow_bytes, MPI_CHAR, i + 1, 0, MPI_COMM_WORLD);
             ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c: In function ‘main’:
main.c:311:77: error: ‘bytes_read’ undeclared (first use in this function)
     printf("MASTER: Bytes letti: %ld, Dimensione corrente del file: %ld\n", bytes_read, current_file_size);
                                                                             ^~~~~~~~~~
main.c:311:77: note: each undeclared identifier is reported only once for each function it appears in
main.c:311:89: error: ‘current_file_size’ undeclared (first use in this function); did you mean ‘get_total_file_size’?
     printf("MASTER: Bytes letti: %ld, Dimensione corrente del file: %ld\n", bytes_read, current_file_size);
                                                                                         ^~~~~~~~~~~~~~~~~
                                                                                         get_total_file_size
main.c:314:81: error: ‘chunk_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                                                 ^~~~~~~~~~~~
                                                                                 setbuffer
main.c:320:12: error: ‘file’ undeclared (first use in this function); did you mean ‘free’?
     fclose(file);
            ^~~~
            free
main.c: At top level:
main.c:330:8: error: expected declaration specifiers or ‘...’ before string constant
 printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c:330:79: error: unknown type name ‘i’
 printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                               ^
main.c:330:82: error: unknown type name ‘chunk_size’
 printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                  ^~~~~~~~~~
main.c:333:8: error: expected declaration specifiers or ‘...’ before string constant
 printf("MASTER: Assegnato al processo %d: %.*s\n", i, (int)chunk_size, chunk_buffer);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c:333:52: error: unknown type name ‘i’
 printf("MASTER: Assegnato al processo %d: %.*s\n", i, (int)chunk_size, chunk_buffer);
                                                    ^
main.c:333:55: error: expected declaration specifiers or ‘...’ before ‘(’ token
 printf("MASTER: Assegnato al processo %d: %.*s\n", i, (int)chunk_size, chunk_buffer);
                                                       ^
main.c:333:72: error: unknown type name ‘chunk_buffer’
 printf("MASTER: Assegnato al processo %d: %.*s\n", i, (int)chunk_size, chunk_buffer);
                                                                        ^~~~~~~~~~~~
main.c:335:8: error: expected declaration specifiers or ‘...’ before string constant
 printf("MASTER: Assegnato al processo %d: Chunk di dimensione %ld\n", i, chunk_size);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c:335:71: error: unknown type name ‘i’
 printf("MASTER: Assegnato al processo %d: Chunk di dimensione %ld\n", i, chunk_size);
                                                                       ^
main.c:335:74: error: unknown type name ‘chunk_size’
 printf("MASTER: Assegnato al processo %d: Chunk di dimensione %ld\n", i, chunk_size);
                                                                          ^~~~~~~~~~
main.c:337:8: error: expected declaration specifiers or ‘...’ before string constant
 printf("MASTER: Inviato il chunk %d al processo %d\n", i, i);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c:337:56: error: unknown type name ‘i’
 printf("MASTER: Inviato il chunk %d al processo %d\n", i, i);
                                                        ^
main.c:337:59: error: unknown type name ‘i’
 printf("MASTER: Inviato il chunk %d al processo %d\n", i, i);
                                                           ^
main.c:340:8: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘+=’ token
 offset += chunk_size;
        ^~
main.c:343:1: warning: data definition has no type or storage class
 MPI_Free_mem(chunk_buffer);
 ^~~~~~~~~~~~
main.c:343:1: warning: type defaults to ‘int’ in declaration of ‘MPI_Free_mem’ [-Wimplicit-int]
main.c:343:1: warning: parameter names (without types) in function declaration
main.c:344:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c:345:1: warning: data definition has no type or storage class
 closedir(dir);
 ^~~~~~~~
main.c:345:1: warning: type defaults to ‘int’ in declaration of ‘closedir’ [-Wimplicit-int]
main.c:345:1: warning: parameter names (without types) in function declaration
main.c:347:1: error: expected identifier or ‘(’ before ‘if’
 if (total_sent != total_size)
 ^~
main.c:351:1: error: expected identifier or ‘(’ before ‘else’
 else
 ^~~~
main.c:357:1: error: expected identifier or ‘(’ before ‘for’
 for (int i = 1; i < num_processes; i++)
 ^~~
main.c:357:19: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘<’ token
 for (int i = 1; i < num_processes; i++)
                   ^
main.c:357:37: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘++’ token
 for (int i = 1; i < num_processes; i++)
                                     ^~
main.c:373:1: error: expected identifier or ‘(’ before ‘for’
 for (int i = 0; i < total_occurrences; ++i)
 ^~~
main.c:373:19: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘<’ token
 for (int i = 0; i < total_occurrences; ++i)
                   ^
main.c:373:40: error: expected identifier or ‘(’ before ‘++’ token
 for (int i = 0; i < total_occurrences; ++i)
                                        ^~
main.c:379:1: warning: data definition has no type or storage class
 MPI_Free_mem(all_occurrences);
 ^~~~~~~~~~~~
main.c:379:1: warning: type defaults to ‘int’ in declaration of ‘MPI_Free_mem’ [-Wimplicit-int]
main.c:379:1: warning: parameter names (without types) in function declaration
main.c:380:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c:381:1: error: expected identifier or ‘(’ before ‘else’
 else
 ^~~~
main.c: In function ‘main’:
main.c:311:77: error: ‘bytes_read’ undeclared (first use in this function)
     printf("MASTER: Bytes letti: %ld, Dimensione corrente del file: %ld\n", bytes_read, current_file_size);
                                                                             ^~~~~~~~~~
main.c:311:77: note: each undeclared identifier is reported only once for each function it appears in
main.c:311:89: error: ‘current_file_size’ undeclared (first use in this function); did you mean ‘get_total_file_size’?
     printf("MASTER: Bytes letti: %ld, Dimensione corrente del file: %ld\n", bytes_read, current_file_size);
                                                                                         ^~~~~~~~~~~~~~~~~
                                                                                         get_total_file_size
main.c:314:81: error: ‘chunk_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                                                 ^~~~~~~~~~~~
                                                                                 setbuffer
main.c:320:12: error: ‘file’ undeclared (first use in this function); did you mean ‘free’?
     fclose(file);
            ^~~~
            free
main.c: At top level:
main.c:330:8: error: expected declaration specifiers or ‘...’ before string constant
 printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c:330:79: error: unknown type name ‘i’
 printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                               ^
main.c:330:82: error: unknown type name ‘chunk_size’
 printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                  ^~~~~~~~~~
main.c:333:8: error: expected declaration specifiers or ‘...’ before string constant
 printf("MASTER: Assegnato al processo %d: %.*s\n", i, (int)chunk_size, chunk_buffer);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c:333:52: error: unknown type name ‘i’
 printf("MASTER: Assegnato al processo %d: %.*s\n", i, (int)chunk_size, chunk_buffer);
                                                    ^
main.c:333:55: error: expected declaration specifiers or ‘...’ before ‘(’ token
 printf("MASTER: Assegnato al processo %d: %.*s\n", i, (int)chunk_size, chunk_buffer);
                                                       ^
main.c:333:72: error: unknown type name ‘chunk_buffer’
 printf("MASTER: Assegnato al processo %d: %.*s\n", i, (int)chunk_size, chunk_buffer);
                                                                        ^~~~~~~~~~~~
main.c:335:8: error: expected declaration specifiers or ‘...’ before string constant
 printf("MASTER: Assegnato al processo %d: Chunk di dimensione %ld\n", i, chunk_size);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c:335:71: error: unknown type name ‘i’
 printf("MASTER: Assegnato al processo %d: Chunk di dimensione %ld\n", i, chunk_size);
                                                                       ^
main.c:335:74: error: unknown type name ‘chunk_size’
 printf("MASTER: Assegnato al processo %d: Chunk di dimensione %ld\n", i, chunk_size);
                                                                          ^~~~~~~~~~
main.c:337:8: error: expected declaration specifiers or ‘...’ before string constant
 printf("MASTER: Inviato il chunk %d al processo %d\n", i, i);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c:337:56: error: unknown type name ‘i’
 printf("MASTER: Inviato il chunk %d al processo %d\n", i, i);
                                                        ^
main.c:337:59: error: unknown type name ‘i’
 printf("MASTER: Inviato il chunk %d al processo %d\n", i, i);
                                                           ^
main.c:340:8: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘+=’ token
 offset += chunk_size;
        ^~
main.c:343:1: warning: data definition has no type or storage class
 MPI_Free_mem(chunk_buffer);
 ^~~~~~~~~~~~
main.c:343:1: warning: type defaults to ‘int’ in declaration of ‘MPI_Free_mem’ [-Wimplicit-int]
main.c:343:1: warning: parameter names (without types) in function declaration
main.c:344:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c:345:1: warning: data definition has no type or storage class
 closedir(dir);
 ^~~~~~~~
main.c:345:1: warning: type defaults to ‘int’ in declaration of ‘closedir’ [-Wimplicit-int]
main.c:345:1: warning: parameter names (without types) in function declaration
main.c:347:1: error: expected identifier or ‘(’ before ‘if’
 if (total_sent != total_size)
 ^~
main.c:351:1: error: expected identifier or ‘(’ before ‘else’
 else
 ^~~~
main.c:357:1: error: expected identifier or ‘(’ before ‘for’
 for (int i = 1; i < num_processes; i++)
 ^~~
main.c:357:19: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘<’ token
 for (int i = 1; i < num_processes; i++)
                   ^
main.c:357:37: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘++’ token
 for (int i = 1; i < num_processes; i++)
                                     ^~
main.c:373:1: error: expected identifier or ‘(’ before ‘for’
 for (int i = 0; i < total_occurrences; ++i)
 ^~~
main.c:373:19: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘<’ token
 for (int i = 0; i < total_occurrences; ++i)
                   ^
main.c:373:40: error: expected identifier or ‘(’ before ‘++’ token
 for (int i = 0; i < total_occurrences; ++i)
                                        ^~
main.c:379:1: warning: data definition has no type or storage class
 MPI_Free_mem(all_occurrences);
 ^~~~~~~~~~~~
main.c:379:1: warning: type defaults to ‘int’ in declaration of ‘MPI_Free_mem’ [-Wimplicit-int]
main.c:379:1: warning: parameter names (without types) in function declaration
main.c:380:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c:381:1: error: expected identifier or ‘(’ before ‘else’
 else
 ^~~~
main.c: In function ‘main’:
main.c:311:77: error: ‘bytes_read’ undeclared (first use in this function)
     printf("MASTER: Bytes letti: %ld, Dimensione corrente del file: %ld\n", bytes_read, current_file_size);
                                                                             ^~~~~~~~~~
main.c:311:77: note: each undeclared identifier is reported only once for each function it appears in
main.c:311:89: error: ‘current_file_size’ undeclared (first use in this function); did you mean ‘get_total_file_size’?
     printf("MASTER: Bytes letti: %ld, Dimensione corrente del file: %ld\n", bytes_read, current_file_size);
                                                                                         ^~~~~~~~~~~~~~~~~
                                                                                         get_total_file_size
main.c:314:81: error: ‘chunk_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                                                 ^~~~~~~~~~~~
                                                                                 setbuffer
main.c:320:12: error: ‘file’ undeclared (first use in this function); did you mean ‘free’?
     fclose(file);
            ^~~~
            free
main.c:329:83: error: ‘i’ undeclared (first use in this function)
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                   ^
main.c:329:86: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘chunk_buffer’?
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                      ^~~~~~~~~~
                                                                                      chunk_buffer
main.c:339:5: error: ‘offset’ undeclared (first use in this function); did you mean ‘offsets’?
     offset += chunk_size;
     ^~~~~~
     offsets
main.c:345:9: error: ‘total_sent’ undeclared (first use in this function); did you mean ‘total_size’?
     if (total_sent != total_size)
         ^~~~~~~~~~
         total_size
main.c:378:5: error: ‘else’ without a previous ‘if’
     else
     ^~~~
main.c: In function ‘main’:
main.c:311:77: error: ‘bytes_read’ undeclared (first use in this function)
     printf("MASTER: Bytes letti: %ld, Dimensione corrente del file: %ld\n", bytes_read, current_file_size);
                                                                             ^~~~~~~~~~
main.c:311:77: note: each undeclared identifier is reported only once for each function it appears in
main.c:311:89: error: ‘current_file_size’ undeclared (first use in this function); did you mean ‘get_total_file_size’?
     printf("MASTER: Bytes letti: %ld, Dimensione corrente del file: %ld\n", bytes_read, current_file_size);
                                                                                         ^~~~~~~~~~~~~~~~~
                                                                                         get_total_file_size
main.c:314:81: error: ‘chunk_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                                                 ^~~~~~~~~~~~
                                                                                 setbuffer
main.c:320:12: error: ‘file’ undeclared (first use in this function); did you mean ‘free’?
     fclose(file);
            ^~~~
            free
main.c:329:83: error: ‘i’ undeclared (first use in this function)
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                   ^
main.c:329:86: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘chunk_buffer’?
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                      ^~~~~~~~~~
                                                                                      chunk_buffer
main.c:339:5: error: ‘offset’ undeclared (first use in this function); did you mean ‘offsets’?
     offset += chunk_size;
     ^~~~~~
     offsets
main.c:345:9: error: ‘total_sent’ undeclared (first use in this function); did you mean ‘total_size’?
     if (total_sent != total_size)
         ^~~~~~~~~~
         total_size
main.c:378:5: error: ‘else’ without a previous ‘if’
     else
     ^~~~
main.c: In function ‘main’:
main.c:309:101: error: ‘current_file_size’ undeclared (first use in this function); did you mean ‘get_total_file_size’?
                 printf("MASTER: Bytes letti: %ld, Dimensione corrente del file: %ld\n", bytes_read, current_file_size);
                                                                                                     ^~~~~~~~~~~~~~~~~
                                                                                                     get_total_file_size
main.c:309:101: note: each undeclared identifier is reported only once for each function it appears in
main.c:316:81: error: ‘chunk_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                                                 ^~~~~~~~~~~~
                                                                                 setbuffer
main.c:319:61: error: ‘bytes_read’ undeclared (first use in this function)
     printf("MASTER: Dimensione effettiva del chunk: %ld\n", bytes_read);
                                                             ^~~~~~~~~~
main.c:322:12: error: ‘file’ undeclared (first use in this function); did you mean ‘free’?
     fclose(file);
            ^~~~
            free
main.c:331:83: error: ‘i’ undeclared (first use in this function)
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                   ^
main.c:331:86: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘chunk_buffer’?
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                      ^~~~~~~~~~
                                                                                      chunk_buffer
main.c:341:5: error: ‘offset’ undeclared (first use in this function); did you mean ‘offsets’?
     offset += chunk_size;
     ^~~~~~
     offsets
main.c:347:9: error: ‘total_sent’ undeclared (first use in this function); did you mean ‘total_size’?
     if (total_sent != total_size)
         ^~~~~~~~~~
         total_size
main.c:380:5: error: ‘else’ without a previous ‘if’
     else
     ^~~~
main.c: In function ‘main’:
main.c:309:101: error: ‘current_file_size’ undeclared (first use in this function); did you mean ‘get_total_file_size’?
                 printf("MASTER: Bytes letti: %ld, Dimensione corrente del file: %ld\n", bytes_read, current_file_size);
                                                                                                     ^~~~~~~~~~~~~~~~~
                                                                                                     get_total_file_size
main.c:309:101: note: each undeclared identifier is reported only once for each function it appears in
main.c:316:81: error: ‘chunk_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                                                 ^~~~~~~~~~~~
                                                                                 setbuffer
main.c:319:61: error: ‘bytes_read’ undeclared (first use in this function)
     printf("MASTER: Dimensione effettiva del chunk: %ld\n", bytes_read);
                                                             ^~~~~~~~~~
main.c:322:12: error: ‘file’ undeclared (first use in this function); did you mean ‘free’?
     fclose(file);
            ^~~~
            free
main.c:331:83: error: ‘i’ undeclared (first use in this function)
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                   ^
main.c:331:86: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘chunk_buffer’?
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                      ^~~~~~~~~~
                                                                                      chunk_buffer
main.c:341:5: error: ‘offset’ undeclared (first use in this function); did you mean ‘offsets’?
     offset += chunk_size;
     ^~~~~~
     offsets
main.c:347:9: error: ‘total_sent’ undeclared (first use in this function); did you mean ‘total_size’?
     if (total_sent != total_size)
         ^~~~~~~~~~
         total_size
main.c:380:5: error: ‘else’ without a previous ‘if’
     else
     ^~~~
main.c: In function ‘main’:
main.c:316:62: error: ‘current_file_size’ undeclared (first use in this function); did you mean ‘get_total_file_size’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                              ^~~~~~~~~~~~~~~~~
                                                              get_total_file_size
main.c:316:62: note: each undeclared identifier is reported only once for each function it appears in
main.c:316:81: error: ‘chunk_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                                                 ^~~~~~~~~~~~
                                                                                 setbuffer
main.c:319:61: error: ‘bytes_read’ undeclared (first use in this function)
     printf("MASTER: Dimensione effettiva del chunk: %ld\n", bytes_read);
                                                             ^~~~~~~~~~
main.c:322:12: error: ‘file’ undeclared (first use in this function); did you mean ‘free’?
     fclose(file);
            ^~~~
            free
main.c:331:83: error: ‘i’ undeclared (first use in this function)
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                   ^
main.c:331:86: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘chunk_buffer’?
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                      ^~~~~~~~~~
                                                                                      chunk_buffer
main.c:341:5: error: ‘offset’ undeclared (first use in this function); did you mean ‘offsets’?
     offset += chunk_size;
     ^~~~~~
     offsets
main.c:347:9: error: ‘total_sent’ undeclared (first use in this function); did you mean ‘total_size’?
     if (total_sent != total_size)
         ^~~~~~~~~~
         total_size
main.c:380:5: error: ‘else’ without a previous ‘if’
     else
     ^~~~
main.c: In function ‘main’:
main.c:316:62: error: ‘current_file_size’ undeclared (first use in this function); did you mean ‘get_total_file_size’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                              ^~~~~~~~~~~~~~~~~
                                                              get_total_file_size
main.c:316:62: note: each undeclared identifier is reported only once for each function it appears in
main.c:316:81: error: ‘chunk_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                                                 ^~~~~~~~~~~~
                                                                                 setbuffer
main.c:319:61: error: ‘bytes_read’ undeclared (first use in this function)
     printf("MASTER: Dimensione effettiva del chunk: %ld\n", bytes_read);
                                                             ^~~~~~~~~~
main.c:322:12: error: ‘file’ undeclared (first use in this function); did you mean ‘free’?
     fclose(file);
            ^~~~
            free
main.c:331:83: error: ‘i’ undeclared (first use in this function)
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                   ^
main.c:331:86: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘chunk_buffer’?
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                      ^~~~~~~~~~
                                                                                      chunk_buffer
main.c:341:5: error: ‘offset’ undeclared (first use in this function); did you mean ‘offsets’?
     offset += chunk_size;
     ^~~~~~
     offsets
main.c:347:9: error: ‘total_sent’ undeclared (first use in this function); did you mean ‘total_size’?
     if (total_sent != total_size)
         ^~~~~~~~~~
         total_size
main.c:380:5: error: ‘else’ without a previous ‘if’
     else
     ^~~~
main.c: In function ‘main’:
main.c:316:62: error: ‘current_file_size’ undeclared (first use in this function); did you mean ‘get_total_file_size’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                              ^~~~~~~~~~~~~~~~~
                                                              get_total_file_size
main.c:316:62: note: each undeclared identifier is reported only once for each function it appears in
main.c:316:81: error: ‘chunk_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                                                 ^~~~~~~~~~~~
                                                                                 setbuffer
main.c:319:61: error: ‘bytes_read’ undeclared (first use in this function)
     printf("MASTER: Dimensione effettiva del chunk: %ld\n", bytes_read);
                                                             ^~~~~~~~~~
main.c:322:12: error: ‘file’ undeclared (first use in this function); did you mean ‘free’?
     fclose(file);
            ^~~~
            free
main.c:331:83: error: ‘i’ undeclared (first use in this function)
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                   ^
main.c:331:86: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘chunk_buffer’?
     printf("MASTER: Dimensione effettiva del chunk inviato a processo %d: %ld\n", i, chunk_size);
                                                                                      ^~~~~~~~~~
                                                                                      chunk_buffer
main.c:341:5: error: ‘offset’ undeclared (first use in this function); did you mean ‘offsets’?
     offset += chunk_size;
     ^~~~~~
     offsets
main.c:347:9: error: ‘total_sent’ undeclared (first use in this function); did you mean ‘total_size’?
     if (total_sent != total_size)
         ^~~~~~~~~~
         total_size
main.c:380:5: error: ‘else’ without a previous ‘if’
     else
     ^~~~
main.c: In function ‘main’:
main.c:315:62: error: ‘current_file_size’ undeclared (first use in this function); did you mean ‘get_total_file_size’?
     printf("MASTER: Contenuto del chunk letto: %.*s\n", (int)current_file_size, chunk_buffer);
                                                              ^~~~~~~~~~~~~~~~~
                                                              get_total_file_size
main.c:315:62: note: each undeclared identifier is reported only once for each function it appears in
main.c:321:12: error: ‘file’ undeclared (first use in this function); did you mean ‘free’?
     fclose(file);
            ^~~~
            free
main.c:344:18: error: ‘chunk_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
     MPI_Free_mem(chunk_buffer);
                  ^~~~~~~~~~~~
                  setbuffer
main.c:347:9: error: ‘total_sent’ undeclared (first use in this function); did you mean ‘total_size’?
     if (total_sent != total_size)
         ^~~~~~~~~~
         total_size
main.c:369:96: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘chunk_buffer’?
         printf("MASTER: Ricevuto la dimensione del chunk %d (%ld bytes) dal processo %d\n", i, chunk_size, i);
                                                                                                ^~~~~~~~~~
                                                                                                chunk_buffer
main.c:380:5: error: ‘else’ without a previous ‘if’
     else
     ^~~~
main.c: In function ‘main’:
main.c:262:19: warning: passing argument 1 of ‘fseek’ from incompatible pointer type [-Wincompatible-pointer-types]
             fseek(dir, offset, SEEK_SET);
                   ^~~
In file included from main.c:1:0:
/usr/include/stdio.h:684:12: note: expected ‘FILE * {aka struct _IO_FILE *}’ but argument is of type ‘DIR * {aka struct __dirstream *}’
 extern int fseek (FILE *__stream, long int __off, int __whence);
            ^~~~~
main.c:265:72: warning: passing argument 4 of ‘fread’ from incompatible pointer type [-Wincompatible-pointer-types]
             size_t bytes_read_now = fread(chunk_buffer, 1, chunk_size, dir);
                                                                        ^~~
In file included from main.c:1:0:
/usr/include/stdio.h:646:15: note: expected ‘FILE * restrict {aka struct _IO_FILE * restrict}’ but argument is of type ‘DIR * {aka struct __dirstream *}’
 extern size_t fread (void *__restrict __ptr, size_t __size,
               ^~~~~
main.c: In function ‘main’:
main.c:262:19: warning: passing argument 1 of ‘fseek’ from incompatible pointer type [-Wincompatible-pointer-types]
             fseek(dir, offset, SEEK_SET);
                   ^~~
In file included from main.c:1:0:
/usr/include/stdio.h:684:12: note: expected ‘FILE * {aka struct _IO_FILE *}’ but argument is of type ‘DIR * {aka struct __dirstream *}’
 extern int fseek (FILE *__stream, long int __off, int __whence);
            ^~~~~
main.c:265:72: warning: passing argument 4 of ‘fread’ from incompatible pointer type [-Wincompatible-pointer-types]
             size_t bytes_read_now = fread(chunk_buffer, 1, chunk_size, dir);
                                                                        ^~~
In file included from main.c:1:0:
/usr/include/stdio.h:646:15: note: expected ‘FILE * restrict {aka struct _IO_FILE * restrict}’ but argument is of type ‘DIR * {aka struct __dirstream *}’
 extern size_t fread (void *__restrict __ptr, size_t __size,
               ^~~~~
main.c: In function ‘main’:
main.c:230:20: error: ‘filepath’ undeclared (first use in this function); did you mean ‘file’?
 FILE *file = fopen(filepath, "r");
                    ^~~~~~~~
                    file
main.c:230:20: note: each undeclared identifier is reported only once for each function it appears in
main.c:237:43: warning: passing argument 1 of ‘get_total_file_size’ from incompatible pointer type [-Wincompatible-pointer-types]
     long total_size = get_total_file_size(file, INPUT_DIR);
                                           ^~~~
main.c:181:6: note: expected ‘DIR * {aka struct __dirstream *}’ but argument is of type ‘FILE * {aka struct _IO_FILE *}’
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c:276:18: warning: passing argument 1 of ‘closedir’ from incompatible pointer type [-Wincompatible-pointer-types]
         closedir(file);
                  ^~~~
In file included from main.c:4:0:
/usr/include/dirent.h:149:12: note: expected ‘DIR * {aka struct __dirstream *}’ but argument is of type ‘FILE * {aka struct _IO_FILE *}’
 extern int closedir (DIR *__dirp) __nonnull ((1));
            ^~~~~~~~
main.c: In function ‘main’:
main.c:230:74: error: ‘entry’ undeclared (first use in this function)
                 snprintf(filepath, sizeof(filepath), "%s/%s", INPUT_DIR, entry->d_name);
                                                                          ^~~~~
main.c:230:74: note: each undeclared identifier is reported only once for each function it appears in
main.c:239:43: warning: passing argument 1 of ‘get_total_file_size’ from incompatible pointer type [-Wincompatible-pointer-types]
     long total_size = get_total_file_size(file, INPUT_DIR);
                                           ^~~~
main.c:181:6: note: expected ‘DIR * {aka struct __dirstream *}’ but argument is of type ‘FILE * {aka struct _IO_FILE *}’
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c:278:18: warning: passing argument 1 of ‘closedir’ from incompatible pointer type [-Wincompatible-pointer-types]
         closedir(file);
                  ^~~~
In file included from main.c:4:0:
/usr/include/dirent.h:149:12: note: expected ‘DIR * {aka struct __dirstream *}’ but argument is of type ‘FILE * {aka struct _IO_FILE *}’
 extern int closedir (DIR *__dirp) __nonnull ((1));
            ^~~~~~~~
main.c: In function ‘main’:
main.c:238:43: warning: passing argument 1 of ‘get_total_file_size’ from incompatible pointer type [-Wincompatible-pointer-types]
     long total_size = get_total_file_size(file, INPUT_DIR);
                                           ^~~~
main.c:181:6: note: expected ‘DIR * {aka struct __dirstream *}’ but argument is of type ‘FILE * {aka struct _IO_FILE *}’
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:238:43: warning: passing argument 1 of ‘get_total_file_size’ from incompatible pointer type [-Wincompatible-pointer-types]
     long total_size = get_total_file_size(file, INPUT_DIR);
                                           ^~~~
main.c:181:6: note: expected ‘DIR * {aka struct __dirstream *}’ but argument is of type ‘FILE * {aka struct _IO_FILE *}’
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:238:43: warning: passing argument 1 of ‘get_total_file_size’ from incompatible pointer type [-Wincompatible-pointer-types]
     long total_size = get_total_file_size(file, INPUT_DIR);
                                           ^~~~
main.c:181:6: note: expected ‘DIR * {aka struct __dirstream *}’ but argument is of type ‘FILE * {aka struct _IO_FILE *}’
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:238:43: warning: passing argument 1 of ‘get_total_file_size’ from incompatible pointer type [-Wincompatible-pointer-types]
     long total_size = get_total_file_size(file, INPUT_DIR);
                                           ^~~~
main.c:181:6: note: expected ‘DIR * {aka struct __dirstream *}’ but argument is of type ‘FILE * {aka struct _IO_FILE *}’
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:238:43: warning: passing argument 1 of ‘get_total_file_size’ from incompatible pointer type [-Wincompatible-pointer-types]
     long total_size = get_total_file_size(file, INPUT_DIR);
                                           ^~~~
main.c:181:6: note: expected ‘DIR * {aka struct __dirstream *}’ but argument is of type ‘FILE * {aka struct _IO_FILE *}’
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘get_total_file_size’:
main.c:187:29: error: ‘dir’ undeclared (first use in this function); did you mean ‘div’?
     while ((entry = readdir(dir)) != NULL)
                             ^~~
                             div
main.c:187:29: note: each undeclared identifier is reported only once for each function it appears in
main.c:204:15: warning: passing argument 1 of ‘rewinddir’ from incompatible pointer type [-Wincompatible-pointer-types]
     rewinddir(file);
               ^~~~
In file included from main.c:4:0:
/usr/include/dirent.h:209:13: note: expected ‘DIR * {aka struct __dirstream *}’ but argument is of type ‘FILE * {aka struct _IO_FILE *}’
 extern void rewinddir (DIR *__dirp) __THROW __nonnull ((1));
             ^~~~~~~~~
main.c: In function ‘get_total_file_size’:
main.c:187:29: warning: passing argument 1 of ‘readdir’ from incompatible pointer type [-Wincompatible-pointer-types]
     while ((entry = readdir(file)) != NULL)
                             ^~~~
In file included from main.c:4:0:
/usr/include/dirent.h:162:23: note: expected ‘DIR * {aka struct __dirstream *}’ but argument is of type ‘FILE * {aka struct _IO_FILE *}’
 extern struct dirent *readdir (DIR *__dirp) __nonnull ((1));
                       ^~~~~~~
main.c:204:15: warning: passing argument 1 of ‘rewinddir’ from incompatible pointer type [-Wincompatible-pointer-types]
     rewinddir(file);
               ^~~~
In file included from main.c:4:0:
/usr/include/dirent.h:209:13: note: expected ‘DIR * {aka struct __dirstream *}’ but argument is of type ‘FILE * {aka struct _IO_FILE *}’
 extern void rewinddir (DIR *__dirp) __THROW __nonnull ((1));
             ^~~~~~~~~
main.c: In function ‘main’:
main.c:278:13: error: too few arguments to function ‘MPI_Isend’
             MPI_Isend(&bytes_read_now, 1, MPI_LONG, i, 0, MPI_COMM_WORLD);
             ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:279:13: error: too few arguments to function ‘MPI_Isend’
             MPI_Isend(chunk_buffer, bytes_read_now, MPI_CHAR, i, 0, MPI_COMM_WORLD);
             ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c: In function ‘main’:
main.c:324:16: warning: too many arguments for format [-Wformat-extra-args]
         printf("total_sent: \n",total_sent);
                ^~~~~~~~~~~~~~~~
main.c:325:16: warning: too many arguments for format [-Wformat-extra-args]
         printf("total_size: \n",total_size);
                ^~~~~~~~~~~~~~~~
main.c:329:9: error: expected ‘}’ before ‘else’
         else
         ^~~~
main.c: At top level:
main.c:354:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:387:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:387:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:388:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:389:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:324:17: warning: too many arguments for format [-Wformat-extra-args]
          printf("total_sent: \n",total_sent);
                 ^~~~~~~~~~~~~~~~
main.c:325:16: warning: too many arguments for format [-Wformat-extra-args]
         printf("total_size: \n",total_size);
                ^~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:314:23: error: incompatible types when initializing type ‘long int’ using type ‘FileSizeInfo {aka struct <anonymous>}’
     long total_size = get_total_file_size(INPUT_DIR);
                       ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:348:19: error: ‘file’ undeclared (first use in this function); did you mean ‘nice’?
             fseek(file, offset, SEEK_SET);
                   ^~~~
                   nice
main.c:348:19: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:314:23: error: incompatible types when initializing type ‘long int’ using type ‘FileSizeInfo {aka struct <anonymous>}’
     long total_size = get_total_file_size(INPUT_DIR);
                       ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:348:19: error: ‘file’ undeclared (first use in this function); did you mean ‘nice’?
             fseek(file, offset, SEEK_SET);
                   ^~~~
                   nice
main.c:348:19: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:215:27: error: ‘blockcounts_occurrence_node’ undeclared (first use in this function); did you mean ‘blocklengths_occurrence_node’?
 MPI_Type_create_struct(3, blockcounts_occurrence_node, offsets_occurrence_node, types_occurrence_node, &MPI_OCCURRENCE_NODE);
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
                           blocklengths_occurrence_node
main.c:215:27: note: each undeclared identifier is reported only once for each function it appears in
main.c:215:56: error: ‘offsets_occurrence_node’ undeclared (first use in this function); did you mean ‘types_occurrence_node’?
 MPI_Type_create_struct(3, blockcounts_occurrence_node, offsets_occurrence_node, types_occurrence_node, &MPI_OCCURRENCE_NODE);
                                                        ^~~~~~~~~~~~~~~~~~~~~~~
                                                        types_occurrence_node
main.c:389:85: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             printf("Processo %d: Ha ricevuto il chunk. Dimensione: %ld bytes\n", i, chunk_size);
                                                                                     ^~~~~~~~~~
                                                                                     total_size
main.c: In function ‘main’:
main.c:215:57: error: ‘offsets_occurrence_node’ undeclared (first use in this function); did you mean ‘types_occurrence_node’?
 MPI_Type_create_struct(3, blocklengths_occurrence_node, offsets_occurrence_node, types_occurrence_node, &MPI_OCCURRENCE_NODE);
                                                         ^~~~~~~~~~~~~~~~~~~~~~~
                                                         types_occurrence_node
main.c:215:57: note: each undeclared identifier is reported only once for each function it appears in
main.c:389:85: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             printf("Processo %d: Ha ricevuto il chunk. Dimensione: %ld bytes\n", i, chunk_size);
                                                                                     ^~~~~~~~~~
                                                                                     total_size
main.c: In function ‘main’:
main.c:215:57: error: ‘offsets_occurrence_node’ undeclared (first use in this function); did you mean ‘types_occurrence_node’?
 MPI_Type_create_struct(3, blocklengths_occurrence_node, offsets_occurrence_node, types_occurrence_node, &MPI_OCCURRENCE_NODE);
                                                         ^~~~~~~~~~~~~~~~~~~~~~~
                                                         types_occurrence_node
main.c:215:57: note: each undeclared identifier is reported only once for each function it appears in
main.c:389:85: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             printf("Processo %d: Ha ricevuto il chunk. Dimensione: %ld bytes\n", i, chunk_size);
                                                                                     ^~~~~~~~~~
                                                                                     total_size
main.c: In function ‘main’:
main.c:389:85: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             printf("Processo %d: Ha ricevuto il chunk. Dimensione: %ld bytes\n", i, chunk_size);
                                                                                     ^~~~~~~~~~
                                                                                     total_size
main.c:389:85: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:393:27: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             MPI_Alloc_mem(chunk_size, MPI_INFO_NULL, &recv_buffer);
                           ^~~~~~~~~~
                           total_size
main.c:393:27: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:397:92: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             printf("Processo %d: Ha ricevuto il chunk. Dimensione: %d bytes\n", rank, (int)chunk_size);
                                                                                            ^~~~~~~~~~
                                                                                            total_size
main.c:397:92: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:311:13: error: ‘total_sent’ undeclared (first use in this function); did you mean ‘total_size’?
             total_sent += bytes_read;
             ^~~~~~~~~~
             total_size
main.c:311:13: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:311:13: error: ‘total_sent’ undeclared (first use in this function); did you mean ‘total_size’?
             total_sent += bytes_read;
             ^~~~~~~~~~
             total_size
main.c:311:13: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:366:25: warning: passing argument 1 of ‘MPI_Waitall’ makes integer from pointer without a cast [-Wint-conversion]
             MPI_Waitall(&request_receive_size[i - 1], MPI_STATUS_IGNORE);
                         ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: expected ‘int’ but argument is of type ‘struct ompi_request_t **’
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:772:27: warning: passing argument 2 of ‘MPI_Waitall’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define MPI_STATUS_IGNORE ((MPI_Status *) 0)
                           ^
main.c:366:55: note: in expansion of macro ‘MPI_STATUS_IGNORE’
             MPI_Waitall(&request_receive_size[i - 1], MPI_STATUS_IGNORE);
                                                       ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘MPI_Status * {aka struct ompi_status_public_t *}’
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
main.c:366:13: error: too few arguments to function ‘MPI_Waitall’
             MPI_Waitall(&request_receive_size[i - 1], MPI_STATUS_IGNORE);
             ^~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: declared here
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
main.c:367:25: warning: passing argument 1 of ‘MPI_Waitall’ makes integer from pointer without a cast [-Wint-conversion]
             MPI_Waitall(&request_receive_buffer[i - 1], MPI_STATUS_IGNORE);
                         ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: expected ‘int’ but argument is of type ‘struct ompi_request_t **’
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:772:27: warning: passing argument 2 of ‘MPI_Waitall’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define MPI_STATUS_IGNORE ((MPI_Status *) 0)
                           ^
main.c:367:57: note: in expansion of macro ‘MPI_STATUS_IGNORE’
             MPI_Waitall(&request_receive_buffer[i - 1], MPI_STATUS_IGNORE);
                                                         ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘MPI_Status * {aka struct ompi_status_public_t *}’
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
main.c:367:13: error: too few arguments to function ‘MPI_Waitall’
             MPI_Waitall(&request_receive_buffer[i - 1], MPI_STATUS_IGNORE);
             ^~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: declared here
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
main.c:425:25: warning: passing argument 1 of ‘MPI_Waitall’ makes integer from pointer without a cast [-Wint-conversion]
             MPI_Waitall(&request_send_size[rank - 1], MPI_STATUS_IGNORE);
                         ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: expected ‘int’ but argument is of type ‘struct ompi_request_t **’
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:772:27: warning: passing argument 2 of ‘MPI_Waitall’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define MPI_STATUS_IGNORE ((MPI_Status *) 0)
                           ^
main.c:425:55: note: in expansion of macro ‘MPI_STATUS_IGNORE’
             MPI_Waitall(&request_send_size[rank - 1], MPI_STATUS_IGNORE);
                                                       ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘MPI_Status * {aka struct ompi_status_public_t *}’
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
main.c:425:13: error: too few arguments to function ‘MPI_Waitall’
             MPI_Waitall(&request_send_size[rank - 1], MPI_STATUS_IGNORE);
             ^~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: declared here
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
main.c:426:25: warning: passing argument 1 of ‘MPI_Waitall’ makes integer from pointer without a cast [-Wint-conversion]
             MPI_Waitall(&request_send_buffer[rank - 1], MPI_STATUS_IGNORE);
                         ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: expected ‘int’ but argument is of type ‘struct ompi_request_t **’
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:772:27: warning: passing argument 2 of ‘MPI_Waitall’ from incompatible pointer type [-Wincompatible-pointer-types]
 #define MPI_STATUS_IGNORE ((MPI_Status *) 0)
                           ^
main.c:426:57: note: in expansion of macro ‘MPI_STATUS_IGNORE’
             MPI_Waitall(&request_send_buffer[rank - 1], MPI_STATUS_IGNORE);
                                                         ^~~~~~~~~~~~~~~~~
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: expected ‘struct ompi_request_t **’ but argument is of type ‘MPI_Status * {aka struct ompi_status_public_t *}’
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
main.c:426:13: error: too few arguments to function ‘MPI_Waitall’
             MPI_Waitall(&request_send_buffer[rank - 1], MPI_STATUS_IGNORE);
             ^~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1835:20: note: declared here
 OMPI_DECLSPEC  int MPI_Waitall(int count, MPI_Request array_of_requests[],
                    ^~~~~~~~~~~
main.c: In function ‘main’:
main.c:315:23: warning: passing argument 1 of ‘fseek’ from incompatible pointer type [-Wincompatible-pointer-types]
                 fseek(dir, 0, SEEK_SET)
                       ^~~
In file included from main.c:1:0:
/usr/include/stdio.h:684:12: note: expected ‘FILE * {aka struct _IO_FILE *}’ but argument is of type ‘DIR * {aka struct __dirstream *}’
 extern int fseek (FILE *__stream, long int __off, int __whence);
            ^~~~~
main.c:316:13: error: expected ‘;’ before ‘}’ token
             }
             ^
main.c:352:23: error: ‘bytes_read_now’ undeclared (first use in this function); did you mean ‘bytes_read’?
             offset += bytes_read_now;
                       ^~~~~~~~~~~~~~
                       bytes_read
main.c:352:23: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:315:23: warning: passing argument 1 of ‘fseek’ from incompatible pointer type [-Wincompatible-pointer-types]
                 fseek(dir, 0, SEEK_SET)
                       ^~~
In file included from main.c:1:0:
/usr/include/stdio.h:684:12: note: expected ‘FILE * {aka struct _IO_FILE *}’ but argument is of type ‘DIR * {aka struct __dirstream *}’
 extern int fseek (FILE *__stream, long int __off, int __whence);
            ^~~~~
main.c:316:13: error: expected ‘;’ before ‘}’ token
             }
             ^
main.c:352:23: error: ‘bytes_read_now’ undeclared (first use in this function); did you mean ‘bytes_read’?
             offset += bytes_read_now;
                       ^~~~~~~~~~~~~~
                       bytes_read
main.c:352:23: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:413:78: error: ‘request_send_termination’ undeclared (first use in this function); did you mean ‘request_send_size’?
 MPI_Isend(&termination_message, 1, MPI_INT, MASTER_RANK, 0, MPI_COMM_WORLD, &request_send_termination);
                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~
                                                                              request_send_size
main.c:413:78: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:282:19: error: ‘termination_message’ undeclared (first use in this function)
         MPI_Recv(&termination_message, 1, MPI_INT, 1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                   ^~~~~~~~~~~~~~~~~~~
main.c:282:19: note: each undeclared identifier is reported only once for each function it appears in
main.c:304:86: error: ‘request_send_termination’ undeclared (first use in this function); did you mean ‘request_send_size’?
         MPI_Isend(&termination_message, 1, MPI_INT, MASTER_RANK, 0, MPI_COMM_WORLD, &request_send_termination);
                                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~
                                                                                      request_send_size
main.c:329:1: error: expected declaration or statement at end of input
 }
 ^
main.c: In function ‘main’:
main.c:304:86: error: ‘request_send_termination’ undeclared (first use in this function); did you mean ‘request_send_size’?
         MPI_Isend(&termination_message, 1, MPI_INT, MASTER_RANK, 0, MPI_COMM_WORLD, &request_send_termination);
                                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~
                                                                                      request_send_size
main.c:304:86: note: each undeclared identifier is reported only once for each function it appears in
main.c:329:1: error: expected declaration or statement at end of input
 }
 ^
main.c: In function ‘main’:
main.c:304:86: error: ‘request_send_termination’ undeclared (first use in this function); did you mean ‘request_send_size’?
         MPI_Isend(&termination_message, 1, MPI_INT, MASTER_RANK, 0, MPI_COMM_WORLD, &request_send_termination);
                                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~
                                                                                      request_send_size
main.c:304:86: note: each undeclared identifier is reported only once for each function it appears in
main.c:329:1: error: expected declaration or statement at end of input
 }
 ^
main.c: In function ‘main’:
main.c:329:1: error: expected declaration or statement at end of input
 }
 ^
main.c: In function ‘main’:
main.c:285:13: error: expected ‘;’ before ‘printf’
             printf("MASTER: Assegnato al processo %d: %.*s\n", i, (int)chunk_size, chunk_buffer);
             ^~~~~~
main.c: In function ‘main’:
main.c:231:34: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
 int total_chunks = (total_size + chunk_size - 1) / chunk_size;
                                  ^~~~~~~~~~
                                  total_size
main.c:231:34: note: each undeclared identifier is reported only once for each function it appears in
main.c:329:13: error: ‘offset’ undeclared (first use in this function); did you mean ‘offsets’?
             offset += chunk_size;
             ^~~~~~
             offsets
main.c: In function ‘main’:
main.c:231:34: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
 int total_chunks = (total_size + chunk_size - 1) / chunk_size;
                                  ^~~~~~~~~~
                                  total_size
main.c:231:34: note: each undeclared identifier is reported only once for each function it appears in
main.c:329:13: error: ‘offset’ undeclared (first use in this function); did you mean ‘offsets’?
             offset += chunk_size;
             ^~~~~~
             offsets
main.c: In function ‘main’:
main.c:320:72: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘chunk_buffer’?
             printf("MASTER: Assegnato al processo %d: %.*s\n", i, (int)chunk_size, chunk_buffer);
                                                                        ^~~~~~~~~~
                                                                        chunk_buffer
main.c:320:72: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:326:23: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘chunk_buffer’?
             offset += chunk_size;
                       ^~~~~~~~~~
                       chunk_buffer
main.c:326:23: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:355:100: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             printf("MASTER: Ricevuto la dimensione del chunk %d (%ld bytes) dal processo %d\n", i, chunk_size, i);
                                                                                                    ^~~~~~~~~~
                                                                                                    total_size
main.c:355:100: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:386:47: error: ‘chunk_size’ undeclared (first use in this function); did you mean ‘total_size’?
             initializeHashtable((unsigned int)chunk_size);
                                               ^~~~~~~~~~
                                               total_size
main.c:386:47: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:315:13: error: too few arguments to function ‘MPI_Isend’
             MPI_Isend(&actual_chunk_size, 1, MPI_LONG, i, 0, MPI_COMM_WORLD);
             ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:317:13: error: too few arguments to function ‘MPI_Isend’
             MPI_Isend(chunk_buffer, actual_chunk_size, MPI_CHAR, i, 0, MPI_COMM_WORLD);
             ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:359:100: error: ‘actual_chunk_size’ undeclared (first use in this function); did you mean ‘approx_chunk_size’?
             printf("MASTER: Ricevuto la dimensione del chunk %d (%ld bytes) dal processo %d\n", i, actual_chunk_size, i);
                                                                                                    ^~~~~~~~~~~~~~~~~
                                                                                                    approx_chunk_size
main.c:359:100: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:315:13: error: too few arguments to function ‘MPI_Isend’
             MPI_Isend(&actual_chunk_size, 1, MPI_LONG, i, 0, MPI_COMM_WORLD);
             ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:317:13: error: too few arguments to function ‘MPI_Isend’
             MPI_Isend(chunk_buffer, actual_chunk_size, MPI_CHAR, i, 0, MPI_COMM_WORLD);
             ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:359:100: error: ‘actual_chunk_size’ undeclared (first use in this function); did you mean ‘approx_chunk_size’?
             printf("MASTER: Ricevuto la dimensione del chunk %d (%ld bytes) dal processo %d\n", i, actual_chunk_size, i);
                                                                                                    ^~~~~~~~~~~~~~~~~
                                                                                                    approx_chunk_size
main.c:359:100: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:315:13: error: too few arguments to function ‘MPI_Isend’
             MPI_Isend(&actual_chunk_size, 1, MPI_LONG, i, 0, MPI_COMM_WORLD);
             ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:317:13: error: too few arguments to function ‘MPI_Isend’
             MPI_Isend(chunk_buffer, actual_chunk_size, MPI_CHAR, i, 0, MPI_COMM_WORLD);
             ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c: In function ‘main’:
main.c:254:23: error: ‘MAX_CHUNK_SIZE’ undeclared (first use in this function); did you mean ‘MPI_WIN_SIZE’?
         MPI_Alloc_mem(MAX_CHUNK_SIZE, MPI_INFO_NULL, &chunk_buffer);
                       ^~~~~~~~~~~~~~
                       MPI_WIN_SIZE
main.c:254:23: note: each undeclared identifier is reported only once for each function it appears in
main.c:321:13: error: too few arguments to function ‘MPI_Isend’
             MPI_Isend(&bytes_read, 1, MPI_LONG, i, 0, MPI_COMM_WORLD);
             ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:323:13: error: too few arguments to function ‘MPI_Isend’
             MPI_Isend(chunk_buffer, bytes_read, MPI_CHAR, i, 0, MPI_COMM_WORLD);
             ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c: In function ‘createMPIOccurrenceNode’:
main.c:208:62: error: ‘MPI_OCCURRENCE_NODE’ undeclared (first use in this function); did you mean ‘OMPI_COMM_TYPE_NODE’?
     MPI_Type_create_struct(3, blocklengths, offsets, types, &MPI_OCCURRENCE_NODE);
                                                              ^~~~~~~~~~~~~~~~~~~
                                                              OMPI_COMM_TYPE_NODE
main.c:208:62: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:267:48: error: ‘size’ undeclared (first use in this function); did you mean ‘size_t’?
 MPI_Request *requests = (MPI_Request *)malloc((size - 1) * sizeof(MPI_Request));
                                                ^~~~
                                                size_t
main.c:267:48: note: each undeclared identifier is reported only once for each function it appears in
main.c:272:27: error: ‘avg_partition_size’ undeclared (first use in this function)
     long start_byte = i * avg_partition_size;
                           ^~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:269:21: error: ‘size’ undeclared (first use in this function); did you mean ‘size_t’?
 for (int i = 1; i < size; ++i)
                     ^~~~
                     size_t
main.c:269:21: note: each undeclared identifier is reported only once for each function it appears in
main.c:272:27: error: ‘avg_partition_size’ undeclared (first use in this function)
     long start_byte = i * avg_partition_size;
                           ^~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:274:27: error: ‘avg_partition_size’ undeclared (first use in this function)
     long start_byte = i * avg_partition_size;
                           ^~~~~~~~~~~~~~~~~~
main.c:274:27: note: each undeclared identifier is reported only once for each function it appears in
main.c:287:13: error: ‘size’ undeclared (first use in this function); did you mean ‘size_t’?
 MPI_Waitall(size - 1, requests, MPI_STATUSES_IGNORE);
             ^~~~
             size_t
main.c: In function ‘main’:
main.c:282:45: error: ‘end_byte’ undeclared (first use in this function); did you mean ‘start_byte’?
     last_space_index = (last_space_index <= end_byte) ? last_space_index : end_byte;
                                             ^~~~~~~~
                                             start_byte
main.c:282:45: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:282:45: error: ‘end_byte’ undeclared (first use in this function); did you mean ‘start_byte’?
     last_space_index = (last_space_index <= end_byte) ? last_space_index : end_byte;
                                             ^~~~~~~~
                                             start_byte
main.c:282:45: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:282:41: error: ‘end_byte’ undeclared (first use in this function); did you mean ‘start_byte’?
 last_space_index = (last_space_index <= end_byte) ? last_space_index : end_byte;
                                         ^~~~~~~~
                                         start_byte
main.c:282:41: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:278:56: error: ‘start_byte’ undeclared (first use in this function); did you mean ‘extra_bytes’?
     long last_space_index = (i == num_processes - 1) ? start_byte + extra_bytes : start_byte + avg_partition_size;
                                                        ^~~~~~~~~~
                                                        extra_bytes
main.c:278:56: note: each undeclared identifier is reported only once for each function it appears in
main.c:288:1: error: expected expression before ‘/’ token
 /   / Calcola start_byte, end_byte per ciascun processo SLAVE
 ^
main.c: In function ‘main’:
main.c:278:56: error: ‘start_byte’ undeclared (first use in this function); did you mean ‘extra_bytes’?
     long last_space_index = (i == num_processes - 1) ? start_byte + extra_bytes : start_byte + avg_partition_size;
                                                        ^~~~~~~~~~
                                                        extra_bytes
main.c:278:56: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:278:56: error: ‘start_byte’ undeclared (first use in this function); did you mean ‘extra_bytes’?
     long last_space_index = (i == num_processes - 1) ? start_byte + extra_bytes : start_byte + avg_partition_size;
                                                        ^~~~~~~~~~
                                                        extra_bytes
main.c:278:56: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:306:27: error: ‘global_offset’ undeclared (first use in this function); did you mean ‘current_offset’?
             start_byte += global_offset;
                           ^~~~~~~~~~~~~
                           current_offset
main.c:306:27: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:306:27: error: ‘global_offset’ undeclared (first use in this function); did you mean ‘current_offset’?
             start_byte += global_offset;
                           ^~~~~~~~~~~~~
                           current_offset
main.c:306:27: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:306:15: error: ‘global_offset’ undeclared (first use in this function); did you mean ‘current_offset’?
 start_byte += global_offset;
               ^~~~~~~~~~~~~
               current_offset
main.c:306:15: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:289:13: error: expected ‘;’ before ‘}’ token
             }
             ^
main.c: In function ‘main’:
main.c:296:40: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
                 start_byte = (i - 1) * byte_count + extra_bytes;
                                        ^~~~~~~~~~
                                        file_count
main.c:296:40: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:294:40: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
                 start_byte = (i - 1) * byte_count + extra_bytes;
                                        ^~~~~~~~~~
                                        file_count
main.c:294:40: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:294:40: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
                 start_byte = (i - 1) * byte_count + extra_bytes;
                                        ^~~~~~~~~~
                                        file_count
main.c:294:40: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘countWordsInChunk’:
main.c:131:25: warning: passing argument 1 of ‘strtok’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
     char *word = strtok(chunk, " ");
                         ^~~~~
In file included from main.c:3:0:
/usr/include/string.h:335:14: note: expected ‘char * restrict’ but argument is of type ‘const char *’
 extern char *strtok (char *__restrict __s, const char *__restrict __delim)
              ^~~~~~
main.c: In function ‘main’:
main.c:384:34: error: ‘recv_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
             char *token = strtok(recv_buffer, " ");
                                  ^~~~~~~~~~~
                                  setbuffer
main.c:384:34: note: each undeclared identifier is reported only once for each function it appears in
main.c:400:1: error: expected declaration or statement at end of input
 }
 ^
main.c: In function ‘main’:
main.c:400:1: error: expected declaration or statement at end of input
 }
 ^
main.c: In function ‘countWord’:
main.c:105:69: error: invalid application of ‘sizeof’ to incomplete type ‘struct WordFreq’
         struct WordFreq *newWord = (struct WordFreq *)malloc(sizeof(struct WordFreq));
                                                                     ^~~~~~
main.c:106:23: error: dereferencing pointer to incomplete type ‘struct WordFreq’
         strcpy(newWord->word, word);
                       ^~
main.c:130:69: error: invalid application of ‘sizeof’ to incomplete type ‘struct WordFreq’
         struct WordFreq *newWord = (struct WordFreq *)malloc(sizeof(struct WordFreq));
                                                                     ^~~~~~
main.c: At top level:
main.c:143:18: error: redefinition of ‘countWord’
 struct WordFreq *countWord(struct WordFreq *localWordCounts, const char *word)
                  ^~~~~~~~~
main.c:100:18: note: previous definition of ‘countWord’ was here
 struct WordFreq *countWord(struct WordFreq *localWordCounts, const char *word)
                  ^~~~~~~~~
main.c: In function ‘countWord’:
main.c:148:69: error: invalid application of ‘sizeof’ to incomplete type ‘struct WordFreq’
         struct WordFreq *newWord = (struct WordFreq *)malloc(sizeof(struct WordFreq));
                                                                     ^~~~~~
main.c:173:69: error: invalid application of ‘sizeof’ to incomplete type ‘struct WordFreq’
         struct WordFreq *newWord = (struct WordFreq *)malloc(sizeof(struct WordFreq));
                                                                     ^~~~~~
main.c: In function ‘main’:
main.c:415:27: error: ‘partitionSizes’ undeclared (first use in this function)
             startIndex += partitionSizes[j];
                           ^~~~~~~~~~~~~~
main.c:415:27: note: each undeclared identifier is reported only once for each function it appears in
main.c:422:28: error: ‘slaveFileInfo’ undeclared (first use in this function)
         FILE *file = fopen(slaveFileInfo->path, "rb");
                            ^~~~~~~~~~~~~
main.c:436:13: error: ‘data’ undeclared (first use in this function)
             data = (char *)malloc(byte_count + 1); // +1 per il terminatore nullo
             ^~~~
main.c: In function ‘countWord’:
main.c:105:69: error: invalid application of ‘sizeof’ to incomplete type ‘struct WordFreq’
         struct WordFreq *newWord = (struct WordFreq *)malloc(sizeof(struct WordFreq));
                                                                     ^~~~~~
main.c:106:23: error: dereferencing pointer to incomplete type ‘struct WordFreq’
         strcpy(newWord->word, word);
                       ^~
main.c:130:69: error: invalid application of ‘sizeof’ to incomplete type ‘struct WordFreq’
         struct WordFreq *newWord = (struct WordFreq *)malloc(sizeof(struct WordFreq));
                                                                     ^~~~~~
main.c: At top level:
main.c:143:18: error: redefinition of ‘countWord’
 struct WordFreq *countWord(struct WordFreq *localWordCounts, const char *word)
                  ^~~~~~~~~
main.c:100:18: note: previous definition of ‘countWord’ was here
 struct WordFreq *countWord(struct WordFreq *localWordCounts, const char *word)
                  ^~~~~~~~~
main.c: In function ‘countWord’:
main.c:148:69: error: invalid application of ‘sizeof’ to incomplete type ‘struct WordFreq’
         struct WordFreq *newWord = (struct WordFreq *)malloc(sizeof(struct WordFreq));
                                                                     ^~~~~~
main.c:173:69: error: invalid application of ‘sizeof’ to incomplete type ‘struct WordFreq’
         struct WordFreq *newWord = (struct WordFreq *)malloc(sizeof(struct WordFreq));
                                                                     ^~~~~~
main.c: In function ‘main’:
main.c:409:17: warning: implicit declaration of function ‘updateWordCount’ [-Wimplicit-function-declaration]
                 updateWordCount(token, rank);
                 ^~~~~~~~~~~~~~~
main.c: In function ‘countWord’:
main.c:105:69: error: invalid application of ‘sizeof’ to incomplete type ‘struct WordFreq’
         struct WordFreq *newWord = (struct WordFreq *)malloc(sizeof(struct WordFreq));
                                                                     ^~~~~~
main.c:106:23: error: dereferencing pointer to incomplete type ‘struct WordFreq’
         strcpy(newWord->word, word);
                       ^~
main.c:130:69: error: invalid application of ‘sizeof’ to incomplete type ‘struct WordFreq’
         struct WordFreq *newWord = (struct WordFreq *)malloc(sizeof(struct WordFreq));
                                                                     ^~~~~~
main.c: At top level:
main.c:143:18: error: redefinition of ‘countWord’
 struct WordFreq *countWord(struct WordFreq *localWordCounts, const char *word)
                  ^~~~~~~~~
main.c:100:18: note: previous definition of ‘countWord’ was here
 struct WordFreq *countWord(struct WordFreq *localWordCounts, const char *word)
                  ^~~~~~~~~
main.c: In function ‘countWord’:
main.c:148:69: error: invalid application of ‘sizeof’ to incomplete type ‘struct WordFreq’
         struct WordFreq *newWord = (struct WordFreq *)malloc(sizeof(struct WordFreq));
                                                                     ^~~~~~
main.c:173:69: error: invalid application of ‘sizeof’ to incomplete type ‘struct WordFreq’
         struct WordFreq *newWord = (struct WordFreq *)malloc(sizeof(struct WordFreq));
                                                                     ^~~~~~
main.c: In function ‘main’:
main.c:409:17: warning: implicit declaration of function ‘updateWordCount’ [-Wimplicit-function-declaration]
                 updateWordCount(token, rank);
                 ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:372:25: error: ‘all_data’ undeclared (first use in this function); did you mean ‘local_data’?
             MPI_Scatter(all_data, total_size / num_processes, MPI_CHAR, local_data,
                         ^~~~~~~~
                         local_data
main.c:372:25: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:377:49: error: ‘all_data’ undeclared (first use in this function); did you mean ‘local_data’?
             while (end_byte < total_size - 1 && all_data[end_byte] != ' ')
                                                 ^~~~~~~~
                                                 local_data
main.c:377:49: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:377:49: error: ‘all_data’ undeclared (first use in this function); did you mean ‘local_data’?
             while (end_byte < total_size - 1 && all_data[end_byte] != ' ')
                                                 ^~~~~~~~
                                                 local_data
main.c:377:49: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:313:9: warning: implicit declaration of function ‘calculate_chunk_range’ [-Wimplicit-function-declaration]
         calculate_chunk_range(total_size, num_processes, i, &start_byte, &end_byte);
         ^~~~~~~~~~~~~~~~~~~~~
main.c:355:49: error: ‘all_data’ undeclared (first use in this function); did you mean ‘local_data’?
             while (end_byte < total_size - 1 && all_data[end_byte] != ' ')
                                                 ^~~~~~~~
                                                 local_data
main.c:355:49: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘calculate_chunk_range’:
main.c:234:42: error: ‘all_data’ undeclared (first use in this function); did you mean ‘alloca’?
     while (*end_byte < total_size - 1 && all_data[*end_byte] != ' ')
                                          ^~~~~~~~
                                          alloca
main.c:234:42: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:379:49: error: ‘all_data’ undeclared (first use in this function); did you mean ‘local_data’?
             while (end_byte < total_size - 1 && all_data[end_byte] != ' ')
                                                 ^~~~~~~~
                                                 local_data
main.c: In function ‘main’:
main.c:379:49: error: ‘all_data’ undeclared (first use in this function); did you mean ‘local_data’?
             while (end_byte < total_size - 1 && all_data[end_byte] != ' ')
                                                 ^~~~~~~~
                                                 local_data
main.c:379:49: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:379:49: error: ‘all_data’ undeclared (first use in this function); did you mean ‘local_data’?
             while (end_byte < total_size - 1 && all_data[end_byte] != ' ')
                                                 ^~~~~~~~
                                                 local_data
main.c:379:49: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:377:41: error: ‘all_data’ undeclared (first use in this function); did you mean ‘local_data’?
     while (end_byte < total_size - 1 && all_data[end_byte] != ' ')
                                         ^~~~~~~~
                                         local_data
main.c:377:41: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:377:18: error: ‘MAX_CHUNK_SIZE’ undeclared (first use in this function); did you mean ‘MPI_WIN_SIZE’?
 if (byte_count > MAX_CHUNK_SIZE)
                  ^~~~~~~~~~~~~~
                  MPI_WIN_SIZE
main.c:377:18: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:295:13: error: redefinition of ‘file_count’
         int file_count = 0; // Nuova variabile per tenere traccia dei file letti
             ^~~~~~~~~~
main.c:277:13: note: previous definition of ‘file_count’ was here
         int file_count = 0;
             ^~~~~~~~~~
main.c: In function ‘main’:
main.c:369:27: error: ‘extra_bytes_for_previous’ undeclared (first use in this function)
             start_byte += extra_bytes_for_previous;
                           ^~~~~~~~~~~~~~~~~~~~~~~~
main.c:369:27: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:350:30: error: expected ‘;’ before ‘avg_partition_size’
         end_byte= start_byte avg_partition_size;
                              ^~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:341:31: error: expected expression before ‘.’ token
         if(end_byte != ' ' || .) {
                               ^
main.c: In function ‘main’:
main.c:351:9: error: ‘i’ undeclared (first use in this function)
     if (i > 2 && i != num_processes-1)
         ^
main.c:351:9: note: each undeclared identifier is reported only once for each function it appears in
main.c:354:9: error: ‘start_byte’ undeclared (first use in this function); did you mean ‘extra_bytes’?
         start_byte= end_byte + 1 ;
         ^~~~~~~~~~
         extra_bytes
main.c:354:21: error: ‘end_byte’ undeclared (first use in this function); did you mean ‘extra_bytes’?
         start_byte= end_byte + 1 ;
                     ^~~~~~~~
                     extra_bytes
main.c:381:14: error: ‘all_data’ undeclared (first use in this function); did you mean ‘alloca’?
         free(all_data);
              ^~~~~~~~
              alloca
main.c: At top level:
main.c:384:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:419:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:419:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:420:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:421:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:334:10: error: redefinition of ‘avg_partition_size’
     long avg_partition_size = total_size / num_processes;
          ^~~~~~~~~~~~~~~~~~
main.c:327:6: note: previous definition of ‘avg_partition_size’ was here
 long avg_partition_size = total_size / (num_processes - 1);
      ^~~~~~~~~~~~~~~~~~
main.c:370:107: error: ‘i’ undeclared (first use in this function)
     printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                           ^
main.c:370:107: note: each undeclared identifier is reported only once for each function it appears in
main.c:370:110: error: ‘start_byte’ undeclared (first use in this function); did you mean ‘extra_bytes’?
     printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                              ^~~~~~~~~~
                                                                                                              extra_bytes
main.c:370:122: error: ‘end_byte’ undeclared (first use in this function); did you mean ‘extra_bytes’?
     printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                                          ^~~~~~~~
                                                                                                                          extra_bytes
main.c:370:132: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
     printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                                                    ^~~~~~~~~~
                                                                                                                                    file_count
main.c:378:14: error: ‘all_data’ undeclared (first use in this function); did you mean ‘alloca’?
         free(all_data);
              ^~~~~~~~
              alloca
main.c: At top level:
main.c:381:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:416:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:416:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:417:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:418:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:366:107: error: ‘i’ undeclared (first use in this function)
     printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                           ^
main.c:366:107: note: each undeclared identifier is reported only once for each function it appears in
main.c:366:110: error: ‘start_byte’ undeclared (first use in this function); did you mean ‘extra_bytes’?
     printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                              ^~~~~~~~~~
                                                                                                              extra_bytes
main.c:366:122: error: ‘end_byte’ undeclared (first use in this function); did you mean ‘extra_bytes’?
     printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                                          ^~~~~~~~
                                                                                                                          extra_bytes
main.c:366:132: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
     printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                                                    ^~~~~~~~~~
                                                                                                                                    file_count
main.c:374:14: error: ‘all_data’ undeclared (first use in this function); did you mean ‘alloca’?
         free(all_data);
              ^~~~~~~~
              alloca
main.c: At top level:
main.c:377:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:412:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:412:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:413:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:414:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:367:16: error: ‘start_byte’ undeclared (first use in this function); did you mean ‘extra_bytes’?
     MPI_Isend(&start_byte, 1, MPI_LONG, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                ^~~~~~~~~~
                extra_bytes
main.c:367:16: note: each undeclared identifier is reported only once for each function it appears in
main.c:367:41: error: ‘i’ undeclared (first use in this function)
     MPI_Isend(&start_byte, 1, MPI_LONG, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                         ^
main.c:369:38: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
     MPI_Isend(all_data + start_byte, byte_count, MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                      ^~~~~~~~~~
                                      file_count
main.c:374:14: error: ‘all_data’ undeclared (first use in this function); did you mean ‘alloca’?
         free(all_data);
              ^~~~~~~~
              alloca
main.c: At top level:
main.c:377:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:412:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:412:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:413:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:414:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:369:38: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
     MPI_Isend(all_data + start_byte, byte_count, MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                      ^~~~~~~~~~
                                      file_count
main.c:369:38: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:337:18: error: ‘i’ undeclared (first use in this function)
             for (i = 1; i < num_processes; i++)
                  ^
main.c:337:18: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:404:67: error: ‘i’ undeclared (first use in this function)
         printf("Processo %d: start_byte = %ld, end_byte = %ld\n", i, start_byte, end_byte);
                                                                   ^
main.c:404:67: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:413:45: error: ‘i’ undeclared (first use in this function)
         MPI_Isend(&start_byte, 1, MPI_LONG, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                             ^
main.c:413:45: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:461:1: error: expected declaration or statement at end of input
 }
 ^
main.c: In function ‘main’:
main.c:461:1: error: expected declaration or statement at end of input
 }
 ^
main.c: In function ‘main’:
main.c:354:21: error: expected ‘;’ before ‘while’
                     while (end_byte < total_size && all_data[end_byte] != ' ' && all_data[end_byte] != '.' && all_data[end_byte] != ',')
                     ^~~~~
main.c: In function ‘main’:
main.c:373:71: error: ‘i’ undeclared (first use in this function)
             printf("Processo %d: start_byte = %ld, end_byte = %ld\n", i, start_byte, end_byte);
                                                                       ^
main.c:373:71: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:413:112: error: ‘i’ undeclared (first use in this function)
          printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                                ^
main.c:413:112: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:343:153: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
                          printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                                                                         ^~~~~~~~~~
                                                                                                                                                         file_count
main.c:343:153: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:345:21: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
          MPI_Isend(&byte_count, 1, MPI_LONG, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                     ^~~~~~~~~~
                     file_count
main.c:345:21: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:346:43: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
          MPI_Isend(all_data + start_byte, byte_count, MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                           ^~~~~~~~~~
                                           file_count
main.c:346:43: note: each undeclared identifier is reported only once for each function it appears in
In file included from main.c:6:0:
main.c: In function ‘main’:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 2 of ‘MPI_Isend’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1060:18: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_CHAR OMPI_PREDEFINED_GLOBAL(MPI_Datatype, ompi_mpi_char)
                  ^~~~~~~~~~~~~~~~~~~~~~
main.c:346:59: note: in expansion of macro ‘MPI_CHAR’
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                           ^~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘int’ but argument is of type ‘struct ompi_datatype_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:346:69: warning: passing argument 3 of ‘MPI_Isend’ makes pointer from integer without a cast [-Wint-conversion]
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                     ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘MPI_Datatype {aka struct ompi_datatype_t *}’ but argument is of type ‘int’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 5 of ‘MPI_Isend’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1034:24: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_COMM_WORLD OMPI_PREDEFINED_GLOBAL( MPI_Comm, ompi_mpi_comm_world)
                        ^~~~~~~~~~~~~~~~~~~~~~
main.c:346:75: note: in expansion of macro ‘MPI_COMM_WORLD’
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                           ^~~~~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘int’ but argument is of type ‘struct ompi_communicator_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:346:91: warning: passing argument 6 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                                           ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘MPI_Comm {aka struct ompi_communicator_t *}’ but argument is of type ‘struct ompi_request_t **’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:346:10: error: too few arguments to function ‘MPI_Isend’
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
          ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:377:21: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
          MPI_Isend(&byte_count, 1, MPI_LONG, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                     ^~~~~~~~~~
                     file_count
main.c:377:21: note: each undeclared identifier is reported only once for each function it appears in
In file included from main.c:6:0:
main.c: In function ‘main’:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 2 of ‘MPI_Isend’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1060:18: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_CHAR OMPI_PREDEFINED_GLOBAL(MPI_Datatype, ompi_mpi_char)
                  ^~~~~~~~~~~~~~~~~~~~~~
main.c:346:59: note: in expansion of macro ‘MPI_CHAR’
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                           ^~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘int’ but argument is of type ‘struct ompi_datatype_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:346:69: warning: passing argument 3 of ‘MPI_Isend’ makes pointer from integer without a cast [-Wint-conversion]
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                     ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘MPI_Datatype {aka struct ompi_datatype_t *}’ but argument is of type ‘int’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 5 of ‘MPI_Isend’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1034:24: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_COMM_WORLD OMPI_PREDEFINED_GLOBAL( MPI_Comm, ompi_mpi_comm_world)
                        ^~~~~~~~~~~~~~~~~~~~~~
main.c:346:75: note: in expansion of macro ‘MPI_COMM_WORLD’
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                           ^~~~~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘int’ but argument is of type ‘struct ompi_communicator_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:346:91: warning: passing argument 6 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                                           ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘MPI_Comm {aka struct ompi_communicator_t *}’ but argument is of type ‘struct ompi_request_t **’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:346:10: error: too few arguments to function ‘MPI_Isend’
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
          ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 2 of ‘MPI_Isend’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1060:18: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_CHAR OMPI_PREDEFINED_GLOBAL(MPI_Datatype, ompi_mpi_char)
                  ^~~~~~~~~~~~~~~~~~~~~~
main.c:378:60: note: in expansion of macro ‘MPI_CHAR’
          MPI_Isend(all_data + start_byte, /*byte_count, */ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                            ^~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘int’ but argument is of type ‘struct ompi_datatype_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:378:70: warning: passing argument 3 of ‘MPI_Isend’ makes pointer from integer without a cast [-Wint-conversion]
          MPI_Isend(all_data + start_byte, /*byte_count, */ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                      ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘MPI_Datatype {aka struct ompi_datatype_t *}’ but argument is of type ‘int’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 5 of ‘MPI_Isend’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1034:24: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_COMM_WORLD OMPI_PREDEFINED_GLOBAL( MPI_Comm, ompi_mpi_comm_world)
                        ^~~~~~~~~~~~~~~~~~~~~~
main.c:378:76: note: in expansion of macro ‘MPI_COMM_WORLD’
          MPI_Isend(all_data + start_byte, /*byte_count, */ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                            ^~~~~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘int’ but argument is of type ‘struct ompi_communicator_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:378:92: warning: passing argument 6 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
          MPI_Isend(all_data + start_byte, /*byte_count, */ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                                            ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘MPI_Comm {aka struct ompi_communicator_t *}’ but argument is of type ‘struct ompi_request_t **’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:378:10: error: too few arguments to function ‘MPI_Isend’
          MPI_Isend(all_data + start_byte, /*byte_count, */ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
          ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:416:21: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
          MPI_Isend(&byte_count, 1, MPI_LONG, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                     ^~~~~~~~~~
                     file_count
main.c:416:21: note: each undeclared identifier is reported only once for each function it appears in
In file included from main.c:6:0:
main.c: In function ‘main’:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 2 of ‘MPI_Isend’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1060:18: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_CHAR OMPI_PREDEFINED_GLOBAL(MPI_Datatype, ompi_mpi_char)
                  ^~~~~~~~~~~~~~~~~~~~~~
main.c:346:59: note: in expansion of macro ‘MPI_CHAR’
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                           ^~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘int’ but argument is of type ‘struct ompi_datatype_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:346:69: warning: passing argument 3 of ‘MPI_Isend’ makes pointer from integer without a cast [-Wint-conversion]
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                     ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘MPI_Datatype {aka struct ompi_datatype_t *}’ but argument is of type ‘int’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 5 of ‘MPI_Isend’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1034:24: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_COMM_WORLD OMPI_PREDEFINED_GLOBAL( MPI_Comm, ompi_mpi_comm_world)
                        ^~~~~~~~~~~~~~~~~~~~~~
main.c:346:75: note: in expansion of macro ‘MPI_COMM_WORLD’
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                           ^~~~~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘int’ but argument is of type ‘struct ompi_communicator_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:346:91: warning: passing argument 6 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                                           ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘MPI_Comm {aka struct ompi_communicator_t *}’ but argument is of type ‘struct ompi_request_t **’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:346:10: error: too few arguments to function ‘MPI_Isend’
          MPI_Isend(all_data + start_byte, /*byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
          ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 2 of ‘MPI_Isend’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1060:18: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_CHAR OMPI_PREDEFINED_GLOBAL(MPI_Datatype, ompi_mpi_char)
                  ^~~~~~~~~~~~~~~~~~~~~~
main.c:378:60: note: in expansion of macro ‘MPI_CHAR’
          MPI_Isend(all_data + start_byte, /*byte_count, */ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                            ^~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘int’ but argument is of type ‘struct ompi_datatype_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:378:70: warning: passing argument 3 of ‘MPI_Isend’ makes pointer from integer without a cast [-Wint-conversion]
          MPI_Isend(all_data + start_byte, /*byte_count, */ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                      ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘MPI_Datatype {aka struct ompi_datatype_t *}’ but argument is of type ‘int’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 5 of ‘MPI_Isend’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1034:24: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_COMM_WORLD OMPI_PREDEFINED_GLOBAL( MPI_Comm, ompi_mpi_comm_world)
                        ^~~~~~~~~~~~~~~~~~~~~~
main.c:378:76: note: in expansion of macro ‘MPI_COMM_WORLD’
          MPI_Isend(all_data + start_byte, /*byte_count, */ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                            ^~~~~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘int’ but argument is of type ‘struct ompi_communicator_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:378:92: warning: passing argument 6 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
          MPI_Isend(all_data + start_byte, /*byte_count, */ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                                            ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘MPI_Comm {aka struct ompi_communicator_t *}’ but argument is of type ‘struct ompi_request_t **’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:378:10: error: too few arguments to function ‘MPI_Isend’
          MPI_Isend(all_data + start_byte, /*byte_count, */ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
          ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 2 of ‘MPI_Isend’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1060:18: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_CHAR OMPI_PREDEFINED_GLOBAL(MPI_Datatype, ompi_mpi_char)
                  ^~~~~~~~~~~~~~~~~~~~~~
main.c:417:59: note: in expansion of macro ‘MPI_CHAR’
          MPI_Isend(all_data + start_byte,/* byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                           ^~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘int’ but argument is of type ‘struct ompi_datatype_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:417:69: warning: passing argument 3 of ‘MPI_Isend’ makes pointer from integer without a cast [-Wint-conversion]
          MPI_Isend(all_data + start_byte,/* byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                     ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘MPI_Datatype {aka struct ompi_datatype_t *}’ but argument is of type ‘int’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 5 of ‘MPI_Isend’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1034:24: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_COMM_WORLD OMPI_PREDEFINED_GLOBAL( MPI_Comm, ompi_mpi_comm_world)
                        ^~~~~~~~~~~~~~~~~~~~~~
main.c:417:75: note: in expansion of macro ‘MPI_COMM_WORLD’
          MPI_Isend(all_data + start_byte,/* byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                           ^~~~~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘int’ but argument is of type ‘struct ompi_communicator_t *’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:417:91: warning: passing argument 6 of ‘MPI_Isend’ from incompatible pointer type [-Wincompatible-pointer-types]
          MPI_Isend(all_data + start_byte,/* byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                                           ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: expected ‘MPI_Comm {aka struct ompi_communicator_t *}’ but argument is of type ‘struct ompi_request_t **’
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c:417:10: error: too few arguments to function ‘MPI_Isend’
          MPI_Isend(all_data + start_byte,/* byte_count,*/ MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
          ^~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1564:20: note: declared here
 OMPI_DECLSPEC  int MPI_Isend(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~~
main.c: In function ‘main’:
main.c:343:153: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
                          printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                                                                         ^~~~~~~~~~
                                                                                                                                                         file_count
main.c:343:153: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:343:153: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
                          printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                                                                         ^~~~~~~~~~
                                                                                                                                                         file_count
main.c:343:153: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:378:149: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘file_count’?
                      printf("Processo %d: Invia a processo %d - start_byte: %ld, end_byte: %ld , byte_count: %ld\n", rank, i, start_byte, end_byte, byte_count);
                                                                                                                                                     ^~~~~~~~~~
                                                                                                                                                     file_count
main.c:378:149: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:426:54: error: subscripted value is neither array nor pointer nor vector
                     end_byte =  total_size - end_byte[i-1];
                                                      ^
main.c: In function ‘main’:
main.c:428:21: error: expected ‘;’ before ‘while’
                     while (end_byte < total_size && all_data[end_byte] != ' ' && all_data[end_byte] != '.' && all_data[end_byte] != ',')
                     ^~~~~
main.c: In function ‘main’:
main.c:428:21: error: expected ‘;’ before ‘while’
                     while (end_byte < total_size && all_data[end_byte] != ' ' && all_data[end_byte] != '.' && all_data[end_byte] != ',')
                     ^~~~~
main.c: In function ‘main’:
main.c:428:48: error: expected expression before ‘.’ token
                     end_byte =  total_size + 1;.
                                                ^
main.c: In function ‘main’:
main.c:399:53: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘long unsigned int’ [-Wformat=]
             printf("\n\nall_data[end_byte]: sizeof %d : ", sizeof(all_data[end_byte]));
                                                    ~^
                                                    %ld
main.c: In function ‘main’:
main.c:322:64: error: ‘requests’ undeclared (first use in this function)
     MPI_Isend(&start_byte, 1, MPI_LONG, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                ^~~~~~~~
main.c:322:64: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:322:64: error: ‘requests’ undeclared (first use in this function)
     MPI_Isend(&start_byte, 1, MPI_LONG, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                ^~~~~~~~
main.c:322:64: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:307:21: error: ‘DEFAULT_HASHTABLE_SIZE’ undeclared (first use in this function)
 initializeHashtable(DEFAULT_HASHTABLE_SIZE);
                     ^~~~~~~~~~~~~~~~~~~~~~
main.c:307:21: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:331:15: error: ‘start_byte’ undeclared (first use in this function)
     MPI_Recv(&start_byte, 1, MPI_LONG, MASTER_RANK, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
               ^~~~~~~~~~
main.c:331:15: note: each undeclared identifier is reported only once for each function it appears in
main.c:332:15: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘blockcounts’?
     MPI_Recv(&byte_count, 1, MPI_LONG, MASTER_RANK, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
               ^~~~~~~~~~
               blockcounts
main.c:335:5: error: ‘local_data’ undeclared (first use in this function); did you mean ‘__locale_data’?
     local_data = (char *)malloc(byte_count * sizeof(char));
     ^~~~~~~~~~
     __locale_data
main.c: In function ‘updateWordCount’:
main.c:100:9: error: ‘localHashtable’ undeclared (first use in this function); did you mean ‘globalHashtable’?
     if (localHashtable.size == 0)
         ^~~~~~~~~~~~~~
         globalHashtable
main.c:100:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateWordCount’:
main.c:99:9: error: ‘localHashtable’ undeclared (first use in this function); did you mean ‘globalHashtable’?
     if (localHashtable.size == 0)
         ^~~~~~~~~~~~~~
         globalHashtable
main.c:99:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘countOccurrencesInChunk’:
main.c:114:26: warning: passing argument 1 of ‘strtok’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
     char *token = strtok(chunk, " ");
                          ^~~~~
In file included from main.c:3:0:
/usr/include/string.h:335:14: note: expected ‘char * restrict’ but argument is of type ‘const char *’
 extern char *strtok (char *__restrict __s, const char *__restrict __delim)
              ^~~~~~
main.c: In function ‘main’:
main.c:363:11: error: redeclaration of ‘local_data’ with no linkage
     char *local_data = (char *)malloc(byte_count * sizeof(char));
           ^~~~~~~~~~
main.c:356:15: note: previous declaration of ‘local_data’ was here
         char *local_data;
               ^~~~~~~~~~
main.c: In function ‘countOccurrencesInChunk’:
main.c:114:26: warning: passing argument 1 of ‘strtok’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
     char *token = strtok(chunk, " ");
                          ^~~~~
In file included from main.c:3:0:
/usr/include/string.h:335:14: note: expected ‘char * restrict’ but argument is of type ‘const char *’
 extern char *strtok (char *__restrict __s, const char *__restrict __delim)
              ^~~~~~
main.c: In function ‘main’:
main.c:363:11: error: redeclaration of ‘local_data’ with no linkage
     char *local_data = (char *)malloc(byte_count * sizeof(char));
           ^~~~~~~~~~
main.c:356:15: note: previous declaration of ‘local_data’ was here
         char *local_data;
               ^~~~~~~~~~
main.c: In function ‘countOccurrencesInChunk’:
main.c:122:62: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
         printf("Processo %d: Prima del calcolo dell'hash\n", rank);
                                                              ^~~~
                                                              rand
main.c:122:62: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘countOccurrencesInChunk’:
main.c:122:62: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
         printf("Processo %d: Prima del calcolo dell'hash\n", rank);
                                                              ^~~~
                                                              rand
main.c:122:62: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateWordCount’:
main.c:100:26: warning: passing argument 1 of ‘strtok’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
     char *token = strtok(chunk, delimiters);
                          ^~~~~
In file included from main.c:3:0:
/usr/include/string.h:335:14: note: expected ‘char * restrict’ but argument is of type ‘const char *’
 extern char *strtok (char *__restrict __s, const char *__restrict __delim)
              ^~~~~~
main.c: In function ‘main’:
main.c:344:19: error: ‘start_byte’ undeclared (first use in this function)
         MPI_Recv(&start_byte, 1, MPI_LONG, MASTER_RANK, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                   ^~~~~~~~~~
main.c:344:19: note: each undeclared identifier is reported only once for each function it appears in
main.c:345:19: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘blockcounts’?
         MPI_Recv(&byte_count, 1, MPI_LONG, MASTER_RANK, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                   ^~~~~~~~~~
                   blockcounts
main.c:348:9: error: ‘local_data’ undeclared (first use in this function); did you mean ‘__locale_data’?
         local_data = (char *)malloc(byte_count * sizeof(char));
         ^~~~~~~~~~
         __locale_data
main.c: In function ‘main’:
main.c:345:19: error: ‘start_byte’ undeclared (first use in this function)
         MPI_Recv(&start_byte, 1, MPI_LONG, MASTER_RANK, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                   ^~~~~~~~~~
main.c:345:19: note: each undeclared identifier is reported only once for each function it appears in
main.c:346:19: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘blockcounts’?
         MPI_Recv(&byte_count, 1, MPI_LONG, MASTER_RANK, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                   ^~~~~~~~~~
                   blockcounts
main.c:349:9: error: ‘local_data’ undeclared (first use in this function); did you mean ‘__locale_data’?
         local_data = (char *)malloc(byte_count * sizeof(char));
         ^~~~~~~~~~
         __locale_data
main.c: In function ‘countOccurrencesInChunk’:
main.c:91:26: warning: passing argument 1 of ‘strtok’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
     char *token = strtok(chunk, " "); // Usa lo spazio come delimitatore
                          ^~~~~
In file included from main.c:3:0:
/usr/include/string.h:335:14: note: expected ‘char * restrict’ but argument is of type ‘const char *’
 extern char *strtok (char *__restrict __s, const char *__restrict __delim)
              ^~~~~~
main.c: In function ‘countOccurrencesInChunk’:
main.c:91:26: warning: passing argument 1 of ‘strtok’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
     char *token = strtok(chunk, " "); // Usa lo spazio come delimitatore
                          ^~~~~
In file included from main.c:3:0:
/usr/include/string.h:335:14: note: expected ‘char * restrict’ but argument is of type ‘const char *’
 extern char *strtok (char *__restrict __s, const char *__restrict __delim)
              ^~~~~~
main.c: In function ‘main’:
main.c:363:17: warning: implicit declaration of function ‘updateWordCount’ [-Wimplicit-function-declaration]
                 updateWordCount(received_occurrences[j].word, MASTER_RANK);
                 ^~~~~~~~~~~~~~~
build/main.o: In function `main':
/home/docker-mpi/src/main.c:363: undefined reference to `updateWordCount'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:402:17: warning: implicit declaration of function ‘updateWordCount’; did you mean ‘updateWordCountGlobal’? [-Wimplicit-function-declaration]
                 updateWordCount(received_occurrences[j].word, MASTER_RANK);
                 ^~~~~~~~~~~~~~~
                 updateWordCountGlobal
build/main.o: In function `main':
/home/docker-mpi/src/main.c:402: undefined reference to `updateWordCount'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:402:39: warning: passing argument 1 of ‘updateWordCountGlobal’ from incompatible pointer type [-Wincompatible-pointer-types]
                 updateWordCountGlobal(received_occurrences[j].word, MASTER_RANK);
                                       ^~~~~~~~~~~~~~~~~~~~
main.c:209:6: note: expected ‘const OccurrenceNode * {aka const struct OccurrenceNode *}’ but argument is of type ‘char *’
 void updateWordCountGlobal(const OccurrenceNode *received_occurrences, int num_occurrences, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:402:17: error: too few arguments to function ‘updateWordCountGlobal’
                 updateWordCountGlobal(received_occurrences[j].word, MASTER_RANK);
                 ^~~~~~~~~~~~~~~~~~~~~
main.c:209:6: note: declared here
 void updateWordCountGlobal(const OccurrenceNode *received_occurrences, int num_occurrences, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
build/main.o: In function `main':
/home/docker-mpi/src/main.c:402: undefined reference to `updateWordCount'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:402:39: warning: passing argument 1 of ‘updateWordCountGlobal’ from incompatible pointer type [-Wincompatible-pointer-types]
                 updateWordCountGlobal(received_occurrences[j].word, MASTER_RANK);
                                       ^~~~~~~~~~~~~~~~~~~~
main.c:209:6: note: expected ‘const OccurrenceNode * {aka const struct OccurrenceNode *}’ but argument is of type ‘char *’
 void updateWordCountGlobal(const OccurrenceNode *received_occurrences, int num_occurrences, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:402:17: error: too few arguments to function ‘updateWordCountGlobal’
                 updateWordCountGlobal(received_occurrences[j].word, MASTER_RANK);
                 ^~~~~~~~~~~~~~~~~~~~~
main.c:209:6: note: declared here
 void updateWordCountGlobal(const OccurrenceNode *received_occurrences, int num_occurrences, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
build/main.o: In function `main':
/home/docker-mpi/src/main.c:402: undefined reference to `updateWordCount'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:402:39: warning: passing argument 1 of ‘updateWordCountGlobal’ from incompatible pointer type [-Wincompatible-pointer-types]
                 updateWordCountGlobal(received_occurrences[j].word, MASTER_RANK);
                                       ^~~~~~~~~~~~~~~~~~~~
main.c:209:6: note: expected ‘const OccurrenceNode * {aka const struct OccurrenceNode *}’ but argument is of type ‘char *’
 void updateWordCountGlobal(const OccurrenceNode *received_occurrences, int num_occurrences, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:402:17: error: too few arguments to function ‘updateWordCountGlobal’
                 updateWordCountGlobal(received_occurrences[j].word, MASTER_RANK);
                 ^~~~~~~~~~~~~~~~~~~~~
main.c:209:6: note: declared here
 void updateWordCountGlobal(const OccurrenceNode *received_occurrences, int num_occurrences, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
build/main.o: In function `main':
/home/docker-mpi/src/main.c:402: undefined reference to `updateWordCount'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:402:39: warning: passing argument 1 of ‘updateWordCountGlobal’ from incompatible pointer type [-Wincompatible-pointer-types]
                 updateWordCountGlobal(received_occurrences[j].word, MASTER_RANK);
                                       ^~~~~~~~~~~~~~~~~~~~
main.c:209:6: note: expected ‘const OccurrenceNode * {aka const struct OccurrenceNode *}’ but argument is of type ‘char *’
 void updateWordCountGlobal(const OccurrenceNode *received_occurrences, int num_occurrences, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:402:17: error: too few arguments to function ‘updateWordCountGlobal’
                 updateWordCountGlobal(received_occurrences[j].word, MASTER_RANK);
                 ^~~~~~~~~~~~~~~~~~~~~
main.c:209:6: note: declared here
 void updateWordCountGlobal(const OccurrenceNode *received_occurrences, int num_occurrences, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
build/main.o: In function `main':
/home/docker-mpi/src/main.c:402: undefined reference to `updateWordCount'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:402:39: warning: passing argument 1 of ‘updateWordCountGlobal’ from incompatible pointer type [-Wincompatible-pointer-types]
                 updateWordCountGlobal(received_occurrences[j].word, MASTER_RANK);
                                       ^~~~~~~~~~~~~~~~~~~~
main.c:209:6: note: expected ‘const OccurrenceNode * {aka const struct OccurrenceNode *}’ but argument is of type ‘char *’
 void updateWordCountGlobal(const OccurrenceNode *received_occurrences, int num_occurrences, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:402:17: error: too few arguments to function ‘updateWordCountGlobal’
                 updateWordCountGlobal(received_occurrences[j].word, MASTER_RANK);
                 ^~~~~~~~~~~~~~~~~~~~~
main.c:209:6: note: declared here
 void updateWordCountGlobal(const OccurrenceNode *received_occurrences, int num_occurrences, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
build/main.o: In function `main':
/home/docker-mpi/src/main.c:402: undefined reference to `updateWordCount'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:442:41: warning: passing argument 2 of ‘countOccurrencesInChunk’ makes pointer from integer without a cast [-Wint-conversion]
     countOccurrencesInChunk(local_data, byte_count);
                                         ^~~~~~~~~~
main.c:101:6: note: expected ‘OccurrenceNode ** {aka struct OccurrenceNode **}’ but argument is of type ‘long int’
 void countOccurrencesInChunk(const char *chunk, OccurrenceNode **localOccurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:439:45: warning: passing argument 2 of ‘countOccurrencesInChunk’ makes pointer from integer without a cast [-Wint-conversion]
         countOccurrencesInChunk(local_data, byte_count);
                                             ^~~~~~~~~~
main.c:101:6: note: expected ‘OccurrenceNode ** {aka struct OccurrenceNode **}’ but argument is of type ‘long int’
 void countOccurrencesInChunk(const char *chunk, OccurrenceNode **localOccurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘countOccurrencesInChunk’:
main.c:107:23: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘void *’
     *localOccurrences = NULL;
                       ^
main.c:119:39: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
             OccurrenceNode *current = *localOccurrences;
                                       ^
main.c:138:31: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
                 newNode->next = *localOccurrences;
                               ^
main.c:139:35: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
                 *localOccurrences = newNode;
                                   ^
main.c: In function ‘main’:
main.c:439:45: warning: passing argument 2 of ‘countOccurrencesInChunk’ makes pointer from integer without a cast [-Wint-conversion]
         countOccurrencesInChunk(local_data, byte_count);
                                             ^~~~~~~~~~
main.c:101:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘long int’
 void countOccurrencesInChunk(const char *chunk, OccurrenceNode *localOccurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘countOccurrencesInChunk’:
main.c:107:23: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘void *’
     *localOccurrences = NULL;
                       ^
main.c:119:39: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
             OccurrenceNode *current = *localOccurrences;
                                       ^
main.c:138:31: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
                 newNode->next = *localOccurrences;
                               ^
main.c:139:35: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
                 *localOccurrences = newNode;
                                   ^
main.c: In function ‘main’:
main.c:439:45: warning: passing argument 2 of ‘countOccurrencesInChunk’ makes pointer from integer without a cast [-Wint-conversion]
         countOccurrencesInChunk(local_data, byte_count);
                                             ^~~~~~~~~~
main.c:101:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘long int’
 void countOccurrencesInChunk(const char *chunk, OccurrenceNode *localOccurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:443:45: warning: passing argument 2 of ‘countOccurrencesInChunk’ from incompatible pointer type [-Wincompatible-pointer-types]
         countOccurrencesInChunk(local_data, &local_occurrences);
                                             ^
main.c:101:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void countOccurrencesInChunk(const char *chunk, OccurrenceNode *localOccurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:101:64: error: expected ‘;’, ‘,’ or ‘)’ before ‘&’ token
 void countOccurrencesInChunk(const char *chunk, OccurrenceNode &localOccurrences)
                                                                ^
main.c: In function ‘main’:
main.c:443:9: warning: implicit declaration of function ‘countOccurrencesInChunk’ [-Wimplicit-function-declaration]
         countOccurrencesInChunk(local_data, &local_occurrences);
         ^~~~~~~~~~~~~~~~~~~~~~~
main.c:101:64: error: expected ‘;’, ‘,’ or ‘)’ before ‘&’ token
 void countOccurrencesInChunk(const char *chunk, OccurrenceNode &localOccurrences)
                                                                ^
main.c: In function ‘main’:
main.c:443:9: warning: implicit declaration of function ‘countOccurrencesInChunk’ [-Wimplicit-function-declaration]
         countOccurrencesInChunk(local_data, *local_occurrences);
         ^~~~~~~~~~~~~~~~~~~~~~~
main.c:101:64: error: expected ‘;’, ‘,’ or ‘)’ before ‘&’ token
 void countOccurrencesInChunk(const char *chunk, OccurrenceNode &localOccurrences)
                                                                ^
main.c: In function ‘main’:
main.c:443:9: warning: implicit declaration of function ‘countOccurrencesInChunk’ [-Wimplicit-function-declaration]
         countOccurrencesInChunk(local_data, local_occurrences);
         ^~~~~~~~~~~~~~~~~~~~~~~
main.c:101:64: error: expected ‘;’, ‘,’ or ‘)’ before ‘&’ token
 void countOccurrencesInChunk(const char *chunk, OccurrenceNode &localOccurrences)
                                                                ^
main.c: In function ‘main’:
main.c:443:9: warning: implicit declaration of function ‘countOccurrencesInChunk’ [-Wimplicit-function-declaration]
         countOccurrencesInChunk(local_data, &local_occurrences);
         ^~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘countOccurrencesInChunk’:
main.c:108:21: error: ‘*localOccurrences’ is a pointer; did you mean to use ‘->’?
     localOccurrences->count = 0;
                     ^~
                     ->
main.c:109:17: error: ‘*localOccurrences’ is a pointer; did you mean to use ‘->’?
 localOccurrences->word[0] = '\0';
                 ^~
                 ->
main.c:110:17: error: ‘*localOccurrences’ is a pointer; did you mean to use ‘->’?
 localOccurrences->next = NULL;
                 ^~
                 ->
main.c:123:39: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
             OccurrenceNode *current = localOccurrences;
                                       ^~~~~~~~~~~~~~~~
main.c:143:31: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
                 newNode->next = localOccurrences;
                               ^
main.c:144:34: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
                 localOccurrences = newNode;
                                  ^
main.c: In function ‘main’:
main.c:417:114: error: ‘request_receive_occurrences’ undeclared (first use in this function); did you mean ‘received_occurrences’?
             MPI_Irecv(received_occurrences, local_total_occurrences, MPI_OCCURRENCE_NODE, i, 0, MPI_COMM_WORLD, &request_receive_occurrences[i - 1]);
                                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                  received_occurrences
main.c:417:114: note: each undeclared identifier is reported only once for each function it appears in
main.c:424:31: error: ‘received_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
         updateWordCountGlobal(received_occurrences, local_total_occurrences, MASTER_RANK);
                               ^~~~~~~~~~~~~~~~~~~~
                               local_occurrences
main.c: In function ‘main’:
main.c:417:114: error: ‘request_receive_occurrences’ undeclared (first use in this function); did you mean ‘received_occurrences’?
             MPI_Irecv(received_occurrences, local_total_occurrences, MPI_OCCURRENCE_NODE, i, 0, MPI_COMM_WORLD, &request_receive_occurrences[i - 1]);
                                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                  received_occurrences
main.c:417:114: note: each undeclared identifier is reported only once for each function it appears in
main.c:424:31: error: ‘received_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
         updateWordCountGlobal(received_occurrences, local_total_occurrences, MASTER_RANK);
                               ^~~~~~~~~~~~~~~~~~~~
                               local_occurrences
main.c: In function ‘updateWordCountGlobal’:
main.c:223:51: error: invalid type argument of ‘->’ (have ‘OccurrenceNode {aka const struct OccurrenceNode}’)
         const char *word = received_occurrences[i]->word; // Utilizza l'operatore freccia
                                                   ^~
main.c:224:44: error: invalid type argument of ‘->’ (have ‘OccurrenceNode {aka const struct OccurrenceNode}’)
         int count = received_occurrences[i]->count; // Utilizza l'operatore freccia
                                            ^~
main.c: In function ‘main’:
main.c:455:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c:477:75: warning: passing argument 3 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                                           ^~~~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘const OccurrenceNode * {aka const struct OccurrenceNode *}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode **head, OccurrenceNode **tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:525:18: error: ‘received_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
             free(received_occurrences[i]);
                  ^~~~~~~~~~~~~~~~~~~~
                  local_occurrences
main.c:525:18: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:455:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c:477:75: warning: passing argument 3 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                                           ^~~~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘const OccurrenceNode * {aka const struct OccurrenceNode *}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode **head, OccurrenceNode **tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:525:18: error: ‘received_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
             free(received_occurrences[i]);
                  ^~~~~~~~~~~~~~~~~~~~
                  local_occurrences
main.c:525:18: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘appendOccurrencesToList’:
main.c:284:37: error: ‘*occurrences’ is a pointer; did you mean to use ‘->’?
         newNode->count = occurrences->count;
                                     ^~
                                     ->
main.c:285:43: error: ‘*occurrences’ is a pointer; did you mean to use ‘->’?
         strncpy(newNode->word, occurrences->word, MAX_WORD_LENGTH - 1);
                                           ^~
                                           ->
main.c:293:19: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             *head = newNode;
                   ^
main.c:294:19: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             *tail = newNode;
                   ^
main.c:299:20: error: ‘**tail’ is a pointer; did you mean to use ‘->’?
             (*tail)->next = newNode;
                    ^~
                    ->
main.c:300:19: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             *tail = newNode;
                   ^
main.c:303:34: error: ‘*occurrences’ is a pointer; did you mean to use ‘->’?
         occurrences = occurrences->next;
                                  ^~
                                  ->
main.c: In function ‘main’:
main.c:455:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c:477:37: warning: passing argument 1 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                     ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:477:55: warning: passing argument 2 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                       ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:477:75: warning: passing argument 3 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                                           ^~~~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘const OccurrenceNode ** {aka const struct OccurrenceNode **}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:525:18: error: ‘received_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
             free(received_occurrences[i]);
                  ^~~~~~~~~~~~~~~~~~~~
                  local_occurrences
main.c:525:18: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘appendOccurrencesToList’:
main.c:284:37: error: ‘*occurrences’ is a pointer; did you mean to use ‘->’?
         newNode->count = occurrences->count;
                                     ^~
                                     ->
main.c:285:43: error: ‘*occurrences’ is a pointer; did you mean to use ‘->’?
         strncpy(newNode->word, occurrences->word, MAX_WORD_LENGTH - 1);
                                           ^~
                                           ->
main.c:293:19: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             *head = newNode;
                   ^
main.c:294:19: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             *tail = newNode;
                   ^
main.c:299:20: error: ‘**tail’ is a pointer; did you mean to use ‘->’?
             (*tail)->next = newNode;
                    ^~
                    ->
main.c:300:19: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             *tail = newNode;
                   ^
main.c:303:34: error: ‘*occurrences’ is a pointer; did you mean to use ‘->’?
         occurrences = occurrences->next;
                                  ^~
                                  ->
main.c: In function ‘main’:
main.c:455:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c:477:37: warning: passing argument 1 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                     ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:477:55: warning: passing argument 2 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                       ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:477:75: warning: passing argument 3 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                                           ^~~~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘const OccurrenceNode ** {aka const struct OccurrenceNode **}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:525:18: error: ‘received_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
             free(received_occurrences[i]);
                  ^~~~~~~~~~~~~~~~~~~~
                  local_occurrences
main.c:525:18: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘appendOccurrencesToList’:
main.c:284:37: error: ‘*occurrences’ is a pointer; did you mean to use ‘->’?
         newNode->count = occurrences->count;
                                     ^~
                                     ->
main.c:285:43: error: ‘*occurrences’ is a pointer; did you mean to use ‘->’?
         strncpy(newNode->word, occurrences->word, MAX_WORD_LENGTH - 1);
                                           ^~
                                           ->
main.c:293:19: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             *head = newNode;
                   ^
main.c:294:19: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             *tail = newNode;
                   ^
main.c:299:20: error: ‘**tail’ is a pointer; did you mean to use ‘->’?
             (*tail)->next = newNode;
                    ^~
                    ->
main.c:300:19: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             *tail = newNode;
                   ^
main.c:303:34: error: ‘*occurrences’ is a pointer; did you mean to use ‘->’?
         occurrences = occurrences->next;
                                  ^~
                                  ->
main.c: In function ‘main’:
main.c:455:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c:477:37: warning: passing argument 1 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                     ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:477:55: warning: passing argument 2 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                       ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:477:75: warning: passing argument 3 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                                           ^~~~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘const OccurrenceNode ** {aka const struct OccurrenceNode **}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:525:18: error: ‘received_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
             free(received_occurrences[i]);
                  ^~~~~~~~~~~~~~~~~~~~
                  local_occurrences
main.c:525:18: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘appendOccurrencesToList’:
main.c:293:23: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *head = *tail = newNode;
                       ^
main.c:297:16: error: ‘**tail’ is a pointer; did you mean to use ‘->’?
         (*tail)->next = newNode;
                ^~
                ->
main.c:298:15: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *tail = newNode;
               ^
main.c: In function ‘main’:
main.c:453:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c:475:37: warning: passing argument 1 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                     ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:475:55: warning: passing argument 2 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                       ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:475:75: warning: passing argument 3 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                                           ^~~~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘const OccurrenceNode ** {aka const struct OccurrenceNode **}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘appendOccurrencesToList’:
main.c:293:23: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *head = *tail = newNode;
                       ^
main.c:297:16: error: ‘**tail’ is a pointer; did you mean to use ‘->’?
         (*tail)->next = newNode;
                ^~
                ->
main.c:298:15: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *tail = newNode;
               ^
main.c: In function ‘main’:
main.c:453:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c:475:37: warning: passing argument 1 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                     ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:475:55: warning: passing argument 2 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                       ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:475:75: warning: passing argument 3 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                                           ^~~~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘const OccurrenceNode ** {aka const struct OccurrenceNode **}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode **occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘appendOccurrencesToList’:
main.c:293:23: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *head = *tail = newNode;
                       ^
main.c:297:16: error: ‘**tail’ is a pointer; did you mean to use ‘->’?
         (*tail)->next = newNode;
                ^~
                ->
main.c:298:15: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *tail = newNode;
               ^
main.c: In function ‘main’:
main.c:454:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c:476:37: warning: passing argument 1 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                     ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:476:55: warning: passing argument 2 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                       ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:476:75: warning: passing argument 3 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                                           ^~~~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘const OccurrenceNode * {aka const struct OccurrenceNode *}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:524:18: error: ‘received_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
             free(received_occurrences[i]);
                  ^~~~~~~~~~~~~~~~~~~~
                  local_occurrences
main.c:524:18: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘appendOccurrencesToList’:
main.c:293:23: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *head = *tail = newNode;
                       ^
main.c:297:16: error: ‘**tail’ is a pointer; did you mean to use ‘->’?
         (*tail)->next = newNode;
                ^~
                ->
main.c:298:15: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *tail = newNode;
               ^
main.c: In function ‘main’:
main.c:454:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c:476:37: warning: passing argument 1 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                     ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:476:55: warning: passing argument 2 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                       ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:476:75: warning: passing argument 3 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                                           ^~~~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘const OccurrenceNode * {aka const struct OccurrenceNode *}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:524:18: error: ‘received_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
             free(received_occurrences[i]);
                  ^~~~~~~~~~~~~~~~~~~~
                  local_occurrences
main.c:524:18: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘appendOccurrencesToList’:
main.c:293:23: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *head = *tail = newNode;
                       ^
main.c:297:16: error: ‘**tail’ is a pointer; did you mean to use ‘->’?
         (*tail)->next = newNode;
                ^~
                ->
main.c:298:15: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *tail = newNode;
               ^
main.c: In function ‘main’:
main.c:455:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c:477:37: warning: passing argument 1 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                     ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:477:55: warning: passing argument 2 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                       ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:477:75: warning: passing argument 3 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                                           ^~~~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘const OccurrenceNode * {aka const struct OccurrenceNode *}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘appendOccurrencesToList’:
main.c:293:23: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *head = *tail = newNode;
                       ^
main.c:297:16: error: ‘**tail’ is a pointer; did you mean to use ‘->’?
         (*tail)->next = newNode;
                ^~
                ->
main.c:298:15: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *tail = newNode;
               ^
main.c: In function ‘main’:
main.c:455:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c:477:37: warning: passing argument 1 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                     ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:477:55: warning: passing argument 2 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                       ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:477:75: warning: passing argument 3 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                                           ^~~~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘const OccurrenceNode * {aka const struct OccurrenceNode *}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘appendOccurrencesToList’:
main.c:293:23: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *head = *tail = newNode;
                       ^
main.c:297:16: error: ‘**tail’ is a pointer; did you mean to use ‘->’?
         (*tail)->next = newNode;
                ^~
                ->
main.c:298:15: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         *tail = newNode;
               ^
main.c: In function ‘main’:
main.c:451:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c:473:37: warning: passing argument 1 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                     ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:473:55: warning: passing argument 2 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                       ^
main.c:278:6: note: expected ‘OccurrenceNode *** {aka struct OccurrenceNode ***}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:473:75: warning: passing argument 3 of ‘appendOccurrencesToList’ from incompatible pointer type [-Wincompatible-pointer-types]
             appendOccurrencesToList(&all_occurrences, &local_occurrences, received_occurrences[i]);
                                                                           ^~~~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘const OccurrenceNode * {aka const struct OccurrenceNode *}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void appendOccurrencesToList(OccurrenceNode ***head, OccurrenceNode ***tail, const OccurrenceNode *occurrences)
      ^~~~~~~~~~~~~~~~~~~~~~~
main.c:525:37: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             received_occurrences[i] = (OccurrenceNode *)malloc(local_total_occurrences * sizeof(OccurrenceNode));
                                     ^
main.c: In function ‘updateWordCount’:
main.c:137:28: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
     globalOccurrence->next = all_occurrences;
                            ^
main.c:138:21: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
     all_occurrences = globalOccurrence;
                     ^
main.c: In function ‘gatherOccurrencesFromSlaves’:
main.c:159:36: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             globalOccurrence->next = all_occurrences;
                                    ^
main.c:160:29: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             all_occurrences = globalOccurrence;
                             ^
main.c: In function ‘main’:
main.c:365:37: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
         for (GlobalOccurrence *go = all_occurrences; go != NULL; go = go->next)
                                     ^~~~~~~~~~~~~~~
main.c:404:89: error: ‘start_byte’ undeclared (first use in this function)
         printf("Processo %d: Ricevuto chunk da start_byte %ld, byte_count %ld\n", rank, start_byte, byte_count);
                                                                                         ^~~~~~~~~~
main.c:404:89: note: each undeclared identifier is reported only once for each function it appears in
main.c:404:101: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘blockcounts’?
         printf("Processo %d: Ricevuto chunk da start_byte %ld, byte_count %ld\n", rank, start_byte, byte_count);
                                                                                                     ^~~~~~~~~~
                                                                                                     blockcounts
main.c:405:83: error: ‘local_data’ undeclared (first use in this function); did you mean ‘__locale_data’?
         printf("Processo %d: Contenuto del chunk: %.*s\n", rank, (int)byte_count, local_data);
                                                                                   ^~~~~~~~~~
                                                                                   __locale_data
main.c: At top level:
main.c:410:5: warning: data definition has no type or storage class
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:410:5: warning: type defaults to ‘int’ in declaration of ‘freeHashtable’ [-Wimplicit-int]
main.c:410:5: error: conflicting types for ‘freeHashtable’
main.c:64:6: note: previous definition of ‘freeHashtable’ was here
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:411:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:411:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:412:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:413:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘updateWordCount’:
main.c:136:28: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
     globalOccurrence->next = all_occurrences;
                            ^
main.c:137:21: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
     all_occurrences = globalOccurrence;
                     ^
main.c: In function ‘gatherOccurrencesFromSlaves’:
main.c:158:36: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             globalOccurrence->next = all_occurrences;
                                    ^
main.c:159:29: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             all_occurrences = globalOccurrence;
                             ^
main.c: In function ‘main’:
main.c:363:37: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
         for (GlobalOccurrence *go = all_occurrences; go != NULL; go = go->next)
                                     ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:136:28: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
     globalOccurrence->next = all_occurrences;
                            ^
main.c:137:21: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
     all_occurrences = globalOccurrence;
                     ^
main.c: In function ‘gatherOccurrencesFromSlaves’:
main.c:158:36: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             globalOccurrence->next = all_occurrences;
                                    ^
main.c:159:29: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             all_occurrences = globalOccurrence;
                             ^
main.c: In function ‘main’:
main.c:363:37: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
         for (GlobalOccurrence *go = all_occurrences; go != NULL; go = go->next)
                                     ^~~~~~~~~~~~~~~
main.c: In function ‘gatherOccurrencesFromSlaves’:
main.c:157:36: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             globalOccurrence->next = all_occurrences;
                                    ^
main.c:158:29: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             all_occurrences = globalOccurrence;
                             ^
main.c: In function ‘main’:
main.c:362:37: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
         for (GlobalOccurrence *go = all_occurrences; go != NULL; go = go->next)
                                     ^~~~~~~~~~~~~~~
main.c: In function ‘sendLocalHashtable’:
main.c:189:15: error: ‘localHashtable’ undeclared (first use in this function); did you mean ‘globalHashtable’?
     MPI_Send(&localHashtable.size, 1, MPI_UNSIGNED, MASTER_RANK, 0, MPI_COMM_WORLD);
               ^~~~~~~~~~~~~~
               globalHashtable
main.c:189:15: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:333:22: error: ‘slaveHashtable’ undeclared (first use in this function); did you mean ‘freeHashtable’?
             MPI_Recv(slaveHashtable.table, slaveHashtable.size * sizeof(OccurrenceNode *), MPI_BYTE, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                      ^~~~~~~~~~~~~~
                      freeHashtable
main.c:333:22: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:292:29: error: ‘HASH_TABLE_SIZE’ undeclared (first use in this function); did you mean ‘S_BLKSIZE’?
         initializeHashtable(HASH_TABLE_SIZE); // Sostituisci HASH_TABLE_SIZE con la dimensione appropriata
                             ^~~~~~~~~~~~~~~
                             S_BLKSIZE
main.c:292:29: note: each undeclared identifier is reported only once for each function it appears in
main.c:298:53: error: ‘DIMENSIONE_HASHTABLE’ undeclared (first use in this function)
             initializeHashtable(&slaveHashtable[i], DIMENSIONE_HASHTABLE); // Sostituisci DIMENSIONE_HASHTABLE con la dimensione appropriata
                                                     ^~~~~~~~~~~~~~~~~~~~
main.c:298:33: warning: passing argument 1 of ‘initializeHashtable’ makes integer from pointer without a cast [-Wint-conversion]
             initializeHashtable(&slaveHashtable[i], DIMENSIONE_HASHTABLE); // Sostituisci DIMENSIONE_HASHTABLE con la dimensione appropriata
                                 ^
main.c:43:6: note: expected ‘unsigned int’ but argument is of type ‘LocalHashtable * {aka struct <anonymous> *}’
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:298:13: error: too many arguments to function ‘initializeHashtable’
             initializeHashtable(&slaveHashtable[i], DIMENSIONE_HASHTABLE); // Sostituisci DIMENSIONE_HASHTABLE con la dimensione appropriata
             ^~~~~~~~~~~~~~~~~~~
main.c:43:6: note: declared here
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:195:61: error: ‘MPI_OCCURRENCE_NODE’ undeclared (first use in this function); did you mean ‘OMPI_COMM_TYPE_NODE’?
     MPI_Type_create_struct(2, blockcounts, offsets, types, &MPI_OCCURRENCE_NODE);
                                                             ^~~~~~~~~~~~~~~~~~~
                                                             OMPI_COMM_TYPE_NODE
main.c:195:61: note: each undeclared identifier is reported only once for each function it appears in
main.c:319:18: error: ‘local_occurrences’ undeclared (first use in this function)
         MPI_Recv(local_occurrences, local_total_occurrences, MPI_OCCURRENCE_NODE, MPI_ANY_SOURCE, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                  ^~~~~~~~~~~~~~~~~
main.c:319:37: error: ‘local_total_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
         MPI_Recv(local_occurrences, local_total_occurrences, MPI_OCCURRENCE_NODE, MPI_ANY_SOURCE, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                     ^~~~~~~~~~~~~~~~~~~~~~~
                                     local_occurrences
main.c:399:5: error: too few arguments to function ‘freeHashtable’
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:49:6: note: declared here
 void freeHashtable(Hashtable *htable)
      ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:319:18: error: ‘local_occurrences’ undeclared (first use in this function)
         MPI_Recv(local_occurrences, local_total_occurrences, MPI_OCCURRENCE_NODE, MPI_ANY_SOURCE, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                  ^~~~~~~~~~~~~~~~~
main.c:319:18: note: each undeclared identifier is reported only once for each function it appears in
main.c:319:37: error: ‘local_total_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
         MPI_Recv(local_occurrences, local_total_occurrences, MPI_OCCURRENCE_NODE, MPI_ANY_SOURCE, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                     ^~~~~~~~~~~~~~~~~~~~~~~
                                     local_occurrences
main.c:402:5: error: too few arguments to function ‘freeHashtable’
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:49:6: note: declared here
 void freeHashtable(Hashtable *htable)
      ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:321:37: error: ‘local_total_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
         MPI_Recv(local_occurrences, local_total_occurrences, MPI_OCCURRENCE_NODE, MPI_ANY_SOURCE, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                     ^~~~~~~~~~~~~~~~~~~~~~~
                                     local_occurrences
main.c:321:37: note: each undeclared identifier is reported only once for each function it appears in
main.c:390:21: error: redeclaration of ‘local_occurrences’ with no linkage
     OccurrenceNode *local_occurrences;
                     ^~~~~~~~~~~~~~~~~
main.c:354:17: note: previous definition of ‘local_occurrences’ was here
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:406:5: error: too few arguments to function ‘freeHashtable’
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:49:6: note: declared here
 void freeHashtable(Hashtable *htable)
      ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:201:17: error: redefinition of ‘local_occurrences’
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:198:17: note: previous definition of ‘local_occurrences’ was here
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:397:21: error: redeclaration of ‘local_occurrences’ with no linkage
     OccurrenceNode *local_occurrences;
                     ^~~~~~~~~~~~~~~~~
main.c:361:17: note: previous definition of ‘local_occurrences’ was here
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:413:5: error: too few arguments to function ‘freeHashtable’
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:49:6: note: declared here
 void freeHashtable(Hashtable *htable)
      ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:201:17: error: redefinition of ‘local_occurrences’
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:198:17: note: previous definition of ‘local_occurrences’ was here
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:397:21: error: redeclaration of ‘local_occurrences’ with no linkage
     OccurrenceNode *local_occurrences;
                     ^~~~~~~~~~~~~~~~~
main.c:361:17: note: previous definition of ‘local_occurrences’ was here
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:413:5: error: too few arguments to function ‘freeHashtable’
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:49:6: note: declared here
 void freeHashtable(Hashtable *htable)
      ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:395:21: error: redeclaration of ‘local_occurrences’ with no linkage
     OccurrenceNode *local_occurrences;
                     ^~~~~~~~~~~~~~~~~
main.c:359:17: note: previous definition of ‘local_occurrences’ was here
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:411:5: error: too few arguments to function ‘freeHashtable’
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:49:6: note: declared here
 void freeHashtable(Hashtable *htable)
      ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:410:5: error: too few arguments to function ‘freeHashtable’
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:49:6: note: declared here
 void freeHashtable(Hashtable *htable)
      ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:387:29: warning: passing argument 1 of ‘updateWordCount’ from incompatible pointer type [-Wincompatible-pointer-types]
             updateWordCount(token, rank);
                             ^~~~~
main.c:78:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘char *’
 void updateWordCount(Hashtable *htable, const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:387:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:78:6: note: expected ‘const char *’ but argument is of type ‘int’
 void updateWordCount(Hashtable *htable, const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:387:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:78:6: note: declared here
 void updateWordCount(Hashtable *htable, const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:79:1: error: expected identifier or ‘(’ before ‘{’ token
 {
 ^
main.c: In function ‘main’:
main.c:398:50: warning: passing argument 1 of ‘generateOccurrencesArray’ from incompatible pointer type [-Wincompatible-pointer-types]
     local_occurrences = generateOccurrencesArray(&local_total_occurrences);
                                                  ^
main.c:118:17: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int *’
 OccurrenceNode *generateOccurrencesArray(Hashtable *htable, int *numOccurrences)
                 ^~~~~~~~~~~~~~~~~~~~~~~~
main.c:398:25: error: too few arguments to function ‘generateOccurrencesArray’
     local_occurrences = generateOccurrencesArray(&local_total_occurrences);
                         ^~~~~~~~~~~~~~~~~~~~~~~~
main.c:118:17: note: declared here
 OccurrenceNode *generateOccurrencesArray(Hashtable *htable, int *numOccurrences)
                 ^~~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:398:50: warning: passing argument 1 of ‘generateOccurrencesArray’ from incompatible pointer type [-Wincompatible-pointer-types]
     local_occurrences = generateOccurrencesArray(&local_total_occurrences);
                                                  ^
main.c:118:17: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int *’
 OccurrenceNode *generateOccurrencesArray(Hashtable *htable, int *numOccurrences)
                 ^~~~~~~~~~~~~~~~~~~~~~~~
main.c:398:25: error: too few arguments to function ‘generateOccurrencesArray’
     local_occurrences = generateOccurrencesArray(&local_total_occurrences);
                         ^~~~~~~~~~~~~~~~~~~~~~~~
main.c:118:17: note: declared here
 OccurrenceNode *generateOccurrencesArray(Hashtable *htable, int *numOccurrences)
                 ^~~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:398:50: warning: passing argument 1 of ‘generateOccurrencesArray’ from incompatible pointer type [-Wincompatible-pointer-types]
     local_occurrences = generateOccurrencesArray(&local_total_occurrences);
                                                  ^
main.c:118:17: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int *’
 OccurrenceNode *generateOccurrencesArray(Hashtable *htable, int *numOccurrences)
                 ^~~~~~~~~~~~~~~~~~~~~~~~
main.c:398:25: error: too few arguments to function ‘generateOccurrencesArray’
     local_occurrences = generateOccurrencesArray(&local_total_occurrences);
                         ^~~~~~~~~~~~~~~~~~~~~~~~
main.c:118:17: note: declared here
 OccurrenceNode *generateOccurrencesArray(Hashtable *htable, int *numOccurrences)
                 ^~~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:375:27: warning: implicit declaration of function ‘countWords’ [-Wimplicit-function-declaration]
 local_total_occurrences = countWords(local_data); // Implementa countWords() per contare le parole
                           ^~~~~~~~~~
build/main.o: In function `main':
/home/docker-mpi/src/main.c:375: undefined reference to `countWords'
collect2: error: ld returned 1 exit status
main.c: In function ‘freeHashtable’:
main.c:62:30: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘next’
             current = current->next;
                              ^~
main.c: In function ‘generateOccurrencesArray’:
main.c:150:30: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘next’
             current = current->next;
                              ^~
main.c: In function ‘main’:
main.c:338:17: error: too few arguments to function ‘updateWordCount’
                 updateWordCount(occurrences_from_slave[j].word, MASTER_RANK);
                 ^~~~~~~~~~~~~~~
main.c:85:6: note: declared here
 void updateWordCount(const char *word, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c:384:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:85:6: note: declared here
 void updateWordCount(const char *word, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c:405:37: error: invalid type argument of unary ‘*’ (have ‘int’)
         MPI_Send(local_occurrences, *local_total_occurrences, MPI_OCCURRENCE_NODE, MASTER_RANK, 0, MPI_COMM_WORLD);
                                     ^~~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘freeHashtable’:
main.c:62:30: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘next’
             current = current->next;
                              ^~
main.c: In function ‘generateOccurrencesArray’:
main.c:150:30: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘next’
             current = current->next;
                              ^~
main.c: In function ‘main’:
main.c:337:17: error: too few arguments to function ‘updateWordCount’
                 updateWordCount(occurrences_from_slave[j].word, MASTER_RANK);
                 ^~~~~~~~~~~~~~~
main.c:85:6: note: declared here
 void updateWordCount(const char *word, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:340:13: warning: implicit declaration of function ‘mergeHashtables’; did you mean ‘freeHashtable’? [-Wimplicit-function-declaration]
             mergeHashtables(&globalHashtable, localHashtableBuffer, localHashtableSize);
             ^~~~~~~~~~~~~~~
             freeHashtable
build/main.o: In function `main':
/home/docker-mpi/src/main.c:340: undefined reference to `mergeHashtables'
collect2: error: ld returned 1 exit status
main.c: In function ‘mergeHashtables’:
main.c:200:25: warning: passing argument 1 of ‘updateWordCount’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateWordCount(globalHashtable, localHashtable[i].word, localHashtable[i].count, MASTER_RANK);
                         ^~~~~~~~~~~~~~~
main.c:87:6: note: expected ‘const char *’ but argument is of type ‘Hashtable * {aka struct <anonymous> *}’
 void updateWordCount(const char *word, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c:200:42: warning: passing argument 2 of ‘updateWordCount’ makes integer from pointer without a cast [-Wint-conversion]
         updateWordCount(globalHashtable, localHashtable[i].word, localHashtable[i].count, MASTER_RANK);
                                          ^~~~~~~~~~~~~~
main.c:87:6: note: expected ‘int’ but argument is of type ‘char *’
 void updateWordCount(const char *word, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c:200:66: warning: passing argument 3 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
         updateWordCount(globalHashtable, localHashtable[i].word, localHashtable[i].count, MASTER_RANK);
                                                                  ^~~~~~~~~~~~~~
main.c:87:6: note: expected ‘OccurrenceNode ** {aka struct OccurrenceNode **}’ but argument is of type ‘int’
 void updateWordCount(const char *word, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:90:24: error: ‘globalHashtable’ is a pointer; did you mean to use ‘->’?
     if (globalHashtable.size == 0)
                        ^
                        ->
main.c:97:66: error: ‘globalHashtable’ is a pointer; did you mean to use ‘->’?
     unsigned int hashIndex = hashFunction(word) % globalHashtable.size;
                                                                  ^
                                                                  ->
main.c: In function ‘main’:
main.c:402:29: warning: passing argument 1 of ‘updateWordCount’ from incompatible pointer type [-Wincompatible-pointer-types]
             updateWordCount(token, rank, &local_occurrences, &local_total_occurrences);
                             ^~~~~
main.c:87:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘char *’
 void updateWordCount(Hashtable *globalHashtable, const char *word, int count, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c:402:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank, &local_occurrences, &local_total_occurrences);
                                    ^~~~
main.c:87:6: note: expected ‘const char *’ but argument is of type ‘int’
 void updateWordCount(Hashtable *globalHashtable, const char *word, int count, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c:402:42: warning: passing argument 3 of ‘updateWordCount’ makes integer from pointer without a cast [-Wint-conversion]
             updateWordCount(token, rank, &local_occurrences, &local_total_occurrences);
                                          ^
main.c:87:6: note: expected ‘int’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void updateWordCount(Hashtable *globalHashtable, const char *word, int count, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c:402:62: warning: passing argument 4 of ‘updateWordCount’ makes integer from pointer without a cast [-Wint-conversion]
             updateWordCount(token, rank, &local_occurrences, &local_total_occurrences);
                                                              ^
main.c:87:6: note: expected ‘int’ but argument is of type ‘int *’
 void updateWordCount(Hashtable *globalHashtable, const char *word, int count, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c:402:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank, &local_occurrences, &local_total_occurrences);
             ^~~~~~~~~~~~~~~
main.c:87:6: note: declared here
 void updateWordCount(Hashtable *globalHashtable, const char *word, int count, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:96:66: error: ‘globalHashtable’ is a pointer; did you mean to use ‘->’?
     unsigned int hashIndex = hashFunction(word) % globalHashtable.size;
                                                                  ^
                                                                  ->
main.c: In function ‘main’:
main.c:401:60: warning: passing argument 4 of ‘updateWordCount’ makes integer from pointer without a cast [-Wint-conversion]
             updateWordCount(&globalHashtable, token, rank, &local_occurrences, &local_total_occurrences);
                                                            ^
main.c:87:6: note: expected ‘int’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void updateWordCount(Hashtable *globalHashtable, const char *word, int count, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c:401:80: warning: passing argument 5 of ‘updateWordCount’ from incompatible pointer type [-Wincompatible-pointer-types]
             updateWordCount(&globalHashtable, token, rank, &local_occurrences, &local_total_occurrences);
                                                                                ^
main.c:87:6: note: expected ‘OccurrenceNode ** {aka struct OccurrenceNode **}’ but argument is of type ‘int *’
 void updateWordCount(Hashtable *globalHashtable, const char *word, int count, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c:401:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(&globalHashtable, token, rank, &local_occurrences, &local_total_occurrences);
             ^~~~~~~~~~~~~~~
main.c:87:6: note: declared here
 void updateWordCount(Hashtable *globalHashtable, const char *word, int count, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:96:66: error: ‘globalHashtable’ is a pointer; did you mean to use ‘->’?
     unsigned int hashIndex = hashFunction(word) % globalHashtable.size;
                                                                  ^
                                                                  ->
main.c: In function ‘main’:
main.c:401:60: warning: passing argument 4 of ‘updateWordCount’ makes integer from pointer without a cast [-Wint-conversion]
             updateWordCount(&globalHashtable, token, rank, &local_occurrences, &local_total_occurrences);
                                                            ^
main.c:87:6: note: expected ‘int’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void updateWordCount(Hashtable *globalHashtable, const char *word, int count, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c:401:80: warning: passing argument 5 of ‘updateWordCount’ from incompatible pointer type [-Wincompatible-pointer-types]
             updateWordCount(&globalHashtable, token, rank, &local_occurrences, &local_total_occurrences);
                                                                                ^
main.c:87:6: note: expected ‘OccurrenceNode ** {aka struct OccurrenceNode **}’ but argument is of type ‘int *’
 void updateWordCount(Hashtable *globalHashtable, const char *word, int count, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c:401:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(&globalHashtable, token, rank, &local_occurrences, &local_total_occurrences);
             ^~~~~~~~~~~~~~~
main.c:87:6: note: declared here
 void updateWordCount(Hashtable *globalHashtable, const char *word, int count, int rank, OccurrenceNode **local_occurrences, int *local_total_occurrences)
      ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:88:9: error: ‘localHashtable’ undeclared (first use in this function); did you mean ‘globalHashtable’?
     if (localHashtable.size == 0)
         ^~~~~~~~~~~~~~
         globalHashtable
main.c:88:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:370:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:85:6: note: declared here
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:370:42: error: incompatible type for argument 3 of ‘updateWordCount’
             updateWordCount(token, rank, localHashtable);
                                          ^~~~~~~~~~~~~~
main.c:85:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:459:15: error: redefinition of ‘buffer’
         char *buffer = serializeHashtable(&localHashtable);
               ^~~~~~
main.c:452:15: note: previous definition of ‘buffer’ was here
         char *buffer = (char *)malloc(localHashtableSize);
               ^~~~~~
main.c:459:24: error: too few arguments to function ‘serializeHashtable’
         char *buffer = serializeHashtable(&localHashtable);
                        ^~~~~~~~~~~~~~~~~~
main.c:179:7: note: declared here
 char *serializeHashtable(const Hashtable *htable, int *size)
       ^~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:459:20: error: too few arguments to function ‘serializeHashtable’
          *buffer = serializeHashtable(&localHashtable);
                    ^~~~~~~~~~~~~~~~~~
main.c:179:7: note: declared here
 char *serializeHashtable(const Hashtable *htable, int *size)
       ^~~~~~~~~~~~~~~~~~
main.c: In function ‘initializeHashtable’:
main.c:38:5: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     globalHashtable.size = size;
     ^~~~~~~~~~~~~~~
     localHashtable
main.c:38:5: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘freeHashtable’:
main.c:57:34: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     for (unsigned int i = 0; i < globalHashtable.size; ++i)
                                  ^~~~~~~~~~~~~~~
                                  localHashtable
main.c: In function ‘generateOccurrencesArray’:
main.c:136:65: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     OccurrenceNode *occurrencesArray = (OccurrenceNode *)malloc(globalHashtable.size * sizeof(OccurrenceNode));
                                                                 ^~~~~~~~~~~~~~~
                                                                 localHashtable
main.c: In function ‘initializeHashtable’:
main.c:38:5: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     globalHashtable.size = size;
     ^~~~~~~~~~~~~~~
     localHashtable
main.c:38:5: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘freeHashtable’:
main.c:57:34: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     for (unsigned int i = 0; i < globalHashtable.size; ++i)
                                  ^~~~~~~~~~~~~~~
                                  localHashtable
main.c: In function ‘initializeHashtable’:
main.c:38:5: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     globalHashtable.size = size;
     ^~~~~~~~~~~~~~~
     localHashtable
main.c:38:5: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:388:18: error: ‘buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
             free(buffer);
                  ^~~~~~
                  setbuffer
main.c:388:18: note: each undeclared identifier is reported only once for each function it appears in
main.c:392:14: error: ‘all_data’ undeclared (first use in this function); did you mean ‘alloca’?
         free(all_data);
              ^~~~~~~~
              alloca
main.c: At top level:
main.c:395:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:458:5: warning: data definition has no type or storage class
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:458:5: warning: type defaults to ‘int’ in declaration of ‘freeHashtable’ [-Wimplicit-int]
main.c:458:5: error: conflicting types for ‘freeHashtable’
main.c:54:6: note: previous definition of ‘freeHashtable’ was here
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:459:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:459:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:460:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:461:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘updateWordCount’:
main.c:137:13: warning: implicit declaration of function ‘updateGlobalWordCount’; did you mean ‘updateWordCount’? [-Wimplicit-function-declaration]
             updateGlobalWordCount(cleanedWord, localCurrent->count);
             ^~~~~~~~~~~~~~~~~~~~~
             updateWordCount
main.c: At top level:
main.c:157:6: warning: conflicting types for ‘updateGlobalWordCount’
 void updateGlobalWordCount(const char *word, int localCount)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:137:13: note: previous implicit declaration of ‘updateGlobalWordCount’ was here
             updateGlobalWordCount(cleanedWord, localCurrent->count);
             ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:408:13: error: too many arguments to function ‘updateWordCount’
             updateWordCount(buffer[j].word, buffer[j].count, MASTER_RANK);
             ^~~~~~~~~~~~~~~
main.c:107:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:407:13: error: too many arguments to function ‘updateWordCount’
             updateWordCount(buffer[j].word, buffer[j].count, MASTER_RANK);
             ^~~~~~~~~~~~~~~
main.c:137:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:407:13: error: too many arguments to function ‘updateWordCount’
             updateWordCount(buffer[j].word, buffer[j].count, MASTER_RANK);
             ^~~~~~~~~~~~~~~
main.c:137:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:456:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:138:6: note: declared here
 void updateWordCount(const char *word, int count, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:456:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:138:6: note: declared here
 void updateWordCount(const char *word, int count, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘mergeLocalOccurrences’:
main.c:249:13: warning: implicit declaration of function ‘updateGlobalWordCount’; did you mean ‘updateWordCount’? [-Wimplicit-function-declaration]
             updateGlobalWordCount(current->word, current->count);
             ^~~~~~~~~~~~~~~~~~~~~
             updateWordCount
main.c: At top level:
main.c:256:6: warning: conflicting types for ‘updateGlobalWordCount’
 void updateGlobalWordCount(const char *word, int count)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:249:13: note: previous implicit declaration of ‘updateGlobalWordCount’ was here
             updateGlobalWordCount(current->word, current->count);
             ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalWordCount’:
main.c:258:17: error: ‘debug_mode’ undeclared (first use in this function)
             if (debug_mode)
                 ^~~~~~~~~~
main.c:258:17: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateGlobalWordCount’:
main.c:258:17: error: ‘debug_mode’ undeclared (first use in this function)
             if (debug_mode)
                 ^~~~~~~~~~
main.c:258:17: note: each undeclared identifier is reported only once for each function it appears in
main.c:276:5: error: unknown type name ‘bool’; did you mean ‘_Bool’?
     bool debug_mode = true;
     ^~~~
     _Bool
main.c:276:23: error: ‘true’ undeclared (first use in this function); did you mean ‘free’?
     bool debug_mode = true;
                       ^~~~
                       free
main.c: In function ‘updateGlobalWordCount’:
main.c:258:17: error: ‘debug_mode’ undeclared (first use in this function)
             if (debug_mode)
                 ^~~~~~~~~~
main.c:258:17: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:474:13: warning: implicit declaration of function ‘printLocalOccurrences’; did you mean ‘mergeLocalOccurrences’? [-Wimplicit-function-declaration]
             printLocalOccurrences(slaveOccurrences[i - 1]);
             ^~~~~~~~~~~~~~~~~~~~~
             mergeLocalOccurrences
build/main.o: In function `main':
/home/docker-mpi/src/main.c:474: undefined reference to `printLocalOccurrences'
/home/docker-mpi/src/main.c:484: undefined reference to `printLocalOccurrences'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:359:30: warning: implicit declaration of function ‘calculateChunkSize’ [-Wimplicit-function-declaration]
             int chunk_size = calculateChunkSize(i, num_processes, total_size);
                              ^~~~~~~~~~~~~~~~~~
main.c:365:22: error: ‘text’ undeclared (first use in this function); did you mean ‘exit’?
             MPI_Send(text + start_byte, chunk_size, MPI_CHAR, i, 0, MPI_COMM_WORLD);
                      ^~~~
                      exit
main.c:365:22: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:380:22: error: ‘text’ undeclared (first use in this function); did you mean ‘exit’?
             MPI_Send(text + start_byte, chunk_size, MPI_CHAR, i, 0, MPI_COMM_WORLD);
                      ^~~~
                      exit
main.c:380:22: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateWordCount’:
main.c:129:13: warning: implicit declaration of function ‘updateGlobalWordCount’; did you mean ‘updateWordCount’? [-Wimplicit-function-declaration]
             updateGlobalWordCount(cleanedWord, rank);
             ^~~~~~~~~~~~~~~~~~~~~
             updateWordCount
main.c:138:12: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘source_rank’
     newNode->source_rank = rank; // Memorizza il rank dello slave sorgente
            ^~
main.c: At top level:
main.c:151:6: warning: conflicting types for ‘updateGlobalWordCount’
 void updateGlobalWordCount(const char *word, int source_rank)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:129:13: note: previous implicit declaration of ‘updateGlobalWordCount’ was here
             updateGlobalWordCount(cleanedWord, rank);
             ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalWordCount’:
main.c:163:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = all_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~
main.c:179:12: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘source_rank’
     newNode->source_rank = source_rank; // Memorizza il rank dello slave sorgente
            ^~
main.c:182:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = all_occurrences[hashIndex];
                   ^
main.c:185:32: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     all_occurrences[hashIndex] = newNode;
                                ^
main.c: In function ‘updateGlobalWordCount’:
main.c:112:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = all_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~
main.c:128:12: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘source_rank’
     newNode->source_rank = source_rank; // Memorizza il rank dello slave sorgente
            ^~
main.c:131:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = all_occurrences[hashIndex];
                   ^
main.c:134:32: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     all_occurrences[hashIndex] = newNode;
                                ^
main.c: In function ‘updateWordCount’:
main.c:176:12: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘source_rank’
     newNode->source_rank = rank; // Memorizza il rank dello slave sorgente
            ^~
main.c: In function ‘updateGlobalWordCount’:
main.c:128:12: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘source_rank’
     newNode->source_rank = source_rank; // Memorizza il rank dello slave sorgente
            ^~
main.c:131:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = all_occurrences[hashIndex];
                   ^
main.c:134:32: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     all_occurrences[hashIndex] = newNode;
                                ^
main.c: In function ‘updateWordCount’:
main.c:176:12: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘source_rank’
     newNode->source_rank = rank; // Memorizza il rank dello slave sorgente
            ^~
main.c: In function ‘updateGlobalWordCount’:
main.c:114:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = all_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~
main.c:133:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = all_occurrences[hashIndex];
                   ^
main.c:136:32: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     all_occurrences[hashIndex] = newNode;
                                ^
main.c: In function ‘main’:
main.c:420:29: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             all_occurrences = generateOccurrencesArray(&total_occurrences);
                             ^
main.c:426:90: error: ‘*(all_occurrences + (sizetype)((long unsigned int)i * 8))’ is a pointer; did you mean to use ‘->’?
                 printf("Global Occurrence %d: Word %s, Count %d\n", i, all_occurrences[i].word, all_occurrences[i].count);
                                                                                          ^
                                                                                          ->
main.c:426:115: error: ‘*(all_occurrences + (sizetype)((long unsigned int)i * 8))’ is a pointer; did you mean to use ‘->’?
                 printf("Global Occurrence %d: Word %s, Count %d\n", i, all_occurrences[i].word, all_occurrences[i].count);
                                                                                                                   ^
                                                                                                                   ->
main.c: In function ‘main’:
main.c:420:56: warning: passing argument 1 of ‘generateOccurrencesArray’ makes pointer from integer without a cast [-Wint-conversion]
             all_occurrences = generateOccurrencesArray(total_occurrences);
                                                        ^~~~~~~~~~~~~~~~~
main.c:194:17: note: expected ‘int *’ but argument is of type ‘int’
 OccurrenceNode *generateOccurrencesArray(int *numOccurrences)
                 ^~~~~~~~~~~~~~~~~~~~~~~~
main.c:420:29: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             all_occurrences = generateOccurrencesArray(total_occurrences);
                             ^
main.c:426:90: error: ‘*(all_occurrences + (sizetype)((long unsigned int)i * 8))’ is a pointer; did you mean to use ‘->’?
                 printf("Global Occurrence %d: Word %s, Count %d\n", i, all_occurrences[i].word, all_occurrences[i].count);
                                                                                          ^
                                                                                          ->
main.c:426:115: error: ‘*(all_occurrences + (sizetype)((long unsigned int)i * 8))’ is a pointer; did you mean to use ‘->’?
                 printf("Global Occurrence %d: Word %s, Count %d\n", i, all_occurrences[i].word, all_occurrences[i].count);
                                                                                                                   ^
                                                                                                                   ->
main.c: In function ‘main’:
main.c:420:56: error: invalid type argument of unary ‘*’ (have ‘int’)
             all_occurrences = generateOccurrencesArray(*total_occurrences);
                                                        ^~~~~~~~~~~~~~~~~~
main.c:426:90: error: ‘*(all_occurrences + (sizetype)((long unsigned int)i * 8))’ is a pointer; did you mean to use ‘->’?
                 printf("Global Occurrence %d: Word %s, Count %d\n", i, all_occurrences[i].word, all_occurrences[i].count);
                                                                                          ^
                                                                                          ->
main.c:426:115: error: ‘*(all_occurrences + (sizetype)((long unsigned int)i * 8))’ is a pointer; did you mean to use ‘->’?
                 printf("Global Occurrence %d: Word %s, Count %d\n", i, all_occurrences[i].word, all_occurrences[i].count);
                                                                                                                   ^
                                                                                                                   ->
main.c: In function ‘main’:
main.c:420:29: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             all_occurrences = generateOccurrencesArray(&total_occurrences);
                             ^
main.c:426:90: error: ‘*(all_occurrences + (sizetype)((long unsigned int)i * 8))’ is a pointer; did you mean to use ‘->’?
                 printf("Global Occurrence %d: Word %s, Count %d\n", i, all_occurrences[i].word, all_occurrences[i].count);
                                                                                          ^
                                                                                          ->
main.c:426:115: error: ‘*(all_occurrences + (sizetype)((long unsigned int)i * 8))’ is a pointer; did you mean to use ‘->’?
                 printf("Global Occurrence %d: Word %s, Count %d\n", i, all_occurrences[i].word, all_occurrences[i].count);
                                                                                                                   ^
                                                                                                                   ->
main.c: In function ‘main’:
main.c:420:29: error: ‘*all_occurrences’ is a pointer; did you mean to use ‘->’?
             all_occurrences -> generateOccurrencesArray(&total_occurrences);
                             ^~
                             ->
main.c:426:90: error: ‘*(all_occurrences + (sizetype)((long unsigned int)i * 8))’ is a pointer; did you mean to use ‘->’?
                 printf("Global Occurrence %d: Word %s, Count %d\n", i, all_occurrences[i].word, all_occurrences[i].count);
                                                                                          ^
                                                                                          ->
main.c:426:115: error: ‘*(all_occurrences + (sizetype)((long unsigned int)i * 8))’ is a pointer; did you mean to use ‘->’?
                 printf("Global Occurrence %d: Word %s, Count %d\n", i, all_occurrences[i].word, all_occurrences[i].count);
                                                                                                                   ^
                                                                                                                   ->
main.c: In function ‘main’:
main.c:413:29: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
             all_occurrences = generateOccurrencesArray(&total_occurrences);
                             ^
main.c:419:90: error: ‘*(all_occurrences + (sizetype)((long unsigned int)i * 8))’ is a pointer; did you mean to use ‘->’?
                 printf("Global Occurrence %d: Word %s, Count %d\n", i, all_occurrences[i].word, all_occurrences[i].count);
                                                                                          ^
                                                                                          ->
main.c:419:115: error: ‘*(all_occurrences + (sizetype)((long unsigned int)i * 8))’ is a pointer; did you mean to use ‘->’?
                 printf("Global Occurrence %d: Word %s, Count %d\n", i, all_occurrences[i].word, all_occurrences[i].count);
                                                                                                                   ^
                                                                                                                   ->
main.c: In function ‘main’:
main.c:438:9: error: too few arguments to function ‘freeHashtable’
         freeHashtable(); // Libera la memoria allocata precedentemente
         ^~~~~~~~~~~~~
main.c:56:6: note: declared here
 void freeHashtable(Hashtable *htable)
      ^~~~~~~~~~~~~
main.c:464:5: error: too few arguments to function ‘freeHashtable’
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:56:6: note: declared here
 void freeHashtable(Hashtable *htable)
      ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:439:9: error: too few arguments to function ‘freeHashtable’
         freeHashtable(); // Libera la memoria allocata precedentemente
         ^~~~~~~~~~~~~
main.c:56:6: note: declared here
 void freeHashtable(Hashtable *htable)
      ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:390:28: error: ‘localHashtable’ undeclared (first use in this function); did you mean ‘globalHashtable’?
             freeHashtable(&localHashtable);
                            ^~~~~~~~~~~~~~
                            globalHashtable
main.c:390:28: note: each undeclared identifier is reported only once for each function it appears in
main.c:413:29: warning: passing argument 1 of ‘initializeHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         initializeHashtable(byte_count);
                             ^~~~~~~~~~
main.c:37:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘long int’
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:413:9: error: too few arguments to function ‘initializeHashtable’
         initializeHashtable(byte_count);
         ^~~~~~~~~~~~~~~~~~~
main.c:37:6: note: declared here
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:425:29: warning: passing argument 1 of ‘printLocalHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         printLocalHashtable(rank);
                             ^~~~
main.c:203:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void printLocalHashtable(Hashtable *htable, int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:425:9: error: too few arguments to function ‘printLocalHashtable’
         printLocalHashtable(rank);
         ^~~~~~~~~~~~~~~~~~~
main.c:203:6: note: declared here
 void printLocalHashtable(Hashtable *htable, int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:431:29: warning: passing argument 1 of ‘initializeHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         initializeHashtable(localHashtableSize);
                             ^~~~~~~~~~~~~~~~~~
main.c:37:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:431:9: error: too few arguments to function ‘initializeHashtable’
         initializeHashtable(localHashtableSize);
         ^~~~~~~~~~~~~~~~~~~
main.c:37:6: note: declared here
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:411:29: warning: passing argument 1 of ‘initializeHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         initializeHashtable(byte_count);
                             ^~~~~~~~~~
main.c:37:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘long int’
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:411:9: error: too few arguments to function ‘initializeHashtable’
         initializeHashtable(byte_count);
         ^~~~~~~~~~~~~~~~~~~
main.c:37:6: note: declared here
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:423:29: warning: passing argument 1 of ‘printLocalHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         printLocalHashtable(rank);
                             ^~~~
main.c:203:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void printLocalHashtable(Hashtable *htable, int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:423:9: error: too few arguments to function ‘printLocalHashtable’
         printLocalHashtable(rank);
         ^~~~~~~~~~~~~~~~~~~
main.c:203:6: note: declared here
 void printLocalHashtable(Hashtable *htable, int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:429:29: warning: passing argument 1 of ‘initializeHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         initializeHashtable(localHashtableSize);
                             ^~~~~~~~~~~~~~~~~~
main.c:37:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:429:9: error: too few arguments to function ‘initializeHashtable’
         initializeHashtable(localHashtableSize);
         ^~~~~~~~~~~~~~~~~~~
main.c:37:6: note: declared here
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:453:24: error: ‘localHashtable’ undeclared (first use in this function); did you mean ‘globalHashtable’?
         freeHashtable(&localHashtable);
                        ^~~~~~~~~~~~~~
                        globalHashtable
main.c:453:24: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:411:30: error: ‘localHashtable’ undeclared (first use in this function); did you mean ‘globalHashtable’?
         initializeHashtable(&localHashtable, byte_count);
                              ^~~~~~~~~~~~~~
                              globalHashtable
main.c:411:30: note: each undeclared identifier is reported only once for each function it appears in
main.c:424:29: warning: passing argument 1 of ‘printLocalHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         printLocalHashtable(rank);
                             ^~~~
main.c:203:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void printLocalHashtable(Hashtable *htable, int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:424:9: error: too few arguments to function ‘printLocalHashtable’
         printLocalHashtable(rank);
         ^~~~~~~~~~~~~~~~~~~
main.c:203:6: note: declared here
 void printLocalHashtable(Hashtable *htable, int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:430:29: warning: passing argument 1 of ‘initializeHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         initializeHashtable(localHashtableSize);
                             ^~~~~~~~~~~~~~~~~~
main.c:37:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:430:9: error: too few arguments to function ‘initializeHashtable’
         initializeHashtable(localHashtableSize);
         ^~~~~~~~~~~~~~~~~~~
main.c:37:6: note: declared here
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:426:29: warning: passing argument 1 of ‘printLocalHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         printLocalHashtable(rank);
                             ^~~~
main.c:203:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void printLocalHashtable(Hashtable *htable, int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:426:9: error: too few arguments to function ‘printLocalHashtable’
         printLocalHashtable(rank);
         ^~~~~~~~~~~~~~~~~~~
main.c:203:6: note: declared here
 void printLocalHashtable(Hashtable *htable, int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:432:29: warning: passing argument 1 of ‘initializeHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         initializeHashtable(localHashtableSize);
                             ^~~~~~~~~~~~~~~~~~
main.c:37:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:432:9: error: too few arguments to function ‘initializeHashtable’
         initializeHashtable(localHashtableSize);
         ^~~~~~~~~~~~~~~~~~~
main.c:37:6: note: declared here
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:426:29: warning: passing argument 1 of ‘printLocalHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         printLocalHashtable(rank);
                             ^~~~
main.c:203:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void printLocalHashtable(Hashtable *htable, int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:426:9: error: too few arguments to function ‘printLocalHashtable’
         printLocalHashtable(rank);
         ^~~~~~~~~~~~~~~~~~~
main.c:203:6: note: declared here
 void printLocalHashtable(Hashtable *htable, int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:432:29: warning: passing argument 1 of ‘initializeHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         initializeHashtable(localHashtableSize);
                             ^~~~~~~~~~~~~~~~~~
main.c:37:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:432:9: error: too few arguments to function ‘initializeHashtable’
         initializeHashtable(localHashtableSize);
         ^~~~~~~~~~~~~~~~~~~
main.c:37:6: note: declared here
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:435:29: warning: passing argument 1 of ‘initializeHashtable’ makes pointer from integer without a cast [-Wint-conversion]
         initializeHashtable(localHashtableSize);
                             ^~~~~~~~~~~~~~~~~~
main.c:37:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:435:9: error: too few arguments to function ‘initializeHashtable’
         initializeHashtable(localHashtableSize);
         ^~~~~~~~~~~~~~~~~~~
main.c:37:6: note: declared here
 void initializeHashtable(Hashtable *htable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:374:25: warning: passing argument 1 of ‘updateWordCount’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateWordCount(&globalHashtable, buffer[j].word, buffer[j].rank);
                         ^
main.c:101:6: note: expected ‘const char *’ but argument is of type ‘Hashtable * {aka struct <anonymous> *}’
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:374:43: warning: passing argument 2 of ‘updateWordCount’ makes integer from pointer without a cast [-Wint-conversion]
         updateWordCount(&globalHashtable, buffer[j].word, buffer[j].rank);
                                           ^~~~~~
main.c:101:6: note: expected ‘int’ but argument is of type ‘char *’
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:374:9: error: too many arguments to function ‘updateWordCount’
         updateWordCount(&globalHashtable, buffer[j].word, buffer[j].rank);
         ^~~~~~~~~~~~~~~
main.c:101:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c: At top level:
main.c:395:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:465:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:465:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:466:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:467:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:372:33: warning: passing argument 1 of ‘updateWordCount’ from incompatible pointer type [-Wincompatible-pointer-types]
                 updateWordCount(&globalHashtable, buffer[j].word, buffer[j].rank);
                                 ^
main.c:101:6: note: expected ‘const char *’ but argument is of type ‘Hashtable * {aka struct <anonymous> *}’
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:372:51: warning: passing argument 2 of ‘updateWordCount’ makes integer from pointer without a cast [-Wint-conversion]
                 updateWordCount(&globalHashtable, buffer[j].word, buffer[j].rank);
                                                   ^~~~~~
main.c:101:6: note: expected ‘int’ but argument is of type ‘char *’
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:372:17: error: too many arguments to function ‘updateWordCount’
                 updateWordCount(&globalHashtable, buffer[j].word, buffer[j].rank);
                 ^~~~~~~~~~~~~~~
main.c:101:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:155:36: error: ‘globalHashtable’ is a pointer; did you mean to use ‘->’?
     newNode->next = globalHashtable.table[hashIndex];
                                    ^
                                    ->
main.c:158:20: error: ‘globalHashtable’ is a pointer; did you mean to use ‘->’?
     globalHashtable.table[hashIndex] = newNode;
                    ^
                    ->
main.c: In function ‘main’:
main.c:388:51: warning: passing argument 2 of ‘updateWordCount’ from incompatible pointer type [-Wincompatible-pointer-types]
                 updateWordCount(&globalHashtable, buffer[j].word, buffer[j].rank);
                                                   ^~~~~~
main.c:102:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘char *’
 void updateWordCount(Hashtable *globalHashtable, Hashtable *localHashtable, const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:388:67: warning: passing argument 3 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
                 updateWordCount(&globalHashtable, buffer[j].word, buffer[j].rank);
                                                                   ^~~~~~
main.c:102:6: note: expected ‘const char *’ but argument is of type ‘int’
 void updateWordCount(Hashtable *globalHashtable, Hashtable *localHashtable, const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:388:17: error: too few arguments to function ‘updateWordCount’
                 updateWordCount(&globalHashtable, buffer[j].word, buffer[j].rank);
                 ^~~~~~~~~~~~~~~
main.c:102:6: note: declared here
 void updateWordCount(Hashtable *globalHashtable, Hashtable *localHashtable, const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHashtable’:
main.c:211:30: error: too many arguments to function ‘hashFunction’
     unsigned int hashIndex = hashFunction(word, globalHashtable->size);
                              ^~~~~~~~~~~~
main.c:73:14: note: declared here
 unsigned int hashFunction(const char *word)
              ^~~~~~~~~~~~
main.c:214:31: warning: implicit declaration of function ‘createOccurrenceNode’; did you mean ‘generateOccurrencesArray’? [-Wimplicit-function-declaration]
     OccurrenceNode *newNode = createOccurrenceNode(word, rank);
                               ^~~~~~~~~~~~~~~~~~~~
                               generateOccurrencesArray
main.c:214:31: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
main.c: In function ‘updateLocalHashtable’:
main.c:226:30: error: too many arguments to function ‘hashFunction’
     unsigned int hashIndex = hashFunction(word, localHashtable->size);
                              ^~~~~~~~~~~~
main.c:73:14: note: declared here
 unsigned int hashFunction(const char *word)
              ^~~~~~~~~~~~
main.c:229:31: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
     OccurrenceNode *newNode = createOccurrenceNode(word, rank);
                               ^~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHashtable’:
main.c:227:30: error: too many arguments to function ‘hashFunction’
     unsigned int hashIndex = hashFunction(word, globalHashtable->size);
                              ^~~~~~~~~~~~
main.c:73:14: note: declared here
 unsigned int hashFunction(const char *word)
              ^~~~~~~~~~~~
main.c:230:31: warning: implicit declaration of function ‘createOccurrenceNode’; did you mean ‘generateOccurrencesArray’? [-Wimplicit-function-declaration]
     OccurrenceNode *newNode = createOccurrenceNode(word, rank);
                               ^~~~~~~~~~~~~~~~~~~~
                               generateOccurrencesArray
main.c:230:31: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
main.c: In function ‘updateLocalHashtable’:
main.c:242:30: error: too many arguments to function ‘hashFunction’
     unsigned int hashIndex = hashFunction(word, localHashtable->size);
                              ^~~~~~~~~~~~
main.c:73:14: note: declared here
 unsigned int hashFunction(const char *word)
              ^~~~~~~~~~~~
main.c:245:31: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
     OccurrenceNode *newNode = createOccurrenceNode(word, rank);
                               ^~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHashtable’:
main.c:227:30: error: too many arguments to function ‘hashFunction’
     unsigned int hashIndex = hashFunction(word, globalHashtable->size);
                              ^~~~~~~~~~~~
main.c:73:14: note: declared here
 unsigned int hashFunction(const char *word)
              ^~~~~~~~~~~~
main.c:230:31: warning: implicit declaration of function ‘createOccurrenceNode’; did you mean ‘generateOccurrencesArray’? [-Wimplicit-function-declaration]
     OccurrenceNode *newNode = createOccurrenceNode(word, rank);
                               ^~~~~~~~~~~~~~~~~~~~
                               generateOccurrencesArray
main.c:230:31: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
main.c: In function ‘updateLocalHashtable’:
main.c:242:30: error: too many arguments to function ‘hashFunction’
     unsigned int hashIndex = hashFunction(word, localHashtable->size);
                              ^~~~~~~~~~~~
main.c:73:14: note: declared here
 unsigned int hashFunction(const char *word)
              ^~~~~~~~~~~~
main.c:245:31: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
     OccurrenceNode *newNode = createOccurrenceNode(word, rank);
                               ^~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHashtable’:
main.c:227:30: error: too many arguments to function ‘hashFunction’
     unsigned int hashIndex = hashFunction(word, globalHashtable->size);
                              ^~~~~~~~~~~~
main.c:73:14: note: declared here
 unsigned int hashFunction(const char *word)
              ^~~~~~~~~~~~
main.c:230:31: warning: implicit declaration of function ‘createOccurrenceNode’; did you mean ‘generateOccurrencesArray’? [-Wimplicit-function-declaration]
     OccurrenceNode *newNode = createOccurrenceNode(word, rank);
                               ^~~~~~~~~~~~~~~~~~~~
                               generateOccurrencesArray
main.c:230:31: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
main.c: In function ‘updateLocalHashtable’:
main.c:242:30: error: too many arguments to function ‘hashFunction’
     unsigned int hashIndex = hashFunction(word, localHashtable->size);
                              ^~~~~~~~~~~~
main.c:73:14: note: declared here
 unsigned int hashFunction(const char *word)
              ^~~~~~~~~~~~
main.c:245:31: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
     OccurrenceNode *newNode = createOccurrenceNode(word, rank);
                               ^~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHashtable’:
main.c:227:30: error: too many arguments to function ‘hashFunction’
     unsigned int hashIndex = hashFunction(word, globalHashtable->size);
                              ^~~~~~~~~~~~
main.c:73:14: note: declared here
 unsigned int hashFunction(const char *word)
              ^~~~~~~~~~~~
main.c:230:31: warning: implicit declaration of function ‘createOccurrenceNode’; did you mean ‘generateOccurrencesArray’? [-Wimplicit-function-declaration]
     OccurrenceNode *newNode = createOccurrenceNode(word, rank);
                               ^~~~~~~~~~~~~~~~~~~~
                               generateOccurrencesArray
main.c:230:31: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
main.c: In function ‘updateLocalHashtable’:
main.c:243:30: error: too many arguments to function ‘hashFunction’
     unsigned int hashIndex = hashFunction(word, localHashtable->size);
                              ^~~~~~~~~~~~
main.c:73:14: note: declared here
 unsigned int hashFunction(const char *word)
              ^~~~~~~~~~~~
main.c:246:31: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
     OccurrenceNode *newNode = createOccurrenceNode(word, rank);
                               ^~~~~~~~~~~~~~~~~~~~
main.c: In function ‘mergeLocalHashtables’:
main.c:237:17: warning: implicit declaration of function ‘updateGlobalHashtable’; did you mean ‘printLocalHashtable’? [-Wimplicit-function-declaration]
                 updateGlobalHashtable(globalHashtable, current->word, current->count);
                 ^~~~~~~~~~~~~~~~~~~~~
                 printLocalHashtable
main.c: At top level:
main.c:244:6: warning: conflicting types for ‘updateGlobalHashtable’
 void updateGlobalHashtable(Hashtable *globalHashtable, const char *word, int count)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:237:17: note: previous implicit declaration of ‘updateGlobalHashtable’ was here
                 updateGlobalHashtable(globalHashtable, current->word, current->count);
                 ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:448:52: error: ‘localHashtables’ undeclared (first use in this function); did you mean ‘localHashtable’?
             mergeLocalHashtables(&globalHashtable, localHashtables, num_processes);
                                                    ^~~~~~~~~~~~~~~
                                                    localHashtable
main.c:448:52: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:448:52: error: ‘localHashtables’ undeclared (first use in this function); did you mean ‘localHashtable’?
             mergeLocalHashtables(&globalHashtable, localHashtables, num_processes);
                                                    ^~~~~~~~~~~~~~~
                                                    localHashtable
main.c:448:52: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:448:52: error: incompatible type for argument 2 of ‘mergeLocalHashtables’
             mergeLocalHashtables(&globalHashtable, localHashtable, num_processes);
                                                    ^~~~~~~~~~~~~~
main.c:256:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void mergeLocalHashtables(Hashtable *globalHashtable, Hashtable *localHashtables, int numProcesses)
      ^~~~~~~~~~~~~~~~~~~~
main.c: In function ‘mergeLocalHashtables’:
main.c:263:36: error: ‘localHashtables’ undeclared (first use in this function); did you mean ‘localHashtable’?
         Hashtable localHashtable = localHashtables[i];
                                    ^~~~~~~~~~~~~~~
                                    localHashtable
main.c:263:36: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:448:52: error: incompatible type for argument 2 of ‘mergeLocalHashtables’
             mergeLocalHashtables(&globalHashtable, localHashtable, num_processes);
                                                    ^~~~~~~~~~~~~~
main.c:256:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void mergeLocalHashtables(Hashtable *globalHashtable, Hashtable *localHashtable, int numProcesses)
      ^~~~~~~~~~~~~~~~~~~~
main.c: In function ‘mergeLocalHashtables’:
main.c:263:50: error: subscripted value is neither array nor pointer nor vector
         Hashtable localHashtable = localHashtable[i];
                                                  ^
main.c: In function ‘main’:
main.c:448:52: error: incompatible type for argument 2 of ‘mergeLocalHashtables’
             mergeLocalHashtables(&globalHashtable, localHashtable, num_processes);
                                                    ^~~~~~~~~~~~~~
main.c:256:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void mergeLocalHashtables(Hashtable *globalHashtable, Hashtable *localHashtable, int numProcesses)
      ^~~~~~~~~~~~~~~~~~~~
main.c: In function ‘mergeLocalHashtables’:
main.c:263:50: error: subscripted value is neither array nor pointer nor vector
         Hashtable localHashtable = localHashtable[i];
                                                  ^
main.c: In function ‘main’:
main.c:448:52: error: incompatible type for argument 2 of ‘mergeLocalHashtables’
             mergeLocalHashtables(&globalHashtable, localHashtable, num_processes);
                                                    ^~~~~~~~~~~~~~
main.c:256:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void mergeLocalHashtables(Hashtable *globalHashtable, Hashtable *localHashtable, int numProcesses)
      ^~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:448:52: error: ‘localHashtables’ undeclared (first use in this function); did you mean ‘localHashtable’?
             mergeLocalHashtables(&globalHashtable, localHashtables, num_processes);
                                                    ^~~~~~~~~~~~~~~
                                                    localHashtable
main.c:448:52: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:448:52: error: incompatible type for argument 2 of ‘mergeLocalHashtables’
             mergeLocalHashtables(&globalHashtable, localHashtable, num_processes);
                                                    ^~~~~~~~~~~~~~
main.c:256:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void mergeLocalHashtables(Hashtable *globalHashtable, Hashtable *localHashtables, int numProcesses)
      ^~~~~~~~~~~~~~~~~~~~
main.c:29:26: error: ‘num_processes’ undeclared here (not in a function)
 Hashtable localHashtable[num_processes - 1];
                          ^~~~~~~~~~~~~
main.c: In function ‘mergeLocalHashtables’:
main.c:264:9: error: variable-sized object may not be initialized
         Hashtable localHashtables[i] = localHashtable;
         ^~~~~~~~~
main.c: In function ‘main’:
main.c:449:52: error: incompatible type for argument 2 of ‘mergeLocalHashtables’
             mergeLocalHashtables(&globalHashtable, localHashtable, num_processes);
                                                    ^~~~~~~~~~~~~~
main.c:257:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void mergeLocalHashtables(Hashtable *globalHashtable, Hashtable *localHashtables, int numProcesses)
      ^~~~~~~~~~~~~~~~~~~~
main.c: In function ‘mergeLocalHashtables’:
main.c:264:9: error: variable-sized object may not be initialized
         Hashtable localHashtables[i] = localHashtable;
         ^~~~~~~~~
main.c: In function ‘main’:
main.c:449:52: error: incompatible type for argument 2 of ‘mergeLocalHashtables’
             mergeLocalHashtables(&globalHashtable, localHashtable, num_processes);
                                                    ^~~~~~~~~~~~~~
main.c:257:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void mergeLocalHashtables(Hashtable *globalHashtable, Hashtable *localHashtables, int numProcesses)
      ^~~~~~~~~~~~~~~~~~~~
main.c: In function ‘mergeLocalHashtables’:
main.c:275:65: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
             updateWordCount(current->word, &localHashtableCopy, rank);
                                                                 ^~~~
                                                                 rand
main.c:275:65: note: each undeclared identifier is reported only once for each function it appears in
main.c:275:44: warning: passing argument 2 of ‘updateWordCount’ makes integer from pointer without a cast [-Wint-conversion]
             updateWordCount(current->word, &localHashtableCopy, rank);
                                            ^
main.c:101:6: note: expected ‘int’ but argument is of type ‘Hashtable * {aka struct <anonymous> *}’
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:275:13: error: too many arguments to function ‘updateWordCount’
             updateWordCount(current->word, &localHashtableCopy, rank);
             ^~~~~~~~~~~~~~~
main.c:101:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:281:44: warning: passing argument 2 of ‘updateGlobalHashtable’ from incompatible pointer type [-Wincompatible-pointer-types]
     updateGlobalHashtable(globalHashtable, &localHashtableCopy, rank);
                                            ^
main.c:222:6: note: expected ‘const char *’ but argument is of type ‘Hashtable * {aka struct <anonymous> *}’
 void updateGlobalHashtable(Hashtable *globalHashtable, const char *word, int count)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:39:24: error: expected declaration specifiers or ‘...’ before numeric constant
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                        ^
main.c:39:27: error: expected declaration specifiers or ‘...’ before ‘blocklengths’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                           ^~~~~~~~~~~~
main.c:39:41: error: expected declaration specifiers or ‘...’ before ‘displacement’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                         ^~~~~~~~~~~~
main.c:39:55: error: expected declaration specifiers or ‘...’ before ‘types’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                                       ^~~~~
main.c:39:62: error: expected declaration specifiers or ‘...’ before ‘&’ token
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                                              ^
main.c:40:17: error: expected declaration specifiers or ‘...’ before ‘&’ token
 MPI_Type_commit(&MPI_OCCURRENCE_NODE);
                 ^
main.c: In function ‘mergeLocalHashtables’:
main.c:259:56: warning: passing argument 2 of ‘updateGlobalHashtable’ from incompatible pointer type [-Wincompatible-pointer-types]
                 updateGlobalHashtable(globalHashtable, current->word, current->count);
                                                        ^~~~~~~
main.c:232:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘char *’
 void updateGlobalHashtable(Hashtable *globalHashtable, Hashtable *localHashtableCopy, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:38:24: error: expected declaration specifiers or ‘...’ before numeric constant
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                        ^
main.c:38:27: error: expected declaration specifiers or ‘...’ before ‘blocklengths’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                           ^~~~~~~~~~~~
main.c:38:41: error: expected declaration specifiers or ‘...’ before ‘displacement’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                         ^~~~~~~~~~~~
main.c:38:55: error: expected declaration specifiers or ‘...’ before ‘types’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                                       ^~~~~
main.c:38:62: error: expected declaration specifiers or ‘...’ before ‘&’ token
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                                              ^
main.c:39:17: error: expected declaration specifiers or ‘...’ before ‘&’ token
 MPI_Type_commit(&MPI_OCCURRENCE_NODE);
                 ^
main.c:41:24: error: expected declaration specifiers or ‘...’ before numeric constant
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                        ^
main.c:41:27: error: expected declaration specifiers or ‘...’ before ‘blocklengths’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                           ^~~~~~~~~~~~
main.c:41:41: error: expected declaration specifiers or ‘...’ before ‘displacement’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                         ^~~~~~~~~~~~
main.c:41:55: error: expected declaration specifiers or ‘...’ before ‘types’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                                       ^~~~~
main.c:41:62: error: expected declaration specifiers or ‘...’ before ‘&’ token
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                                              ^
main.c:42:17: error: expected declaration specifiers or ‘...’ before ‘&’ token
 MPI_Type_commit(&MPI_OCCURRENCE_NODE);
                 ^
main.c: In function ‘updateGlobalHashtable’:
main.c:237:34: error: ‘localHashtableCopy’ undeclared (first use in this function); did you mean ‘localHashtable’?
     for (unsigned int i = 0; i < localHashtableCopy->size; ++i)
                                  ^~~~~~~~~~~~~~~~~~
                                  localHashtable
main.c:237:34: note: each undeclared identifier is reported only once for each function it appears in
main.c:242:44: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
             updateWordCount(current->word, rank);
                                            ^~~~
                                            rand
main.c:38:24: error: expected declaration specifiers or ‘...’ before numeric constant
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                        ^
main.c:38:27: error: expected declaration specifiers or ‘...’ before ‘blocklengths’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                           ^~~~~~~~~~~~
main.c:38:41: error: expected declaration specifiers or ‘...’ before ‘displacement’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                         ^~~~~~~~~~~~
main.c:38:55: error: expected declaration specifiers or ‘...’ before ‘types’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                                       ^~~~~
main.c:38:62: error: expected declaration specifiers or ‘...’ before ‘&’ token
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                                              ^
main.c:39:17: error: expected declaration specifiers or ‘...’ before ‘&’ token
 MPI_Type_commit(&MPI_OCCURRENCE_NODE);
                 ^
main.c:41:24: error: expected declaration specifiers or ‘...’ before numeric constant
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                        ^
main.c:41:27: error: expected declaration specifiers or ‘...’ before ‘blocklengths’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                           ^~~~~~~~~~~~
main.c:41:41: error: expected declaration specifiers or ‘...’ before ‘displacement’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                         ^~~~~~~~~~~~
main.c:41:55: error: expected declaration specifiers or ‘...’ before ‘types’
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                                       ^~~~~
main.c:41:62: error: expected declaration specifiers or ‘...’ before ‘&’ token
 MPI_Type_create_struct(3, blocklengths, displacement, types, &MPI_OCCURRENCE_NODE);
                                                              ^
main.c:42:17: error: expected declaration specifiers or ‘...’ before ‘&’ token
 MPI_Type_commit(&MPI_OCCURRENCE_NODE);
                 ^
main.c: In function ‘updateGlobalHashtable’:
main.c:237:34: error: ‘localHashtableCopy’ undeclared (first use in this function); did you mean ‘localHashtable’?
     for (unsigned int i = 0; i < localHashtableCopy->size; ++i)
                                  ^~~~~~~~~~~~~~~~~~
                                  localHashtable
main.c:237:34: note: each undeclared identifier is reported only once for each function it appears in
main.c:242:44: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
             updateWordCount(current->word, rank);
                                            ^~~~
                                            rand
main.c: In function ‘updateGlobalHashtable’:
main.c:227:34: error: ‘localHashtableCopy’ undeclared (first use in this function); did you mean ‘localHashtable’?
     for (unsigned int i = 0; i < localHashtableCopy->size; ++i)
                                  ^~~~~~~~~~~~~~~~~~
                                  localHashtable
main.c:227:34: note: each undeclared identifier is reported only once for each function it appears in
main.c:232:44: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
             updateWordCount(current->word, rank);
                                            ^~~~
                                            rand
main.c: In function ‘main’:
main.c:295:61: error: ‘MPI_OCCURRENCE_NODE’ undeclared (first use in this function); did you mean ‘OMPI_COMM_TYPE_NODE’?
     MPI_Type_create_struct(2, blockcounts, offsets, types, &MPI_OCCURRENCE_NODE);
                                                             ^~~~~~~~~~~~~~~~~~~
                                                             OMPI_COMM_TYPE_NODE
main.c: In function ‘updateGlobalHashtable’:
main.c:227:34: error: ‘localHashtableCopy’ undeclared (first use in this function); did you mean ‘localHashtable’?
     for (unsigned int i = 0; i < localHashtableCopy->size; ++i)
                                  ^~~~~~~~~~~~~~~~~~
                                  localHashtable
main.c:227:34: note: each undeclared identifier is reported only once for each function it appears in
main.c:232:44: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
             updateWordCount(current->word, rank);
                                            ^~~~
                                            rand
main.c: In function ‘updateGlobalHashtable’:
main.c:227:34: error: ‘localHashtableCopy’ undeclared (first use in this function); did you mean ‘localHashtable’?
     for (unsigned int i = 0; i < localHashtableCopy->size; ++i)
                                  ^~~~~~~~~~~~~~~~~~
                                  localHashtable
main.c:227:34: note: each undeclared identifier is reported only once for each function it appears in
main.c:232:44: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
             updateWordCount(current->word, rank);
                                            ^~~~
                                            rand
main.c: In function ‘updateGlobalHashtable’:
main.c:227:34: error: ‘localHashtableCopy’ undeclared (first use in this function); did you mean ‘localHashtable’?
     for (unsigned int i = 0; i < localHashtableCopy->size; ++i)
                                  ^~~~~~~~~~~~~~~~~~
                                  localHashtable
main.c:227:34: note: each undeclared identifier is reported only once for each function it appears in
main.c:232:44: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
             updateWordCount(current->word, rank);
                                            ^~~~
                                            rand
main.c: In function ‘updateGlobalHashtable’:
main.c:228:34: error: ‘localHashtableCopy’ undeclared (first use in this function); did you mean ‘localHashtable’?
     for (unsigned int i = 0; i < localHashtableCopy->size; ++i)
                                  ^~~~~~~~~~~~~~~~~~
                                  localHashtable
main.c:228:34: note: each undeclared identifier is reported only once for each function it appears in
main.c:233:44: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
             updateWordCount(current->word, rank);
                                            ^~~~
                                            rand
main.c: In function ‘main’:
main.c:156:23: warning: implicit declaration of function ‘get_total_file_size’ [-Wimplicit-function-declaration]
     long total_size = get_total_file_size(dir, INPUT_DIR);
                       ^~~~~~~~~~~~~~~~~~~
main.c:253:72: error: ‘requests’ undeclared (first use in this function)
             MPI_Isend(&start_byte, 1, MPI_LONG, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                        ^~~~~~~~
main.c:253:72: note: each undeclared identifier is reported only once for each function it appears in
main.c:278:13: warning: implicit declaration of function ‘mergeLocalHashtables’; did you mean ‘printLocalHashtable’? [-Wimplicit-function-declaration]
             mergeLocalHashtables(&globalHashtable, &localHashtable, num_processes);
             ^~~~~~~~~~~~~~~~~~~~
             printLocalHashtable
main.c:281:13: warning: implicit declaration of function ‘printGlobalHashtable’; did you mean ‘printLocalHashtable’? [-Wimplicit-function-declaration]
             printGlobalHashtable(&globalHashtable);
             ^~~~~~~~~~~~~~~~~~~~
             printLocalHashtable
main.c: In function ‘main’:
main.c:172:23: warning: implicit declaration of function ‘get_total_file_size’ [-Wimplicit-function-declaration]
     long total_size = get_total_file_size(dir, INPUT_DIR);
                       ^~~~~~~~~~~~~~~~~~~
main.c:269:72: error: ‘requests’ undeclared (first use in this function)
             MPI_Isend(&start_byte, 1, MPI_LONG, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                        ^~~~~~~~
main.c:269:72: note: each undeclared identifier is reported only once for each function it appears in
main.c:294:13: warning: implicit declaration of function ‘mergeLocalHashtables’; did you mean ‘printLocalHashtable’? [-Wimplicit-function-declaration]
             mergeLocalHashtables(&globalHashtable, &localHashtable, num_processes);
             ^~~~~~~~~~~~~~~~~~~~
             printLocalHashtable
main.c: In function ‘main’:
main.c:297:72: error: ‘requests’ undeclared (first use in this function)
             MPI_Isend(&start_byte, 1, MPI_LONG, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                                                        ^~~~~~~~
main.c:297:72: note: each undeclared identifier is reported only once for each function it appears in
main.c:322:13: warning: implicit declaration of function ‘mergeLocalHashtables’; did you mean ‘printLocalHashtable’? [-Wimplicit-function-declaration]
             mergeLocalHashtables(&globalHashtable, &localHashtable, num_processes);
             ^~~~~~~~~~~~~~~~~~~~
             printLocalHashtable
main.c: In function ‘main’:
main.c:330:13: warning: implicit declaration of function ‘mergeLocalHashtables’; did you mean ‘printLocalHashtable’? [-Wimplicit-function-declaration]
             mergeLocalHashtables(&globalHashtable, &localHashtable, num_processes);
             ^~~~~~~~~~~~~~~~~~~~
             printLocalHashtable
build/main.o: In function `main':
/home/docker-mpi/src/main.c:330: undefined reference to `mergeLocalHashtables'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:444:9: error: too few arguments to function ‘freeHashtable’
         freeHashtable(); // Libera la memoria allocata precedentemente
         ^~~~~~~~~~~~~
main.c:50:6: note: declared here
 void freeHashtable(Hashtable *hashtable)
      ^~~~~~~~~~~~~
main.c:470:5: error: too few arguments to function ‘freeHashtable’
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:50:6: note: declared here
 void freeHashtable(Hashtable *hashtable)
      ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:444:9: error: too few arguments to function ‘freeHashtable’
         freeHashtable(); // Libera la memoria allocata precedentemente
         ^~~~~~~~~~~~~
main.c:50:6: note: declared here
 void freeHashtable(Hashtable *hashtable)
      ^~~~~~~~~~~~~
main.c:470:5: error: too few arguments to function ‘freeHashtable’
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:50:6: note: declared here
 void freeHashtable(Hashtable *hashtable)
      ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:441:7: error: redefinition of ‘buffer’
 char *buffer = (char *)malloc(localHashtableSize);
       ^~~~~~
main.c:439:15: note: previous definition of ‘buffer’ was here
         char *buffer = (char *)malloc(localHashtableSize);
               ^~~~~~
main.c: In function ‘updateWordCount’:
main.c:149:9: warning: implicit declaration of function ‘updateGlobalHashtable’; did you mean ‘initializeHashtable’? [-Wimplicit-function-declaration]
         updateGlobalHashtable(local_occurrences, local_total_occurrences, rank);
         ^~~~~~~~~~~~~~~~~~~~~
         initializeHashtable
main.c: At top level:
main.c:154:6: warning: conflicting types for ‘updateGlobalHashtable’
 void updateGlobalHashtable(const OccurrenceNode *localOccurrences, int localOccurrencesCount, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:149:9: note: previous implicit declaration of ‘updateGlobalHashtable’ was here
         updateGlobalHashtable(local_occurrences, local_total_occurrences, rank);
         ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:394:36: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘+’ token
         long start_byte, byte_count+1;
                                    ^
main.c:402:19: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘blockcounts’?
         MPI_Recv(&byte_count, 1, MPI_LONG, MASTER_RANK, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                   ^~~~~~~~~~
                   blockcounts
main.c:402:19: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:431:34: error: ‘buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
             deserializeHashtable(buffer, localHashtableSize);
                                  ^~~~~~
                                  setbuffer
main.c:431:34: note: each undeclared identifier is reported only once for each function it appears in
main.c:431:42: error: ‘localHashtableSize’ undeclared (first use in this function); did you mean ‘localHashtable’?
             deserializeHashtable(buffer, localHashtableSize);
                                          ^~~~~~~~~~~~~~~~~~
                                          localHashtable
main.c: In function ‘main’:
main.c:454:15: error: redeclaration of ‘local_data’ with no linkage
         char *local_data = (char *)malloc(received_byte_count * sizeof(char));
               ^~~~~~~~~~
main.c:442:15: note: previous declaration of ‘local_data’ was here
         char *local_data;
               ^~~~~~~~~~
main.c: In function ‘main’:
main.c:464:10: error: ‘local_data’ undeclared (first use in this function); did you mean ‘__locale_data’?
     free(local_data);
          ^~~~~~~~~~
          __locale_data
main.c:464:10: note: each undeclared identifier is reported only once for each function it appears in
main.c: At top level:
main.c:467:5: warning: data definition has no type or storage class
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:467:5: warning: type defaults to ‘int’ in declaration of ‘freeHashtable’ [-Wimplicit-int]
main.c:467:5: error: conflicting types for ‘freeHashtable’
main.c:54:6: note: previous definition of ‘freeHashtable’ was here
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:468:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:468:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:469:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:470:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:408:10: error: ‘buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
     free(buffer);
          ^~~~~~
          setbuffer
main.c:408:10: note: each undeclared identifier is reported only once for each function it appears in
main.c:414:14: error: ‘all_data’ undeclared (first use in this function); did you mean ‘alloca’?
         free(all_data);
              ^~~~~~~~
              alloca
main.c: At top level:
main.c:417:1: error: expected identifier or ‘(’ before ‘else’
 else
 ^~~~
main.c:481:5: warning: data definition has no type or storage class
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:481:5: warning: type defaults to ‘int’ in declaration of ‘freeHashtable’ [-Wimplicit-int]
main.c:481:5: error: conflicting types for ‘freeHashtable’
main.c:54:6: note: previous definition of ‘freeHashtable’ was here
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:482:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:482:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:483:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:484:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:406:14: error: ‘buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
         free(buffer);
              ^~~~~~
              setbuffer
main.c:406:14: note: each undeclared identifier is reported only once for each function it appears in
main.c:457:39: error: ‘localHashtableCount’ undeclared (first use in this function); did you mean ‘localHashtableSize’?
         char *buffer = (char *)malloc(localHashtableCount * sizeof(OccurrenceNode));
                                       ^~~~~~~~~~~~~~~~~~~
                                       localHashtableSize
main.c:458:24: error: ‘localHashtableArray’ undeclared (first use in this function); did you mean ‘localHashtableSize’?
         memcpy(buffer, localHashtableArray, localHashtableCount * sizeof(OccurrenceNode));
                        ^~~~~~~~~~~~~~~~~~~
                        localHashtableSize
main.c: In function ‘main’:
main.c:406:14: error: ‘buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
         free(buffer);
              ^~~~~~
              setbuffer
main.c:406:14: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:395:21: warning: passing argument 1 of ‘initializeHashtable’ makes integer from pointer without a cast [-Wint-conversion]
 initializeHashtable(localHashtableArray);
                     ^~~~~~~~~~~~~~~~~~~
main.c:36:6: note: expected ‘unsigned int’ but argument is of type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:446:91: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
         copyHashtable(&localHashtable, &(Hashtable){.size = localHashtableCount, .table = localHashtableArray});
                                                                                           ^~~~~~~~~~~~~~~~~~~
main.c:446:91: note: (near initialization for ‘(anonymous).table’)
main.c: In function ‘initializeGlobalHashtable’:
main.c:236:5: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     globalHashtable.size = size;
     ^~~~~~~~~~~~~~~
     localHashtable
main.c:236:5: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateGlobalHashtable’:
main.c:251:51: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     unsigned int hashIndex = hashFunction(word) % globalHashtable.size;
                                                   ^~~~~~~~~~~~~~~
                                                   localHashtable
main.c: In function ‘generateGlobalOccurrencesArray’:
main.c:284:65: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     OccurrenceNode *occurrencesArray = (OccurrenceNode *)malloc(globalHashtable.size * sizeof(OccurrenceNode));
                                                                 ^~~~~~~~~~~~~~~
                                                                 localHashtable
main.c: In function ‘combineLocalHashtables’:
main.c:230:25: error: ‘localNumOccurrences’ undeclared (first use in this function); did you mean ‘localOccurrences’?
     for (int i = 0; i < localNumOccurrences; ++i)
                         ^~~~~~~~~~~~~~~~~~~
                         localOccurrences
main.c:230:25: note: each undeclared identifier is reported only once for each function it appears in
main.c:232:51: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
         updateWordCount(localOccurrences[i].word, rank);
                                                   ^~~~
                                                   rand
main.c: In function ‘main’:
main.c:506:29: warning: passing argument 1 of ‘initializeHashtable’ makes integer from pointer without a cast [-Wint-conversion]
         initializeHashtable(local_data);
                             ^~~~~~~~~~
main.c:37:6: note: expected ‘unsigned int’ but argument is of type ‘char *’
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:1049:39: error: ‘localHashtableSize’ undeclared (first use in this function); did you mean ‘localHashtable’?
         char *buffer = (char *)malloc(localHashtableSize);
                                       ^~~~~~~~~~~~~~~~~~
                                       localHashtable
main.c:1049:39: note: each undeclared identifier is reported only once for each function it appears in
main.c:1067:103: error: ‘start_byte’ undeclared (first use in this function)
         printf("Processo %d: Ricevuto chunk da start_byte %ld, byte_count %ld, end_byte %ld\n", rank, start_byte, byte_count, end_byte);
                                                                                                       ^~~~~~~~~~
main.c:1067:115: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘blockcounts’?
         printf("Processo %d: Ricevuto chunk da start_byte %ld, byte_count %ld, end_byte %ld\n", rank, start_byte, byte_count, end_byte);
                                                                                                                   ^~~~~~~~~~
                                                                                                                   blockcounts
main.c:1067:127: error: ‘end_byte’ undeclared (first use in this function); did you mean ‘start_byte’?
         printf("Processo %d: Ricevuto chunk da start_byte %ld, byte_count %ld, end_byte %ld\n", rank, start_byte, byte_count, end_byte);
                                                                                                                               ^~~~~~~~
                                                                                                                               start_byte
main.c:1068:83: error: ‘local_data’ undeclared (first use in this function); did you mean ‘__locale_data’?
         printf("Processo %d: Contenuto del chunk: %.*s\n", rank, (int)byte_count, local_data);
                                                                                   ^~~~~~~~~~
                                                                                   __locale_data
main.c: In function ‘main’:
main.c:378:17: error: too many arguments to function ‘updateWordCount’
                 updateWordCount(node->word, node->count, MASTER_RANK);
                 ^~~~~~~~~~~~~~~
main.c:104:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:386:9: warning: implicit declaration of function ‘printGlobalHashtable’; did you mean ‘printLocalHashtable’? [-Wimplicit-function-declaration]
         printGlobalHashtable(MASTER_RANK);
         ^~~~~~~~~~~~~~~~~~~~
         printLocalHashtable
main.c: At top level:
main.c:392:1: error: expected identifier or ‘(’ before ‘else’
 else
 ^~~~
main.c:455:1: warning: data definition has no type or storage class
 freeHashtable();
 ^~~~~~~~~~~~~
main.c:455:1: warning: type defaults to ‘int’ in declaration of ‘freeHashtable’ [-Wimplicit-int]
main.c:455:1: error: conflicting types for ‘freeHashtable’
main.c:54:6: note: previous definition of ‘freeHashtable’ was here
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:456:1: warning: data definition has no type or storage class
 MPI_Finalize();
 ^~~~~~~~~~~~
main.c:456:1: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:457:1: error: expected identifier or ‘(’ before ‘return’
 return 0;
 ^~~~~~
main.c:458:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:378:17: error: too many arguments to function ‘updateWordCount’
                 updateWordCount(node->word, node->count, MASTER_RANK);
                 ^~~~~~~~~~~~~~~
main.c:104:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:386:9: warning: implicit declaration of function ‘printGlobalHashtable’; did you mean ‘printLocalHashtable’? [-Wimplicit-function-declaration]
         printGlobalHashtable(MASTER_RANK);
         ^~~~~~~~~~~~~~~~~~~~
         printLocalHashtable
main.c:437:15: error: redefinition of ‘buffer’
         char *buffer = serializeHashtable(localHashtable);
               ^~~~~~
main.c:434:15: note: previous definition of ‘buffer’ was here
         char *buffer = (char *)malloc(localHashtableSize * sizeof(OccurrenceNode));
               ^~~~~~
main.c:437:24: warning: implicit declaration of function ‘serializeHashtable’; did you mean ‘initializeHashtable’? [-Wimplicit-function-declaration]
         char *buffer = serializeHashtable(localHashtable);
                        ^~~~~~~~~~~~~~~~~~
                        initializeHashtable
main.c:437:24: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
main.c: In function ‘main’:
main.c:408:17: error: too many arguments to function ‘updateWordCount’
                 updateWordCount(receivedNodes[j].word, receivedNodes[j].count, MASTER_RANK);
                 ^~~~~~~~~~~~~~~
main.c:104:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:419:9: warning: implicit declaration of function ‘printGlobalHashtable’; did you mean ‘printLocalHashtable’? [-Wimplicit-function-declaration]
         printGlobalHashtable(MASTER_RANK);
         ^~~~~~~~~~~~~~~~~~~~
         printLocalHashtable
main.c:470:15: error: redefinition of ‘buffer’
         char *buffer = serializeHashtable(localHashtable);
               ^~~~~~
main.c:467:15: note: previous definition of ‘buffer’ was here
         char *buffer = (char *)malloc(localHashtableSize * sizeof(OccurrenceNode));
               ^~~~~~
main.c:470:43: error: incompatible type for argument 1 of ‘serializeHashtable’
         char *buffer = serializeHashtable(localHashtable);
                                           ^~~~~~~~~~~~~~
main.c:225:7: note: expected ‘OccurrenceNode ** {aka struct OccurrenceNode **}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 char *serializeHashtable(OccurrenceNode **table, int size, int *bufferSize)
       ^~~~~~~~~~~~~~~~~~
main.c:470:24: error: too few arguments to function ‘serializeHashtable’
         char *buffer = serializeHashtable(localHashtable);
                        ^~~~~~~~~~~~~~~~~~
main.c:225:7: note: declared here
 char *serializeHashtable(OccurrenceNode **table, int size, int *bufferSize)
       ^~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:408:17: error: too many arguments to function ‘updateWordCount’
                 updateWordCount(receivedNodes[j].word, receivedNodes[j].count, MASTER_RANK);
                 ^~~~~~~~~~~~~~~
main.c:104:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:419:9: warning: implicit declaration of function ‘printGlobalHashtable’; did you mean ‘printLocalHashtable’? [-Wimplicit-function-declaration]
         printGlobalHashtable(MASTER_RANK);
         ^~~~~~~~~~~~~~~~~~~~
         printLocalHashtable
main.c:470:15: error: redefinition of ‘buffer’
         char *buffer = serializeHashtable(localHashtable);
               ^~~~~~
main.c:467:15: note: previous definition of ‘buffer’ was here
         char *buffer = (char *)malloc(localHashtableSize * sizeof(OccurrenceNode));
               ^~~~~~
main.c:470:43: error: incompatible type for argument 1 of ‘serializeHashtable’
         char *buffer = serializeHashtable(localHashtable);
                                           ^~~~~~~~~~~~~~
main.c:225:7: note: expected ‘OccurrenceNode ** {aka struct OccurrenceNode **}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 char *serializeHashtable(OccurrenceNode **table, int size, int *bufferSize)
       ^~~~~~~~~~~~~~~~~~
main.c:470:24: error: too few arguments to function ‘serializeHashtable’
         char *buffer = serializeHashtable(localHashtable);
                        ^~~~~~~~~~~~~~~~~~
main.c:225:7: note: declared here
 char *serializeHashtable(OccurrenceNode **table, int size, int *bufferSize)
       ^~~~~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:150:9: error: too few arguments to function ‘updateWordCount’
         updateWordCount(local_occurrences[i].word, rank);
         ^~~~~~~~~~~~~~~
main.c:105:6: note: declared here
 void updateWordCount(const char *word, int count, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘printGlobalHashtable’:
main.c:255:34: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     for (unsigned int i = 0; i < globalHashtable.size; ++i) {
                                  ^~~~~~~~~~~~~~~
                                  localHashtable
main.c:255:34: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:465:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:105:6: note: declared here
 void updateWordCount(const char *word, int count, int rank)
      ^~~~~~~~~~~~~~~
main.c:484:15: error: redefinition of ‘buffer’
         char *buffer = serializeHashtable(localHashtable.table, localHashtable.size, &localHashtableSize);
               ^~~~~~
main.c:481:15: note: previous definition of ‘buffer’ was here
         char *buffer = (char *)malloc(localHashtableSize * sizeof(OccurrenceNode));
               ^~~~~~
main.c: In function ‘updateWordCount’:
main.c:150:9: error: too few arguments to function ‘updateWordCount’
         updateWordCount(local_occurrences[i].word, rank);
         ^~~~~~~~~~~~~~~
main.c:105:6: note: declared here
 void updateWordCount(const char *word, int count, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘printGlobalHashtable’:
main.c:255:34: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     for (unsigned int i = 0; i < globalHashtable.size; ++i) {
                                  ^~~~~~~~~~~~~~~
                                  localHashtable
main.c:255:34: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:465:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:105:6: note: declared here
 void updateWordCount(const char *word, int count, int rank)
      ^~~~~~~~~~~~~~~
main.c:484:15: error: redefinition of ‘buffer’
         char *buffer = serializeHashtable(localHashtable.table, localHashtable.size, &localHashtableSize);
               ^~~~~~
main.c:481:15: note: previous definition of ‘buffer’ was here
         char *buffer = (char *)malloc(localHashtableSize * sizeof(OccurrenceNode));
               ^~~~~~
main.c: In function ‘updateWordCount’:
main.c:151:9: error: too few arguments to function ‘updateWordCount’
         updateWordCount(local_occurrences[i].word, rank);
         ^~~~~~~~~~~~~~~
main.c:106:6: note: declared here
 void updateWordCount(const char *word, int count, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:486:15: error: redefinition of ‘buffer’
         char *buffer = serializeHashtable(localHashtable.table, localHashtable.size, &localHashtableSize);
               ^~~~~~
main.c:483:15: note: previous definition of ‘buffer’ was here
         char *buffer = (char *)malloc(localHashtableSize * sizeof(OccurrenceNode));
               ^~~~~~
main.c: In function ‘updateWordCount’:
main.c:151:9: error: too few arguments to function ‘updateWordCount’
         updateWordCount(local_occurrences[i].word, rank);
         ^~~~~~~~~~~~~~~
main.c:106:6: note: declared here
 void updateWordCount(const char *word, int count, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:294:5: error: unknown type name ‘GHashTable’; did you mean ‘Hashtable’?
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
     ^~~~~~~~~~
     Hashtable
main.c:294:24: warning: implicit declaration of function ‘g_hash_table_new’ [-Wimplicit-function-declaration]
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                        ^~~~~~~~~~~~~~~~
main.c:294:41: error: ‘g_str_hash’ undeclared (first use in this function)
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                                         ^~~~~~~~~~
main.c:294:41: note: each undeclared identifier is reported only once for each function it appears in
main.c:294:53: error: ‘g_str_equal’ undeclared (first use in this function); did you mean ‘g_str_hash’?
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                                                     ^~~~~~~~~~~
                                                     g_str_hash
main.c:314:9: error: unknown type name ‘GList’
         GList *all_occurrences = NULL;
         ^~~~~
main.c:416:29: error: ‘size’ undeclared (first use in this function); did you mean ‘size_t’?
         for (int i = 0; i < size - 1; i++)
                             ^~~~
                             size_t
main.c:422:39: error: ‘COMM_TAG’ undeclared (first use in this function)
             MPI_Probe(MPI_ANY_SOURCE, COMM_TAG, MPI_COMM_WORLD, &stat);
                                       ^~~~~~~~
main.c:430:17: error: unknown type name ‘gpointer’
                 gpointer lookup = g_hash_table_lookup(hash, occurrences[j].word);
                 ^~~~~~~~
main.c:430:35: warning: implicit declaration of function ‘g_hash_table_lookup’ [-Wimplicit-function-declaration]
                 gpointer lookup = g_hash_table_lookup(hash, occurrences[j].word);
                                   ^~~~~~~~~~~~~~~~~~~
main.c:431:28: warning: comparison between pointer and integer
                 if (lookup == NULL)
                            ^~
main.c:433:21: warning: implicit declaration of function ‘g_hash_table_insert’ [-Wimplicit-function-declaration]
                     g_hash_table_insert(hash, g_strdup(occurrences[j].word), GINT_TO_POINTER(occurrences[j].num));
                     ^~~~~~~~~~~~~~~~~~~
main.c:433:47: warning: implicit declaration of function ‘g_strdup’; did you mean ‘strdup’? [-Wimplicit-function-declaration]
                     g_hash_table_insert(hash, g_strdup(occurrences[j].word), GINT_TO_POINTER(occurrences[j].num));
                                               ^~~~~~~~
                                               strdup
main.c:433:78: warning: implicit declaration of function ‘GINT_TO_POINTER’ [-Wimplicit-function-declaration]
                     g_hash_table_insert(hash, g_strdup(occurrences[j].word), GINT_TO_POINTER(occurrences[j].num));
                                                                              ^~~~~~~~~~~~~~~
main.c:433:108: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘num’
                     g_hash_table_insert(hash, g_strdup(occurrences[j].word), GINT_TO_POINTER(occurrences[j].num));
                                                                                                            ^
main.c:438:71: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘num’
                                         GINT_TO_POINTER(occurrences[j].num + GPOINTER_TO_INT(lookup)));
                                                                       ^
main.c:438:78: warning: implicit declaration of function ‘GPOINTER_TO_INT’ [-Wimplicit-function-declaration]
                                         GINT_TO_POINTER(occurrences[j].num + GPOINTER_TO_INT(lookup)));
                                                                              ^~~~~~~~~~~~~~~
main.c:443:31: warning: implicit declaration of function ‘g_list_concat’ [-Wimplicit-function-declaration]
             all_occurrences = g_list_concat(all_occurrences, g_list_copy(occurrences));
                               ^~~~~~~~~~~~~
main.c:443:62: warning: implicit declaration of function ‘g_list_copy’; did you mean ‘__stpcpy’? [-Wimplicit-function-declaration]
             all_occurrences = g_list_concat(all_occurrences, g_list_copy(occurrences));
                                                              ^~~~~~~~~~~
                                                              __stpcpy
main.c:443:29: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
             all_occurrences = g_list_concat(all_occurrences, g_list_copy(occurrences));
                             ^
main.c:449:27: warning: implicit declaration of function ‘g_list_sort’ [-Wimplicit-function-declaration]
         all_occurrences = g_list_sort(all_occurrences, compareOccurrences);
                           ^~~~~~~~~~~
main.c:449:56: error: ‘compareOccurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
         all_occurrences = g_list_sort(all_occurrences, compareOccurrences);
                                                        ^~~~~~~~~~~~~~~~~~
                                                        local_occurrences
main.c:453:14: error: unknown type name ‘GList’
         for (GList *iter = all_occurrences; iter != NULL; iter = g_list_next(iter))
              ^~~~~
main.c:453:66: warning: implicit declaration of function ‘g_list_next’ [-Wimplicit-function-declaration]
         for (GList *iter = all_occurrences; iter != NULL; iter = g_list_next(iter))
                                                                  ^~~~~~~~~~~
main.c:453:64: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
         for (GList *iter = all_occurrences; iter != NULL; iter = g_list_next(iter))
                                                                ^
main.c:455:50: error: request for member ‘data’ in something not a structure or union
             char *word = ((OccurrenceNode *)(iter->data))->word;
                                                  ^~
main.c:461:9: warning: implicit declaration of function ‘g_list_free_full’ [-Wimplicit-function-declaration]
         g_list_free_full(all_occurrences, g_free);
         ^~~~~~~~~~~~~~~~
main.c:461:43: error: ‘g_free’ undeclared (first use in this function); did you mean ‘free’?
         g_list_free_full(all_occurrences, g_free);
                                           ^~~~~~
                                           free
main.c:462:9: warning: implicit declaration of function ‘g_hash_table_destroy’ [-Wimplicit-function-declaration]
         g_hash_table_destroy(hash);
         ^~~~~~~~~~~~~~~~~~~~
main.c:476:5: warning: implicit declaration of function ‘deserializeHashtable’; did you mean ‘serializeHashtable’? [-Wimplicit-function-declaration]
     deserializeHashtable(buffer, &localHashtable);
     ^~~~~~~~~~~~~~~~~~~~
     serializeHashtable
main.c:488:55: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘num’
             local_occurrences[local_occurrences_count].num = current->count;
                                                       ^
main.c:501:1: error: expected declaration or statement at end of input
 }
 ^
main.c: In function ‘main’:
main.c:294:5: error: unknown type name ‘GHashTable’; did you mean ‘Hashtable’?
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
     ^~~~~~~~~~
     Hashtable
main.c:294:24: warning: implicit declaration of function ‘g_hash_table_new’ [-Wimplicit-function-declaration]
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                        ^~~~~~~~~~~~~~~~
main.c:294:41: error: ‘g_str_hash’ undeclared (first use in this function)
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                                         ^~~~~~~~~~
main.c:294:41: note: each undeclared identifier is reported only once for each function it appears in
main.c:294:53: error: ‘g_str_equal’ undeclared (first use in this function); did you mean ‘g_str_hash’?
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                                                     ^~~~~~~~~~~
                                                     g_str_hash
main.c:314:9: error: unknown type name ‘GList’
         GList *all_occurrences = NULL;
         ^~~~~
main.c:416:29: error: ‘size’ undeclared (first use in this function); did you mean ‘size_t’?
         for (int i = 0; i < size - 1; i++)
                             ^~~~
                             size_t
main.c:422:39: error: ‘COMM_TAG’ undeclared (first use in this function)
             MPI_Probe(MPI_ANY_SOURCE, COMM_TAG, MPI_COMM_WORLD, &stat);
                                       ^~~~~~~~
main.c:430:17: error: unknown type name ‘gpointer’
                 gpointer lookup = g_hash_table_lookup(hash, occurrences[j].word);
                 ^~~~~~~~
main.c:430:35: warning: implicit declaration of function ‘g_hash_table_lookup’ [-Wimplicit-function-declaration]
                 gpointer lookup = g_hash_table_lookup(hash, occurrences[j].word);
                                   ^~~~~~~~~~~~~~~~~~~
main.c:431:28: warning: comparison between pointer and integer
                 if (lookup == NULL)
                            ^~
main.c:433:21: warning: implicit declaration of function ‘g_hash_table_insert’ [-Wimplicit-function-declaration]
                     g_hash_table_insert(hash, g_strdup(occurrences[j].word), GINT_TO_POINTER(occurrences[j].num));
                     ^~~~~~~~~~~~~~~~~~~
main.c:433:47: warning: implicit declaration of function ‘g_strdup’; did you mean ‘strdup’? [-Wimplicit-function-declaration]
                     g_hash_table_insert(hash, g_strdup(occurrences[j].word), GINT_TO_POINTER(occurrences[j].num));
                                               ^~~~~~~~
                                               strdup
main.c:433:78: warning: implicit declaration of function ‘GINT_TO_POINTER’ [-Wimplicit-function-declaration]
                     g_hash_table_insert(hash, g_strdup(occurrences[j].word), GINT_TO_POINTER(occurrences[j].num));
                                                                              ^~~~~~~~~~~~~~~
main.c:433:108: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘num’
                     g_hash_table_insert(hash, g_strdup(occurrences[j].word), GINT_TO_POINTER(occurrences[j].num));
                                                                                                            ^
main.c:438:71: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘num’
                                         GINT_TO_POINTER(occurrences[j].num + GPOINTER_TO_INT(lookup)));
                                                                       ^
main.c:438:78: warning: implicit declaration of function ‘GPOINTER_TO_INT’ [-Wimplicit-function-declaration]
                                         GINT_TO_POINTER(occurrences[j].num + GPOINTER_TO_INT(lookup)));
                                                                              ^~~~~~~~~~~~~~~
main.c:443:31: warning: implicit declaration of function ‘g_list_concat’ [-Wimplicit-function-declaration]
             all_occurrences = g_list_concat(all_occurrences, g_list_copy(occurrences));
                               ^~~~~~~~~~~~~
main.c:443:62: warning: implicit declaration of function ‘g_list_copy’; did you mean ‘__stpcpy’? [-Wimplicit-function-declaration]
             all_occurrences = g_list_concat(all_occurrences, g_list_copy(occurrences));
                                                              ^~~~~~~~~~~
                                                              __stpcpy
main.c:443:29: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
             all_occurrences = g_list_concat(all_occurrences, g_list_copy(occurrences));
                             ^
main.c:449:27: warning: implicit declaration of function ‘g_list_sort’ [-Wimplicit-function-declaration]
         all_occurrences = g_list_sort(all_occurrences, compareOccurrences);
                           ^~~~~~~~~~~
main.c:449:56: error: ‘compareOccurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
         all_occurrences = g_list_sort(all_occurrences, compareOccurrences);
                                                        ^~~~~~~~~~~~~~~~~~
                                                        local_occurrences
main.c:453:14: error: unknown type name ‘GList’
         for (GList *iter = all_occurrences; iter != NULL; iter = g_list_next(iter))
              ^~~~~
main.c:453:66: warning: implicit declaration of function ‘g_list_next’ [-Wimplicit-function-declaration]
         for (GList *iter = all_occurrences; iter != NULL; iter = g_list_next(iter))
                                                                  ^~~~~~~~~~~
main.c:453:64: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
         for (GList *iter = all_occurrences; iter != NULL; iter = g_list_next(iter))
                                                                ^
main.c:455:50: error: request for member ‘data’ in something not a structure or union
             char *word = ((OccurrenceNode *)(iter->data))->word;
                                                  ^~
main.c:461:9: warning: implicit declaration of function ‘g_list_free_full’ [-Wimplicit-function-declaration]
         g_list_free_full(all_occurrences, g_free);
         ^~~~~~~~~~~~~~~~
main.c:461:43: error: ‘g_free’ undeclared (first use in this function); did you mean ‘free’?
         g_list_free_full(all_occurrences, g_free);
                                           ^~~~~~
                                           free
main.c:462:9: warning: implicit declaration of function ‘g_hash_table_destroy’ [-Wimplicit-function-declaration]
         g_hash_table_destroy(hash);
         ^~~~~~~~~~~~~~~~~~~~
main.c:476:5: warning: implicit declaration of function ‘deserializeHashtable’; did you mean ‘serializeHashtable’? [-Wimplicit-function-declaration]
     deserializeHashtable(buffer, &localHashtable);
     ^~~~~~~~~~~~~~~~~~~~
     serializeHashtable
main.c:488:55: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘num’
             local_occurrences[local_occurrences_count].num = current->count;
                                                       ^
main.c:501:1: error: expected declaration or statement at end of input
 }
 ^
main.c: In function ‘deserializeHashtable’:
main.c:274:25: warning: passing argument 1 of ‘initializeHashtable’ makes integer from pointer without a cast [-Wint-conversion]
     initializeHashtable(table, size);
                         ^~~~~
main.c:37:6: note: expected ‘unsigned int’ but argument is of type ‘Hashtable * {aka struct <anonymous> *}’
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:274:5: error: too many arguments to function ‘initializeHashtable’
     initializeHashtable(table, size);
     ^~~~~~~~~~~~~~~~~~~
main.c:37:6: note: declared here
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘mergeLocalHashtable’:
main.c:282:5: error: unknown type name ‘GHashTableIter’; did you mean ‘Hashtable’?
     GHashTableIter iter;
     ^~~~~~~~~~~~~~
     Hashtable
main.c:283:5: error: unknown type name ‘gpointer’
     gpointer key, value;
     ^~~~~~~~
main.c:286:5: warning: implicit declaration of function ‘g_hash_table_iter_init’ [-Wimplicit-function-declaration]
     g_hash_table_iter_init(&iter, localHashtable->table);
     ^~~~~~~~~~~~~~~~~~~~~~
main.c:287:12: warning: implicit declaration of function ‘g_hash_table_iter_next’; did you mean ‘__has_include_next’? [-Wimplicit-function-declaration]
     while (g_hash_table_iter_next(&iter, &key, &value))
            ^~~~~~~~~~~~~~~~~~~~~~
            __has_include_next
main.c:290:9: error: unknown type name ‘gpointer’
         gpointer existingValue = g_hash_table_lookup(globalHashtable->table, key);
         ^~~~~~~~
main.c:290:34: warning: implicit declaration of function ‘g_hash_table_lookup’ [-Wimplicit-function-declaration]
         gpointer existingValue = g_hash_table_lookup(globalHashtable->table, key);
                                  ^~~~~~~~~~~~~~~~~~~
main.c:292:27: warning: comparison between pointer and integer
         if (existingValue != NULL)
                           ^~
main.c:295:28: warning: implicit declaration of function ‘GPOINTER_TO_INT’ [-Wimplicit-function-declaration]
             int newValue = GPOINTER_TO_INT(existingValue) + GPOINTER_TO_INT(value);
                            ^~~~~~~~~~~~~~~
main.c:296:13: warning: implicit declaration of function ‘g_hash_table_replace’ [-Wimplicit-function-declaration]
             g_hash_table_replace(globalHashtable->table, key, GINT_TO_POINTER(newValue));
             ^~~~~~~~~~~~~~~~~~~~
main.c:296:63: warning: implicit declaration of function ‘GINT_TO_POINTER’ [-Wimplicit-function-declaration]
             g_hash_table_replace(globalHashtable->table, key, GINT_TO_POINTER(newValue));
                                                               ^~~~~~~~~~~~~~~
main.c:301:13: warning: implicit declaration of function ‘g_hash_table_insert’ [-Wimplicit-function-declaration]
             g_hash_table_insert(globalHashtable->table, key, value);
             ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘saveResultsToCSV’:
main.c:319:5: error: unknown type name ‘GHashTableIter’; did you mean ‘Hashtable’?
     GHashTableIter iter;
     ^~~~~~~~~~~~~~
     Hashtable
main.c:320:5: error: unknown type name ‘gpointer’
     gpointer key, value;
     ^~~~~~~~
main.c:327:37: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
         fprintf(csvFile, "%s,%d\n", (char *)key, GPOINTER_TO_INT(value));
                                     ^
main.c: In function ‘main’:
main.c:359:5: error: unknown type name ‘GHashTable’; did you mean ‘Hashtable’?
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
     ^~~~~~~~~~
     Hashtable
main.c:359:24: warning: implicit declaration of function ‘g_hash_table_new’ [-Wimplicit-function-declaration]
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                        ^~~~~~~~~~~~~~~~
main.c:359:41: error: ‘g_str_hash’ undeclared (first use in this function)
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                                         ^~~~~~~~~~
main.c:359:41: note: each undeclared identifier is reported only once for each function it appears in
main.c:359:53: error: ‘g_str_equal’ undeclared (first use in this function); did you mean ‘g_str_hash’?
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                                                     ^~~~~~~~~~~
                                                     g_str_hash
main.c:379:9: error: unknown type name ‘GList’
         GList *all_occurrences = NULL;
         ^~~~~
main.c:499:13: error: too few arguments to function ‘mergeLocalHashtable’
             mergeLocalHashtable(&localHashtable);
             ^~~~~~~~~~~~~~~~~~~
main.c:280:6: note: declared here
 void mergeLocalHashtable(Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~~~~~
main.c:510:9: error: too few arguments to function ‘saveResultsToCSV’
         saveResultsToCSV();
         ^~~~~~~~~~~~~~~~
main.c:306:6: note: declared here
 void saveResultsToCSV(Hashtable *globalHashtable, const char *outputFileName)
      ^~~~~~~~~~~~~~~~
main.c:545:59: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘num’
                 local_occurrences[local_occurrences_count].num = current->count;
                                                           ^
main.c:553:75: error: ‘COMM_TAG’ undeclared (first use in this function)
         MPI_Send(local_occurrences, local_occurrences_count, wordtype, 0, COMM_TAG, MPI_COMM_WORLD);
                                                                           ^~~~~~~~
main.c: In function ‘deserializeHashtable’:
main.c:274:25: warning: passing argument 1 of ‘initializeHashtable’ makes integer from pointer without a cast [-Wint-conversion]
     initializeHashtable(table, size);
                         ^~~~~
main.c:37:6: note: expected ‘unsigned int’ but argument is of type ‘Hashtable * {aka struct <anonymous> *}’
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:274:5: error: too many arguments to function ‘initializeHashtable’
     initializeHashtable(table, size);
     ^~~~~~~~~~~~~~~~~~~
main.c:37:6: note: declared here
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘mergeLocalHashtable’:
main.c:282:5: error: unknown type name ‘GHashTableIter’; did you mean ‘Hashtable’?
     GHashTableIter iter;
     ^~~~~~~~~~~~~~
     Hashtable
main.c:283:5: error: unknown type name ‘gpointer’
     gpointer key, value;
     ^~~~~~~~
main.c:286:5: warning: implicit declaration of function ‘g_hash_table_iter_init’ [-Wimplicit-function-declaration]
     g_hash_table_iter_init(&iter, localHashtable->table);
     ^~~~~~~~~~~~~~~~~~~~~~
main.c:287:12: warning: implicit declaration of function ‘g_hash_table_iter_next’; did you mean ‘__has_include_next’? [-Wimplicit-function-declaration]
     while (g_hash_table_iter_next(&iter, &key, &value))
            ^~~~~~~~~~~~~~~~~~~~~~
            __has_include_next
main.c:290:9: error: unknown type name ‘gpointer’
         gpointer existingValue = g_hash_table_lookup(globalHashtable->table, key);
         ^~~~~~~~
main.c:290:34: warning: implicit declaration of function ‘g_hash_table_lookup’ [-Wimplicit-function-declaration]
         gpointer existingValue = g_hash_table_lookup(globalHashtable->table, key);
                                  ^~~~~~~~~~~~~~~~~~~
main.c:292:27: warning: comparison between pointer and integer
         if (existingValue != NULL)
                           ^~
main.c:295:28: warning: implicit declaration of function ‘GPOINTER_TO_INT’ [-Wimplicit-function-declaration]
             int newValue = GPOINTER_TO_INT(existingValue) + GPOINTER_TO_INT(value);
                            ^~~~~~~~~~~~~~~
main.c:296:13: warning: implicit declaration of function ‘g_hash_table_replace’ [-Wimplicit-function-declaration]
             g_hash_table_replace(globalHashtable->table, key, GINT_TO_POINTER(newValue));
             ^~~~~~~~~~~~~~~~~~~~
main.c:296:63: warning: implicit declaration of function ‘GINT_TO_POINTER’ [-Wimplicit-function-declaration]
             g_hash_table_replace(globalHashtable->table, key, GINT_TO_POINTER(newValue));
                                                               ^~~~~~~~~~~~~~~
main.c:301:13: warning: implicit declaration of function ‘g_hash_table_insert’ [-Wimplicit-function-declaration]
             g_hash_table_insert(globalHashtable->table, key, value);
             ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘saveResultsToCSV’:
main.c:319:5: error: unknown type name ‘GHashTableIter’; did you mean ‘Hashtable’?
     GHashTableIter iter;
     ^~~~~~~~~~~~~~
     Hashtable
main.c:320:5: error: unknown type name ‘gpointer’
     gpointer key, value;
     ^~~~~~~~
main.c:327:37: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
         fprintf(csvFile, "%s,%d\n", (char *)key, GPOINTER_TO_INT(value));
                                     ^
main.c: In function ‘main’:
main.c:359:5: error: unknown type name ‘GHashTable’; did you mean ‘Hashtable’?
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
     ^~~~~~~~~~
     Hashtable
main.c:359:24: warning: implicit declaration of function ‘g_hash_table_new’ [-Wimplicit-function-declaration]
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                        ^~~~~~~~~~~~~~~~
main.c:359:41: error: ‘g_str_hash’ undeclared (first use in this function)
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                                         ^~~~~~~~~~
main.c:359:41: note: each undeclared identifier is reported only once for each function it appears in
main.c:359:53: error: ‘g_str_equal’ undeclared (first use in this function); did you mean ‘g_str_hash’?
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                                                     ^~~~~~~~~~~
                                                     g_str_hash
main.c:379:9: error: unknown type name ‘GList’
         GList *all_occurrences = NULL;
         ^~~~~
main.c:499:13: error: too few arguments to function ‘mergeLocalHashtable’
             mergeLocalHashtable(&localHashtable);
             ^~~~~~~~~~~~~~~~~~~
main.c:280:6: note: declared here
 void mergeLocalHashtable(Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~~~~~
main.c:510:9: error: too few arguments to function ‘saveResultsToCSV’
         saveResultsToCSV();
         ^~~~~~~~~~~~~~~~
main.c:306:6: note: declared here
 void saveResultsToCSV(Hashtable *globalHashtable, const char *outputFileName)
      ^~~~~~~~~~~~~~~~
main.c:545:59: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘num’
                 local_occurrences[local_occurrences_count].num = current->count;
                                                           ^
main.c:553:75: error: ‘COMM_TAG’ undeclared (first use in this function)
         MPI_Send(local_occurrences, local_occurrences_count, wordtype, 0, COMM_TAG, MPI_COMM_WORLD);
                                                                           ^~~~~~~~
main.c: In function ‘deserializeHashtable’:
main.c:275:25: warning: passing argument 1 of ‘initializeHashtable’ makes integer from pointer without a cast [-Wint-conversion]
     initializeHashtable(table);
                         ^~~~~
main.c:37:6: note: expected ‘unsigned int’ but argument is of type ‘Hashtable * {aka struct <anonymous> *}’
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘mergeLocalHashtable’:
main.c:283:5: error: unknown type name ‘GHashTableIter’; did you mean ‘Hashtable’?
     GHashTableIter iter;
     ^~~~~~~~~~~~~~
     Hashtable
main.c:284:5: error: unknown type name ‘gpointer’
     gpointer key, value;
     ^~~~~~~~
main.c:287:5: warning: implicit declaration of function ‘g_hash_table_iter_init’ [-Wimplicit-function-declaration]
     g_hash_table_iter_init(&iter, localHashtable->table);
     ^~~~~~~~~~~~~~~~~~~~~~
main.c:288:12: warning: implicit declaration of function ‘g_hash_table_iter_next’; did you mean ‘__has_include_next’? [-Wimplicit-function-declaration]
     while (g_hash_table_iter_next(&iter, &key, &value))
            ^~~~~~~~~~~~~~~~~~~~~~
            __has_include_next
main.c:291:9: error: unknown type name ‘gpointer’
         gpointer existingValue = g_hash_table_lookup(globalHashtable->table, key);
         ^~~~~~~~
main.c:291:34: warning: implicit declaration of function ‘g_hash_table_lookup’ [-Wimplicit-function-declaration]
         gpointer existingValue = g_hash_table_lookup(globalHashtable->table, key);
                                  ^~~~~~~~~~~~~~~~~~~
main.c:293:27: warning: comparison between pointer and integer
         if (existingValue != NULL)
                           ^~
main.c:296:28: warning: implicit declaration of function ‘GPOINTER_TO_INT’ [-Wimplicit-function-declaration]
             int newValue = GPOINTER_TO_INT(existingValue) + GPOINTER_TO_INT(value);
                            ^~~~~~~~~~~~~~~
main.c:297:13: warning: implicit declaration of function ‘g_hash_table_replace’ [-Wimplicit-function-declaration]
             g_hash_table_replace(globalHashtable->table, key, GINT_TO_POINTER(newValue));
             ^~~~~~~~~~~~~~~~~~~~
main.c:297:63: warning: implicit declaration of function ‘GINT_TO_POINTER’ [-Wimplicit-function-declaration]
             g_hash_table_replace(globalHashtable->table, key, GINT_TO_POINTER(newValue));
                                                               ^~~~~~~~~~~~~~~
main.c:302:13: warning: implicit declaration of function ‘g_hash_table_insert’ [-Wimplicit-function-declaration]
             g_hash_table_insert(globalHashtable->table, key, value);
             ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘saveResultsToCSV’:
main.c:321:5: error: unknown type name ‘GHashTableIter’; did you mean ‘Hashtable’?
     GHashTableIter iter;
     ^~~~~~~~~~~~~~
     Hashtable
main.c:322:5: error: unknown type name ‘gpointer’
     gpointer key, value;
     ^~~~~~~~
main.c:329:37: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
         fprintf(csvFile, "%s,%d\n", (char *)key, GPOINTER_TO_INT(value));
                                     ^
main.c: In function ‘main’:
main.c:361:5: error: unknown type name ‘GHashTable’; did you mean ‘Hashtable’?
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
     ^~~~~~~~~~
     Hashtable
main.c:361:24: warning: implicit declaration of function ‘g_hash_table_new’ [-Wimplicit-function-declaration]
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                        ^~~~~~~~~~~~~~~~
main.c:361:41: error: ‘g_str_hash’ undeclared (first use in this function)
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                                         ^~~~~~~~~~
main.c:361:41: note: each undeclared identifier is reported only once for each function it appears in
main.c:361:53: error: ‘g_str_equal’ undeclared (first use in this function); did you mean ‘g_str_hash’?
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                                                     ^~~~~~~~~~~
                                                     g_str_hash
main.c:381:9: error: unknown type name ‘GList’
         GList *all_occurrences = NULL;
         ^~~~~
main.c:498:34: warning: passing argument 1 of ‘deserializeHashtable’ from incompatible pointer type [-Wincompatible-pointer-types]
             deserializeHashtable(buffer, &localHashtable);
                                  ^~~~~~
main.c:269:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘char *’
 void deserializeHashtable(Hashtable *table, const char *buffer)
      ^~~~~~~~~~~~~~~~~~~~
main.c:498:42: warning: passing argument 2 of ‘deserializeHashtable’ from incompatible pointer type [-Wincompatible-pointer-types]
             deserializeHashtable(buffer, &localHashtable);
                                          ^
main.c:269:6: note: expected ‘const char *’ but argument is of type ‘Hashtable * {aka struct <anonymous> *}’
 void deserializeHashtable(Hashtable *table, const char *buffer)
      ^~~~~~~~~~~~~~~~~~~~
main.c:501:13: error: too few arguments to function ‘mergeLocalHashtable’
             mergeLocalHashtable(&localHashtable);
             ^~~~~~~~~~~~~~~~~~~
main.c:281:6: note: declared here
 void mergeLocalHashtable(Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~~~~~
main.c:512:9: error: too few arguments to function ‘saveResultsToCSV’
         saveResultsToCSV();
         ^~~~~~~~~~~~~~~~
main.c:307:6: note: declared here
 void saveResultsToCSV(Hashtable *globalHashtable, const char *outputFileName)
      ^~~~~~~~~~~~~~~~
main.c:533:30: warning: passing argument 1 of ‘deserializeHashtable’ from incompatible pointer type [-Wincompatible-pointer-types]
         deserializeHashtable(buffer, &localHashtable);
                              ^~~~~~
main.c:269:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘char *’
 void deserializeHashtable(Hashtable *table, const char *buffer)
      ^~~~~~~~~~~~~~~~~~~~
main.c:533:38: warning: passing argument 2 of ‘deserializeHashtable’ from incompatible pointer type [-Wincompatible-pointer-types]
         deserializeHashtable(buffer, &localHashtable);
                                      ^
main.c:269:6: note: expected ‘const char *’ but argument is of type ‘Hashtable * {aka struct <anonymous> *}’
 void deserializeHashtable(Hashtable *table, const char *buffer)
      ^~~~~~~~~~~~~~~~~~~~
main.c:547:59: error: ‘OccurrenceNode {aka struct OccurrenceNode}’ has no member named ‘num’
                 local_occurrences[local_occurrences_count].num = current->count;
                                                           ^
main.c:555:75: error: ‘COMM_TAG’ undeclared (first use in this function)
         MPI_Send(local_occurrences, local_occurrences_count, wordtype, 0, COMM_TAG, MPI_COMM_WORLD);
                                                                           ^~~~~~~~
main.c: In function ‘main’:
main.c:368:59: error: ‘status’ undeclared (first use in this function); did you mean ‘stat’?
             MPI_Probe(MPI_ANY_SOURCE, 0, MPI_COMM_WORLD, &status);
                                                           ^~~~~~
                                                           stat
main.c:368:59: note: each undeclared identifier is reported only once for each function it appears in
main.c:390:79: error: ‘compareOccurrenceNodes’ undeclared (first use in this function); did you mean ‘OccurrenceNode’?
         qsort(allOccurrencesArray, total_occurrences, sizeof(OccurrenceNode), compareOccurrenceNodes);
                                                                               ^~~~~~~~~~~~~~~~~~~~~~
                                                                               OccurrenceNode
main.c: In function ‘main’:
main.c:390:79: error: ‘compareOccurrenceNodes’ undeclared (first use in this function); did you mean ‘OccurrenceNode’?
         qsort(allOccurrencesArray, total_occurrences, sizeof(OccurrenceNode), compareOccurrenceNodes);
                                                                               ^~~~~~~~~~~~~~~~~~~~~~
                                                                               OccurrenceNode
main.c:390:79: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:390:79: error: ‘compareOccurrenceNodes’ undeclared (first use in this function); did you mean ‘OccurrenceNode’?
         qsort(allOccurrencesArray, total_occurrences, sizeof(OccurrenceNode), compareOccurrenceNodes);
                                                                               ^~~~~~~~~~~~~~~~~~~~~~
                                                                               OccurrenceNode
main.c:390:79: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:458:22: error: ‘send_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
 MPI_OCCURRENCE_NODE *send_buffer = (MPI_OCCURRENCE_NODE *)malloc(parolecontate * sizeof(OccurrenceNode));
                      ^~~~~~~~~~~
                      setbuffer
main.c:458:22: note: each undeclared identifier is reported only once for each function it appears in
main.c:458:58: error: expected expression before ‘)’ token
 MPI_OCCURRENCE_NODE *send_buffer = (MPI_OCCURRENCE_NODE *)malloc(parolecontate * sizeof(OccurrenceNode));
                                                          ^
main.c: In function ‘main’:
main.c:488:1: error: expected declaration or statement at end of input
 }
 ^
main.c: In function ‘freeHashtable’:
main.c:77:10: error: ‘local_occurrences’ undeclared (first use in this function); did you mean ‘total_occurrences’?
     free(local_occurrences);
          ^~~~~~~~~~~~~~~~~
          total_occurrences
main.c:77:10: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateWordCount’:
main.c:154:25: error: ‘local_occurrences’ undeclared (first use in this function); did you mean ‘total_occurrences’?
         updateWordCount(local_occurrences[i].word, rank);
                         ^~~~~~~~~~~~~~~~~
                         total_occurrences
main.c:58:70: error: ‘total_size’ undeclared here (not in a function)
         OccurrenceNode *local_occurrences = (OccurrenceNode *)malloc(total_size * sizeof(OccurrenceNode));
                                                                      ^~~~~~~~~~
main.c: In function ‘main’:
main.c:277:62: error: ‘max_occurrences’ undeclared (first use in this function); did you mean ‘all_occurrences’?
 OccurrenceNode *local_occurrences = (OccurrenceNode *)malloc(max_occurrences * sizeof(OccurrenceNode));
                                                              ^~~~~~~~~~~~~~~
                                                              all_occurrences
main.c:277:62: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:459:5: error: expected ‘}’ before ‘else’
     else
     ^~~~
main.c: In function ‘main’:
main.c:457:45: warning: passing argument 2 of ‘writeCSV’ from incompatible pointer type [-Wincompatible-pointer-types]
             writeCSV("final_histogram.csv", finalHistogram, total_occurrences);
                                             ^~~~~~~~~~~~~~
main.c:214:6: note: expected ‘HistogramNode * {aka struct HistogramNode *}’ but argument is of type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
 void writeCSV(const char *filename, HistogramNode *histogram, int size)
      ^~~~~~~~
main.c:471:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:551:5: warning: data definition has no type or storage class
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:551:5: warning: type defaults to ‘int’ in declaration of ‘freeHashtable’ [-Wimplicit-int]
main.c:551:5: error: conflicting types for ‘freeHashtable’
main.c:60:6: note: previous definition of ‘freeHashtable’ was here
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:552:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:552:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:553:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:554:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘updateWordCount’:
main.c:138:13: warning: implicit declaration of function ‘updateGlobalWordCount’; did you mean ‘updateWordCount’? [-Wimplicit-function-declaration]
             updateGlobalWordCount(cleanedWord, rank, globalHashtable);
             ^~~~~~~~~~~~~~~~~~~~~
             updateWordCount
main.c: At top level:
main.c:160:6: warning: conflicting types for ‘updateGlobalWordCount’
 void updateGlobalWordCount(const char *word, int rank, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:138:13: note: previous implicit declaration of ‘updateGlobalWordCount’ was here
             updateGlobalWordCount(cleanedWord, rank, globalHashtable);
             ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:476:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(finalHistogram[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:109:6: note: declared here
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c:551:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:109:6: note: declared here
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c:565:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(tempOccurrences[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:109:6: note: declared here
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:476:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(finalHistogram[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:139:6: note: declared here
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c:551:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:139:6: note: declared here
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c:565:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(tempOccurrences[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:139:6: note: declared here
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:476:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(finalHistogram[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:138:6: note: declared here
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c:551:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:138:6: note: declared here
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c:565:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(tempOccurrences[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:138:6: note: declared here
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:478:59: error: incompatible type for argument 3 of ‘updateWordCount’
             updateWordCount(finalHistogram[i].word, rank, localHashtable, globalHashtable);
                                                           ^~~~~~~~~~~~~~
main.c:138:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c:552:42: error: incompatible type for argument 3 of ‘updateWordCount’
             updateWordCount(token, rank, localHashtable, globalHashtable);
                                          ^~~~~~~~~~~~~~
main.c:138:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c:567:60: error: incompatible type for argument 3 of ‘updateWordCount’
             updateWordCount(tempOccurrences[i].word, rank, localHashtable, globalHashtable);
                                                            ^~~~~~~~~~~~~~
main.c:138:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:478:59: error: incompatible type for argument 3 of ‘updateWordCount’
             updateWordCount(finalHistogram[i].word, rank, localHashtable, globalHashtable);
                                                           ^~~~~~~~~~~~~~
main.c:138:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void updateWordCount(const char *word, int rank, Hashtable *localHashtable, Hashtable *globalHashtable)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:250:61: error: ‘MPI_OCCURRENCE_NODE’ undeclared (first use in this function); did you mean ‘OMPI_COMM_TYPE_NODE’?
     MPI_Type_create_struct(2, blockcounts, offsets, types, &MPI_OCCURRENCE_NODE);
                                                             ^~~~~~~~~~~~~~~~~~~
                                                             OMPI_COMM_TYPE_NODE
main.c:250:61: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:388:79: error: ‘words_in_message’ undeclared (first use in this function); did you mean ‘ompi_message_t’?
     printf("Processo %d: Ricevute %d OccurrenceNode da processo %d:\n", rank, words_in_message, status.MPI_SOURCE);
                                                                               ^~~~~~~~~~~~~~~~
                                                                               ompi_message_t
main.c:388:79: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:388:79: error: ‘words_in_message’ undeclared (first use in this function); did you mean ‘ompi_message_t’?
     printf("Processo %d: Ricevute %d OccurrenceNode da processo %d:\n", rank, words_in_message, status.MPI_SOURCE);
                                                                               ^~~~~~~~~~~~~~~~
                                                                               ompi_message_t
main.c:388:79: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:401:107: error: ‘words_in_message’ undeclared (first use in this function); did you mean ‘ompi_message_t’?
                 allOccurrencesArray = (OccurrenceNode *)realloc(allOccurrencesArray, (total_occurrences + words_in_message) * sizeof(OccurrenceNode));
                                                                                                           ^~~~~~~~~~~~~~~~
                                                                                                           ompi_message_t
main.c:401:107: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:388:79: error: ‘words_in_message’ undeclared (first use in this function); did you mean ‘ompi_message_t’?
     printf("Processo %d: Ricevute %d OccurrenceNode da processo %d:\n", rank, words_in_message, status.MPI_SOURCE);
                                                                               ^~~~~~~~~~~~~~~~
                                                                               ompi_message_t
main.c:388:79: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:574:58: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
     printf("Processo %d: Dimensione di send_buffer[%d]: %d bytes\n", rank, i, sizeof(send_buffer[i]));
                                                         ~^
                                                         %ld
main.c: In function ‘main’:
main.c:551:29: error: expected ‘;’ before ‘send_buffer’
         MPI_OCCURRENCE_NODE send_buffer[parolecontate];
                             ^~~~~~~~~~~
main.c:560:16: error: ‘send_buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
         memcpy(send_buffer, local_occurrences, parolecontate * sizeof(OccurrenceNode));
                ^~~~~~~~~~~
                setbuffer
main.c:560:16: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:553:29: error: expected ‘;’ before ‘send_buffer’
         MPI_OCCURRENCE_NODE send_buffer[parolecontate];
                             ^~~~~~~~~~~
main.c: In function ‘main’:
main.c:568:29: error: ‘local_occurrences_count’ undeclared (first use in this function); did you mean ‘local_occurrences’?
 MPI_Send(local_occurrences, local_occurrences_count, MPI_OCCURRENCE_NODE, MASTER, 0, MPI_COMM_WORLD);
                             ^~~~~~~~~~~~~~~~~~~~~~~
                             local_occurrences
main.c:568:29: note: each undeclared identifier is reported only once for each function it appears in
main.c:568:75: error: ‘MASTER’ undeclared (first use in this function)
 MPI_Send(local_occurrences, local_occurrences_count, MPI_OCCURRENCE_NODE, MASTER, 0, MPI_COMM_WORLD);
                                                                           ^~~~~~
main.c: In function ‘main’:
main.c:568:29: error: ‘local_occurrences_count’ undeclared (first use in this function); did you mean ‘local_occurrences’?
 MPI_Send(local_occurrences, local_occurrences_count, MPI_OCCURRENCE_NODE, MASTER, 0, MPI_COMM_WORLD);
                             ^~~~~~~~~~~~~~~~~~~~~~~
                             local_occurrences
main.c:568:29: note: each undeclared identifier is reported only once for each function it appears in
main.c:568:75: error: ‘MASTER’ undeclared (first use in this function)
 MPI_Send(local_occurrences, local_occurrences_count, MPI_OCCURRENCE_NODE, MASTER, 0, MPI_COMM_WORLD);
                                                                           ^~~~~~
main.c: In function ‘main’:
main.c:572:97: error: ‘MASTER’ undeclared (first use in this function)
 printf("Processo %d: Inviato %d OccurrenceNode a processo %d\n", rank, local_occurrences_count, MASTER);
                                                                                                 ^~~~~~
main.c:572:97: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:377:24: error: ‘MPI_OccurrenceNode_Type’ undeclared (first use in this function); did you mean ‘OccurrenceNode’?
 MPI_Get_count(&status, MPI_OccurrenceNode_Type, &words_in_message);
                        ^~~~~~~~~~~~~~~~~~~~~~~
                        OccurrenceNode
main.c:377:24: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:380:24: error: ‘MPI_OccurrenceNode_Type’ undeclared (first use in this function); did you mean ‘OccurrenceNode’?
 MPI_Get_count(&status, MPI_OccurrenceNode_Type, &words_in_message);
                        ^~~~~~~~~~~~~~~~~~~~~~~
                        OccurrenceNode
main.c:380:24: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:384:47: error: ‘MPI_OccurrenceNode_Type’ undeclared (first use in this function); did you mean ‘OccurrenceNode’?
 MPI_Recv(occurrencesBuffer, words_in_message, MPI_OccurrenceNode_Type, status.MPI_SOURCE, 0, MPI_COMM_WORLD, &status);
                                               ^~~~~~~~~~~~~~~~~~~~~~~
                                               OccurrenceNode
main.c:384:47: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:574:38: error: ‘MPI_OccurrenceNode_Type’ undeclared (first use in this function); did you mean ‘OccurrenceNode’?
 MPI_Send(send_buffer, parolecontate, MPI_OccurrenceNode_Type, MASTER_RANK, 0, MPI_COMM_WORLD);
                                      ^~~~~~~~~~~~~~~~~~~~~~~
                                      OccurrenceNode
main.c:574:38: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:563:17: error: redefinition of ‘send_buffer’
 OccurrenceNode *send_buffer = (OccurrenceNode *)malloc(parolecontate * sizeof(OccurrenceNode));
                 ^~~~~~~~~~~
main.c:553:25: note: previous definition of ‘send_buffer’ was here
         OccurrenceNode *send_buffer = (OccurrenceNode *)malloc(parolecontate * sizeof(OccurrenceNode));
                         ^~~~~~~~~~~
main.c: In function ‘main’:
main.c:566:61: error: ‘WORD_LENGTH’ undeclared (first use in this function); did you mean ‘MAX_WORD_LENGTH’?
     strncpy(send_buffer[i].word, local_occurrences[i].word, WORD_LENGTH); // WORD_LENGTH deve essere definito
                                                             ^~~~~~~~~~~
                                                             MAX_WORD_LENGTH
main.c:566:61: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:534:17: error: redefinition of ‘tempOccurrences’
 OccurrenceNode *tempOccurrences = (OccurrenceNode *)malloc(parolecontate * sizeof(OccurrenceNode));
                 ^~~~~~~~~~~~~~~
main.c:530:25: note: previous definition of ‘tempOccurrences’ was here
         OccurrenceNode *tempOccurrences = (OccurrenceNode *)malloc(parolecontate * sizeof(OccurrenceNode));
                         ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:150:35: error: lvalue required as left operand of assignment
     local_occurrences + hashIndex = newNode;
                                   ^
main.c: In function ‘updateWordCount’:
main.c:128:32: error: lvalue required as unary ‘&’ operand
     OccurrenceNode **current = &(local_occurrences + hashIndex);
                                ^
main.c: In function ‘main’:
main.c:564:57: error: expected ‘)’ before ‘;’ token
         MPI_Send(&localHashtable, 1, MPI_OCCURRENCE_NODE;, MASTER_RANK, 0, MPI_COMM_WORLD);
                                                         ^
main.c:564:9: error: too few arguments to function ‘MPI_Send’
         MPI_Send(&localHashtable, 1, MPI_OCCURRENCE_NODE;, MASTER_RANK, 0, MPI_COMM_WORLD);
         ^~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1702:20: note: declared here
 OMPI_DECLSPEC  int MPI_Send(const void *buf, int count, MPI_Datatype datatype, int dest,
                    ^~~~~~~~
main.c: In function ‘main’:
main.c:555:92: error: subscripted value is neither array nor pointer nor vector
         printf("Processo %d: Esempio dati local_occurrences[0]: %s\n", rank, localHashtable[0].word); // Sostituisci con il campo effettivo
                                                                                            ^
main.c: In function ‘main’:
main.c:556:90: error: ‘*localHashtable.table’ is a pointer; did you mean to use ‘->’?
 printf("Processo %d: Esempio dati localHashtable[0]: %s\n", rank, localHashtable.table[0].word); // Sostituisci con il campo effettivo
                                                                                          ^
                                                                                          ->
main.c: In function ‘updateWordCount’:
main.c:129:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = local_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~~~
main.c:147:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = local_occurrences[hashIndex];
                   ^
main.c:150:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:522:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:522:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:536:46: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
     updateWordCount(tempOccurrences[i].word, rank);
                                              ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:536:5: error: too few arguments to function ‘updateWordCount’
     updateWordCount(tempOccurrences[i].word, rank);
     ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:129:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = local_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~~~
main.c:147:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = local_occurrences[hashIndex];
                   ^
main.c:150:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:522:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:522:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:536:46: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
     updateWordCount(tempOccurrences[i].word, rank);
                                              ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:536:5: error: too few arguments to function ‘updateWordCount’
     updateWordCount(tempOccurrences[i].word, rank);
     ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:129:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = local_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~~~
main.c:147:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = local_occurrences[hashIndex];
                   ^
main.c:150:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:522:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:522:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:536:46: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
     updateWordCount(tempOccurrences[i].word, rank);
                                              ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:536:5: error: too few arguments to function ‘updateWordCount’
     updateWordCount(tempOccurrences[i].word, rank);
     ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:129:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = local_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~~~
main.c:147:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = local_occurrences[hashIndex];
                   ^
main.c:150:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:522:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:522:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:536:46: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
     updateWordCount(tempOccurrences[i].word, rank);
                                              ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:536:5: error: too few arguments to function ‘updateWordCount’
     updateWordCount(tempOccurrences[i].word, rank);
     ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:129:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = local_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~~~
main.c:147:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = local_occurrences[hashIndex];
                   ^
main.c:150:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:522:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:522:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:536:46: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
     updateWordCount(tempOccurrences[i].word, rank);
                                              ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:536:5: error: too few arguments to function ‘updateWordCount’
     updateWordCount(tempOccurrences[i].word, rank);
     ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:129:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = local_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~~~
main.c:147:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = local_occurrences[hashIndex];
                   ^
main.c:150:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:519:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:519:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:533:54: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(tempOccurrences[i].word, rank);
                                                      ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:533:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(tempOccurrences[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:556:1: warning: implicit declaration of function ‘usleep’; did you mean ‘fseek’? [-Wimplicit-function-declaration]
 usleep(10000);  // 10 millisecondi
 ^~~~~~
 fseek
main.c: In function ‘updateWordCount’:
main.c:129:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = local_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~~~
main.c:147:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = local_occurrences[hashIndex];
                   ^
main.c:150:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:519:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:519:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:530:54: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(tempOccurrences[i].word, rank);
                                                      ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:530:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(tempOccurrences[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:553:1: warning: implicit declaration of function ‘usleep’; did you mean ‘fseek’? [-Wimplicit-function-declaration]
 usleep(10000);  // 10 millisecondi
 ^~~~~~
 fseek
main.c: In function ‘updateWordCount’:
main.c:129:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = local_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~~~
main.c:147:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = local_occurrences[hashIndex];
                   ^
main.c:150:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:519:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:519:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:530:54: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(tempOccurrences[i].word, rank);
                                                      ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:530:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(tempOccurrences[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:553:9: warning: implicit declaration of function ‘usleep’; did you mean ‘fseek’? [-Wimplicit-function-declaration]
         usleep(10000); // 10 millisecondi
         ^~~~~~
         fseek
main.c: In function ‘updateWordCount’:
main.c:129:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = local_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~~~
main.c:147:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = local_occurrences[hashIndex];
                   ^
main.c:150:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:519:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:519:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:530:54: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(tempOccurrences[i].word, rank);
                                                      ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:530:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(tempOccurrences[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:553:9: warning: implicit declaration of function ‘usleep’; did you mean ‘fseek’? [-Wimplicit-function-declaration]
         usleep(10000); // 10 millisecondi
         ^~~~~~
         fseek
main.c: In function ‘updateWordCount’:
main.c:129:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = local_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~~~
main.c:147:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = local_occurrences[hashIndex];
                   ^
main.c:150:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:519:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:519:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:530:54: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(tempOccurrences[i].word, rank);
                                                      ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:530:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(tempOccurrences[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:553:9: warning: implicit declaration of function ‘usleep’; did you mean ‘fseek’? [-Wimplicit-function-declaration]
         usleep(10000); // 10 millisecondi
         ^~~~~~
         fseek
main.c: In function ‘updateWordCount’:
main.c:129:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = local_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~~~
main.c:147:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = local_occurrences[hashIndex];
                   ^
main.c:150:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:519:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:519:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:530:54: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(tempOccurrences[i].word, rank);
                                                      ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:530:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(tempOccurrences[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:553:9: warning: implicit declaration of function ‘usleep’; did you mean ‘fseek’? [-Wimplicit-function-declaration]
         usleep(10000); // 10 millisecondi
         ^~~~~~
         fseek
main.c: In function ‘updateWordCount’:
main.c:129:31: error: incompatible types when initializing type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ using type ‘OccurrenceNode {aka struct OccurrenceNode}’
     OccurrenceNode *current = local_occurrences[hashIndex];
                               ^~~~~~~~~~~~~~~~~
main.c:147:19: error: incompatible types when assigning to type ‘struct OccurrenceNode *’ from type ‘OccurrenceNode {aka struct OccurrenceNode}’
     newNode->next = local_occurrences[hashIndex];
                   ^
main.c:150:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:519:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:519:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(token, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:530:54: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(tempOccurrences[i].word, rank);
                                                      ^~~~
main.c:110:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:530:13: error: too few arguments to function ‘updateWordCount’
             updateWordCount(tempOccurrences[i].word, rank);
             ^~~~~~~~~~~~~~~
main.c:110:6: note: declared here
 void updateWordCount(const char *word, OccurrenceNode *local_occurrences, unsigned int local_size, int rank)
      ^~~~~~~~~~~~~~~
main.c:553:9: warning: implicit declaration of function ‘usleep’; did you mean ‘fseek’? [-Wimplicit-function-declaration]
         usleep(10000); // 10 millisecondi
         ^~~~~~
         fseek
main.c: In function ‘updateWordCount’:
main.c:152:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘updateWordCount’:
main.c:151:33: error: invalid type argument of ‘->’ (have ‘OccurrenceNode {aka struct OccurrenceNode}’)
     local_occurrences[hashIndex]->next = newNode;
                                 ^~
main.c: In function ‘updateWordCount’:
main.c:151:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘updateWordCount’:
main.c:152:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘updateWordCount’:
main.c:151:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘updateWordCount’:
main.c:152:34: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
     local_occurrences[hashIndex] = newNode;
                                  ^
main.c: In function ‘main’:
main.c:524:36: warning: passing argument 2 of ‘updateWordCount’ makes integer from pointer without a cast [-Wint-conversion]
             updateWordCount(token, local_occurrences, localHashtable.size, rank);
                                    ^~~~~~~~~~~~~~~~~
main.c:114:6: note: expected ‘int’ but argument is of type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:524:13: error: too many arguments to function ‘updateWordCount’
             updateWordCount(token, local_occurrences, localHashtable.size, rank);
             ^~~~~~~~~~~~~~~
main.c:114:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:535:54: warning: passing argument 2 of ‘updateWordCount’ makes integer from pointer without a cast [-Wint-conversion]
             updateWordCount(tempOccurrences[i].word, local_occurrences, localHashtable.size, rank);
                                                      ^~~~~~~~~~~~~~~~~
main.c:114:6: note: expected ‘int’ but argument is of type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:535:13: error: too many arguments to function ‘updateWordCount’
             updateWordCount(tempOccurrences[i].word, local_occurrences, localHashtable.size, rank);
             ^~~~~~~~~~~~~~~
main.c:114:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘mergeOccurrences’:
main.c:236:9: error: too many arguments to function ‘updateWordCount’
         updateWordCount(occurrencesArray[i].word, occurrencesArray[i].count, MASTER_RANK);
         ^~~~~~~~~~~~~~~
main.c:113:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:386:17: error: redefinition of ‘allOccurrencesArray’
 OccurrenceNode *allOccurrencesArray = NULL;
                 ^~~~~~~~~~~~~~~~~~~
main.c:281:25: note: previous definition of ‘allOccurrencesArray’ was here
         OccurrenceNode *allOccurrencesArray = NULL;
                         ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:386:17: error: redefinition of ‘allOccurrencesArray’
 OccurrenceNode *allOccurrencesArray = NULL;
                 ^~~~~~~~~~~~~~~~~~~
main.c:281:25: note: previous definition of ‘allOccurrencesArray’ was here
         OccurrenceNode *allOccurrencesArray = NULL;
                         ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:386:17: error: redefinition of ‘allOccurrencesArray’
 OccurrenceNode *allOccurrencesArray = NULL;
                 ^~~~~~~~~~~~~~~~~~~
main.c:281:25: note: previous definition of ‘allOccurrencesArray’ was here
         OccurrenceNode *allOccurrencesArray = NULL;
                         ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateWordCountFromBuffer’:
main.c:248:46: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
         int hashIndex = hashFunction(word) % globalHashtable.size;
                                              ^~~~~~~~~~~~~~~
                                              localHashtable
main.c:248:46: note: each undeclared identifier is reported only once for each function it appears in
main.c:265:13: warning: implicit declaration of function ‘insertWord’; did you mean ‘strtold’? [-Wimplicit-function-declaration]
             insertWord(word, count, rank);
             ^~~~~~~~~~
             strtold
main.c: In function ‘updateWordCountFromBuffer’:
main.c:266:13: warning: implicit declaration of function ‘insertWord’; did you mean ‘strtold’? [-Wimplicit-function-declaration]
             insertWord(word, count, rank);
             ^~~~~~~~~~
             strtold
build/main.o: In function `updateWordCountFromBuffer':
/home/docker-mpi/src/main.c:266: undefined reference to `insertWord'
collect2: error: ld returned 1 exit status
main.c: In function ‘insertWord’:
main.c:251:19: error: assignment to expression with array type
     newNode->word = strdup(word);
                   ^
build/main.o: In function `updateWordCountFromBuffer':
/home/docker-mpi/src/main.c:266: undefined reference to `insertWord'
collect2: error: ld returned 1 exit status
main.c: In function ‘insertWord’:
main.c:252:19: error: assignment to expression with array type
     newNode->word = strdup(word);
                   ^
build/main.o: In function `updateWordCountFromBuffer':
/home/docker-mpi/src/main.c:266: undefined reference to `insertWord'
collect2: error: ld returned 1 exit status
main.c: In function ‘mergeOccurrences’:
main.c:236:9: error: too many arguments to function ‘updateWordCount’
         updateWordCount(occurrencesArray[i].word, occurrencesArray[i].count, MASTER_RANK);
         ^~~~~~~~~~~~~~~
main.c:113:6: note: declared here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:386:17: error: redefinition of ‘allOccurrencesArray’
 OccurrenceNode *allOccurrencesArray = NULL;
                 ^~~~~~~~~~~~~~~~~~~
main.c:281:25: note: previous definition of ‘allOccurrencesArray’ was here
         OccurrenceNode *allOccurrencesArray = NULL;
                         ^~~~~~~~~~~~~~~~~~~
build/main.o: In function `updateWordCountFromBuffer':
/home/docker-mpi/src/main.c:266: undefined reference to `insertWord'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:386:17: error: redefinition of ‘allOccurrencesArray’
 OccurrenceNode *allOccurrencesArray = NULL;
                 ^~~~~~~~~~~~~~~~~~~
main.c:281:25: note: previous definition of ‘allOccurrencesArray’ was here
         OccurrenceNode *allOccurrencesArray = NULL;
                         ^~~~~~~~~~~~~~~~~~~
build/main.o: In function `updateWordCountFromBuffer':
/home/docker-mpi/src/main.c:266: undefined reference to `insertWord'
collect2: error: ld returned 1 exit status
main.c: In function ‘updateWordCountGlobal’:
main.c:241:9: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     if (globalHashtable.size == 0)
         ^~~~~~~~~~~~~~~
         localHashtable
main.c:241:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateWordCountGlobal’:
main.c:241:9: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
     if (globalHashtable.size == 0)
         ^~~~~~~~~~~~~~~
         localHashtable
main.c:241:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:403:14: error: ‘buffer’ undeclared (first use in this function); did you mean ‘setbuffer’?
         free(buffer);
              ^~~~~~
              setbuffer
main.c:403:14: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateGlobalHashtable’:
main.c:232:62: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
         unsigned int hashIndex = hashFunction(cleanedWord) % globalHashtable.size;
                                                              ^~~~~~~~~~~~~~~
                                                              localHashtable
main.c:232:62: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:441:14: error: ‘all_data’ undeclared (first use in this function); did you mean ‘alloca’?
         free(all_data);
              ^~~~~~~~
              alloca
main.c: At top level:
main.c:444:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:493:5: warning: data definition has no type or storage class
     freeHashtable();
     ^~~~~~~~~~~~~
main.c:493:5: warning: type defaults to ‘int’ in declaration of ‘freeHashtable’ [-Wimplicit-int]
main.c:493:5: error: conflicting types for ‘freeHashtable’
main.c:54:6: note: previous definition of ‘freeHashtable’ was here
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:494:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:494:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:495:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:496:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘updateGlobalHashtable’:
main.c:235:62: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
         unsigned int hashIndex = hashFunction(cleanedWord) % globalHashtable.size;
                                                              ^~~~~~~~~~~~~~~
                                                              localHashtable
main.c:235:62: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:340:36: error: ‘total_non_null_entries’ undeclared (first use in this function); did you mean ‘total_occurrences’?
             globalHashtable.size = total_non_null_entries;
                                    ^~~~~~~~~~~~~~~~~~~~~~
                                    total_occurrences
main.c:340:36: note: each undeclared identifier is reported only once for each function it appears in
main.c:395:26: warning: passing argument 5 of ‘MPI_Gather’ makes integer from pointer without a cast [-Wint-conversion]
                    NULL, NULL, NULL, MPI_DATATYPE_NULL, MASTER_RANK, MPI_COMM_WORLD);
                          ^~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1465:20: note: expected ‘int’ but argument is of type ‘void *’
 OMPI_DECLSPEC  int MPI_Gather(const void *sendbuf, int sendcount, MPI_Datatype sendtype,
                    ^~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 7 of ‘MPI_Gather’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1057:27: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_DATATYPE_NULL OMPI_PREDEFINED_GLOBAL(MPI_Datatype, ompi_mpi_datatype_null)
                           ^~~~~~~~~~~~~~~~~~~~~~
main.c:395:38: note: in expansion of macro ‘MPI_DATATYPE_NULL’
                    NULL, NULL, NULL, MPI_DATATYPE_NULL, MASTER_RANK, MPI_COMM_WORLD);
                                      ^~~~~~~~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1465:20: note: expected ‘int’ but argument is of type ‘struct ompi_datatype_t *’
 OMPI_DECLSPEC  int MPI_Gather(const void *sendbuf, int sendcount, MPI_Datatype sendtype,
                    ^~~~~~~~~~
main.c:394:9: error: too many arguments to function ‘MPI_Gather’
         MPI_Gather(localHashtable.table, localHashtable.size, MPI_OCCURRENCE_NODE,
         ^~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1465:20: note: declared here
 OMPI_DECLSPEC  int MPI_Gather(const void *sendbuf, int sendcount, MPI_Datatype sendtype,
                    ^~~~~~~~~~
main.c: In function ‘main’:
main.c:393:26: warning: passing argument 5 of ‘MPI_Gather’ makes integer from pointer without a cast [-Wint-conversion]
                    NULL, NULL, NULL, MPI_DATATYPE_NULL, MASTER_RANK, MPI_COMM_WORLD);
                          ^~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1465:20: note: expected ‘int’ but argument is of type ‘void *’
 OMPI_DECLSPEC  int MPI_Gather(const void *sendbuf, int sendcount, MPI_Datatype sendtype,
                    ^~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:314:46: warning: passing argument 7 of ‘MPI_Gather’ makes integer from pointer without a cast [-Wint-conversion]
 #define OMPI_PREDEFINED_GLOBAL(type, global) ((type) ((void *) &(global)))
                                              ^
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1057:27: note: in expansion of macro ‘OMPI_PREDEFINED_GLOBAL’
 #define MPI_DATATYPE_NULL OMPI_PREDEFINED_GLOBAL(MPI_Datatype, ompi_mpi_datatype_null)
                           ^~~~~~~~~~~~~~~~~~~~~~
main.c:393:38: note: in expansion of macro ‘MPI_DATATYPE_NULL’
                    NULL, NULL, NULL, MPI_DATATYPE_NULL, MASTER_RANK, MPI_COMM_WORLD);
                                      ^~~~~~~~~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1465:20: note: expected ‘int’ but argument is of type ‘struct ompi_datatype_t *’
 OMPI_DECLSPEC  int MPI_Gather(const void *sendbuf, int sendcount, MPI_Datatype sendtype,
                    ^~~~~~~~~~
main.c:392:9: error: too many arguments to function ‘MPI_Gather’
         MPI_Gather(localHashtable.table, localHashtable.size, MPI_OCCURRENCE_NODE,
         ^~~~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1465:20: note: declared here
 OMPI_DECLSPEC  int MPI_Gather(const void *sendbuf, int sendcount, MPI_Datatype sendtype,
                    ^~~~~~~~~~
main.c: In function ‘main’:
main.c:314:5: error: ‘recv_counts’ undeclared (first use in this function); did you mean ‘file_count’?
     recv_counts = (int *)malloc(num_processes * sizeof(int));
     ^~~~~~~~~~~
     file_count
main.c:314:5: note: each undeclared identifier is reported only once for each function it appears in
main.c:315:5: error: ‘displacements’ undeclared (first use in this function)
     displacements = (int *)malloc(num_processes * sizeof(int));
     ^~~~~~~~~~~~~
main.c:362:14: error: ‘all_data’ undeclared (first use in this function); did you mean ‘alloca’?
         free(all_data);
              ^~~~~~~~
              alloca
main.c: At top level:
main.c:364:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:395:19: error: expected declaration specifiers or ‘...’ before ‘&’ token
     MPI_Type_free(&MPI_OCCURRENCE_NODE);
                   ^
main.c:396:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:396:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:397:5: warning: data definition has no type or storage class
     free(requests);
     ^~~~
main.c:397:5: warning: type defaults to ‘int’ in declaration of ‘free’ [-Wimplicit-int]
main.c:397:5: warning: parameter names (without types) in function declaration
main.c:397:5: error: conflicting types for ‘free’
In file included from main.c:2:0:
/usr/include/stdlib.h:563:13: note: previous declaration of ‘free’ was here
 extern void free (void *__ptr) __THROW;
             ^~~~
main.c:398:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:399:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:314:5: error: ‘recv_counts’ undeclared (first use in this function); did you mean ‘file_count’?
     recv_counts = (int *)malloc(num_processes * sizeof(int));
     ^~~~~~~~~~~
     file_count
main.c:314:5: note: each undeclared identifier is reported only once for each function it appears in
main.c:315:5: error: ‘displacements’ undeclared (first use in this function)
     displacements = (int *)malloc(num_processes * sizeof(int));
     ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:182:22: warning: implicit declaration of function ‘get_total_file_size’ [-Wimplicit-function-declaration]
         total_size = get_total_file_size(dir, INPUT_DIR);
                      ^~~~~~~~~~~~~~~~~~~
main.c:197:23: error: ‘all_data’ undeclared (first use in this function); did you mean ‘alloca’?
             MPI_Isend(all_data + start_byte, byte_count, MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                       ^~~~~~~~
                       alloca
main.c:197:23: note: each undeclared identifier is reported only once for each function it appears in
main.c:197:34: error: ‘start_byte’ undeclared (first use in this function)
             MPI_Isend(all_data + start_byte, byte_count, MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                  ^~~~~~~~~~
main.c:197:46: error: ‘byte_count’ undeclared (first use in this function); did you mean ‘MPI_Count’?
             MPI_Isend(all_data + start_byte, byte_count, MPI_CHAR, i, 0, MPI_COMM_WORLD, &requests[i - 1]);
                                              ^~~~~~~~~~
                                              MPI_Count
main.c:202:31: warning: passing argument 1 of ‘updateGlobalHashtable’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHashtable(localHashtable.table, localHashtable.size);
                               ^~~~~~~~~~~~~~
main.c:117:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void updateGlobalHashtable(OccurrenceNode *local_occurrences, int local_occurrences_count)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:222:18: error: ‘local_data’ undeclared (first use in this function); did you mean ‘__locale_data’?
         MPI_Recv(local_data, byte_count, MPI_CHAR, MASTER_RANK, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                  ^~~~~~~~~~
                  __locale_data
main.c:235:64: error: ‘MPI_OCCURRENCE_NODE’ undeclared (first use in this function); did you mean ‘OMPI_COMM_TYPE_NODE’?
         MPI_Gatherv(localHashtable.table, localHashtable.size, MPI_OCCURRENCE_NODE,
                                                                ^~~~~~~~~~~~~~~~~~~
                                                                OMPI_COMM_TYPE_NODE
main.c: In function ‘main’:
main.c:310:23: warning: passing argument 1 of ‘updateGlobalHashtable’ from incompatible pointer type [-Wincompatible-pointer-types]
 updateGlobalHashtable(localHashtable.table, localHashtable.size);
                       ^~~~~~~~~~~~~~
main.c:115:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void updateGlobalHashtable(OccurrenceNode *local_occurrences, int local_occurrences_count)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:339:46: error: ‘HASHTABLE_SIZE’ undeclared (first use in this function); did you mean ‘S_BLKSIZE’?
         initializeHashtable(&localHashtable, HASHTABLE_SIZE);
                                              ^~~~~~~~~~~~~~
                                              S_BLKSIZE
main.c:339:46: note: each undeclared identifier is reported only once for each function it appears in
main.c:485:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:580:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:580:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:581:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:582:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c:484:1: error: expected identifier or ‘(’ before ‘else’
 else
 ^~~~
main.c: In function ‘main’:
main.c:477:5: error: expected ‘}’ before ‘else’
     else
     ^~~~
main.c: At top level:
main.c:483:1: error: expected identifier or ‘(’ before ‘else’
 else
 ^~~~
main.c: In function ‘main’:
main.c:477:9: error: expected ‘}’ before ‘else’
         else
         ^~~~
main.c: At top level:
main.c:483:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:578:9: warning: data definition has no type or storage class
         MPI_Finalize();
         ^~~~~~~~~~~~
main.c:578:9: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:579:9: error: expected identifier or ‘(’ before ‘return’
         return 0;
         ^~~~~~
main.c:581:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:477:9: error: expected ‘}’ before ‘else’
         else
         ^~~~
main.c: At top level:
main.c:483:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:581:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:477:9: error: expected ‘}’ before ‘else’
         else
         ^~~~
main.c: At top level:
main.c:483:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:581:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:572:22: warning: passing argument 1 of ‘gatherHashtables’ makes integer from pointer without a cast [-Wint-conversion]
     gatherHashtables(local_occurrences, parolecontate, MASTER_RANK, MPI_COMM_WORLD);
                      ^~~~~~~~~~~~~~~~~
main.c:239:6: note: expected ‘int’ but argument is of type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
 void gatherHashtables(int rank, int num_processes)
      ^~~~~~~~~~~~~~~~
main.c:572:5: error: too many arguments to function ‘gatherHashtables’
     gatherHashtables(local_occurrences, parolecontate, MASTER_RANK, MPI_COMM_WORLD);
     ^~~~~~~~~~~~~~~~
main.c:239:6: note: declared here
 void gatherHashtables(int rank, int num_processes)
      ^~~~~~~~~~~~~~~~
main.c: In function ‘gatherHashtables’:
main.c:248:32: error: ‘num_processes’ undeclared (first use in this function)
         counts = (int *)malloc(num_processes * sizeof(int));
                                ^~~~~~~~~~~~~
main.c:248:32: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:496:26: warning: passing argument 1 of ‘gatherHashtables’ makes pointer from integer without a cast [-Wint-conversion]
         gatherHashtables(rank, num_processes);
                          ^~~~
main.c:239:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘int’
 void gatherHashtables(OccurrenceNode *local_occurrences, int parolecontate, int rank, MPI_Comm communicator)
      ^~~~~~~~~~~~~~~~
main.c:496:9: error: too few arguments to function ‘gatherHashtables’
         gatherHashtables(rank, num_processes);
         ^~~~~~~~~~~~~~~~
main.c:239:6: note: declared here
 void gatherHashtables(OccurrenceNode *local_occurrences, int parolecontate, int rank, MPI_Comm communicator)
      ^~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:391:21: error: ‘masterHashtable’ undeclared (first use in this function); did you mean ‘freeHashtable’?
                     masterHashtable.table, recv_counts, displacements, MPI_OCCURRENCE_NODE,
                     ^~~~~~~~~~~~~~~
                     freeHashtable
main.c:391:21: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:424:28: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘OccurrenceNode * {aka struct OccurrenceNode *}’
         *local_occurrences = (OccurrenceNode *)malloc(total_size * sizeof(OccurrenceNode));
                            ^
main.c: In function ‘main’:
main.c:510:1: error: expected declaration or statement at end of input
 }
 ^
main.c: In function ‘main’:
main.c:410:30: error: ‘local_occurrences’ is a pointer; did you mean to use ‘->’?
 MPI_Gatherv(local_occurrences.table, local_occurrences.size, MPI_OCCURRENCE_NODE,
                              ^
                              ->
main.c:410:55: error: ‘local_occurrences’ is a pointer; did you mean to use ‘->’?
 MPI_Gatherv(local_occurrences.table, local_occurrences.size, MPI_OCCURRENCE_NODE,
                                                       ^
                                                       ->
main.c:411:13: error: ‘master_occurrences’ undeclared (first use in this function); did you mean ‘all_occurrences’?
             master_occurrences.table, recv_counts, displacements, MPI_OCCURRENCE_NODE,
             ^~~~~~~~~~~~~~~~~~
             all_occurrences
main.c:411:13: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:409:32: error: ‘parolecontate’ undeclared (first use in this function)
 MPI_Gatherv(local_occurrences, parolecontate, MPI_OCCURRENCE_NODE,
                                ^~~~~~~~~~~~~
main.c:409:32: note: each undeclared identifier is reported only once for each function it appears in
main.c:410:13: error: ‘master_occurrences’ undeclared (first use in this function); did you mean ‘all_occurrences’?
             master_occurrences.table, recv_counts, displacements, MPI_OCCURRENCE_NODE,
             ^~~~~~~~~~~~~~~~~~
             all_occurrences
main.c: In function ‘updateWordCount’:
main.c:159:26: error: ‘newNode’ undeclared (first use in this function)
                     free(newNode);
                          ^~~~~~~
main.c:159:26: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateWordCount’:
main.c:187:35: error: ‘MAX_OCCURRENCES’ undeclared (first use in this function); did you mean ‘MPI_OCCURRENCE_NODE’?
     if (local_total_occurrences < MAX_OCCURRENCES)
                                   ^~~~~~~~~~~~~~~
                                   MPI_OCCURRENCE_NODE
main.c:187:35: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateWordCount’:
main.c:187:35: error: ‘MAX_OCCURRENCES’ undeclared (first use in this function); did you mean ‘MPI_OCCURRENCE_NODE’?
     if (local_total_occurrences < MAX_OCCURRENCES)
                                   ^~~~~~~~~~~~~~~
                                   MPI_OCCURRENCE_NODE
main.c:187:35: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:459:29: warning: passing argument 1 of ‘updateWordCount’ from incompatible pointer type [-Wincompatible-pointer-types]
             updateWordCount(token, rank);
                             ^~~~~
main.c:124:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘char *’
 void updateWordCount(OccurrenceNode *local_occurrences, char *word) {
      ^~~~~~~~~~~~~~~
main.c:459:36: warning: passing argument 2 of ‘updateWordCount’ makes pointer from integer without a cast [-Wint-conversion]
             updateWordCount(token, rank);
                                    ^~~~
main.c:124:6: note: expected ‘char *’ but argument is of type ‘int’
 void updateWordCount(OccurrenceNode *local_occurrences, char *word) {
      ^~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:453:62: error: ‘global_size’ undeclared (first use in this function); did you mean ‘total_size’?
         master_occurrences.table = (OccurrenceNode **)malloc(global_size * sizeof(OccurrenceNode *));
                                                              ^~~~~~~~~~~
                                                              total_size
main.c:453:62: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:476:34: error: ‘global_size’ undeclared (first use in this function); did you mean ‘total_size’?
     for (unsigned int i = 0; i < global_size; ++i)
                                  ^~~~~~~~~~~
                                  total_size
main.c:476:34: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:432:5: error: ‘recv_counts’ undeclared (first use in this function); did you mean ‘file_count’?
     recv_counts = (int *)malloc(num_processes * sizeof(int));
     ^~~~~~~~~~~
     file_count
main.c:432:5: note: each undeclared identifier is reported only once for each function it appears in
main.c:433:5: error: ‘displacements’ undeclared (first use in this function)
     displacements = (int *)malloc(num_processes * sizeof(int));
     ^~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:448:17: error: ‘master_occurrences’ undeclared (first use in this function); did you mean ‘total_occurrences’?
                 master_occurrences.table, recv_counts, displacements, MPI_OCCURRENCE_NODE,
                 ^~~~~~~~~~~~~~~~~~
                 total_occurrences
main.c:448:17: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:432:31: warning: initialization makes integer from pointer without a cast [-Wint-conversion]
 int local_total_occurrences = (int *)malloc(num_processes * sizeof(int));
                               ^
main.c:435:38: error: subscripted value is neither array nor pointer nor vector
     MPI_Recv(&local_total_occurrences[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                      ^
main.c: In function ‘main’:
main.c:435:38: error: subscripted value is neither array nor pointer nor vector
     MPI_Recv(&local_total_occurrences[i], 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                      ^
main.c: In function ‘main’:
main.c:436:59: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘OccurrenceNode {aka struct OccurrenceNode}’ [-Wformat=]
     printf("NEL MASTER , VALEEE local_total_occurrences: %d\n", local_occurrences[i]);
                                                          ~^     ~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:436:59: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘OccurrenceNode * {aka struct OccurrenceNode *}’ [-Wformat=]
     printf("NEL MASTER , VALEEE local_total_occurrences: %d\n", local_occurrences);
                                                          ~^
main.c: In function ‘main’:
main.c:446:5: error: ‘recv_counts’ undeclared (first use in this function); did you mean ‘file_count’?
     recv_counts[i] = recv_local_total_occurrences[i]; // Ogni processo invia un numero diverso di OccurrenceNode
     ^~~~~~~~~~~
     file_count
main.c:446:5: note: each undeclared identifier is reported only once for each function it appears in
main.c:447:5: error: ‘displacements’ undeclared (first use in this function)
     displacements[i] = i * recv_local_total_occurrences[i];
     ^~~~~~~~~~~~~
main.c:455:17: error: ‘master_occurrences’ undeclared (first use in this function); did you mean ‘total_occurrences’?
                 master_occurrences.table, recv_counts, displacements, MPI_OCCURRENCE_NODE,
                 ^~~~~~~~~~~~~~~~~~
                 total_occurrences
main.c: In function ‘main’:
main.c:455:13: error: ‘master_occurrences’ undeclared (first use in this function); did you mean ‘total_occurrences’?
             master_occurrences.table, recv_counts, displacements, MPI_OCCURRENCE_NODE,
             ^~~~~~~~~~~~~~~~~~
             total_occurrences
main.c:455:13: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:447:45: error: subscripted value is neither array nor pointer nor vector
     recv_counts[i] = local_total_occurrences[i];
                                             ^
main.c:448:51: error: subscripted value is neither array nor pointer nor vector
     displacements[i] = i * local_total_occurrences[i];
                                                   ^
main.c:456:13: error: ‘master_occurrences’ undeclared (first use in this function); did you mean ‘masmaster_occurrences’?
             master_occurrences.table, recv_counts, displacements, MPI_OCCURRENCE_NODE,
             ^~~~~~~~~~~~~~~~~~
             masmaster_occurrences
main.c:456:13: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:447:45: error: subscripted value is neither array nor pointer nor vector
     recv_counts[i] = local_total_occurrences[i];
                                             ^
main.c:448:51: error: subscripted value is neither array nor pointer nor vector
     displacements[i] = i * local_total_occurrences[i];
                                                   ^
main.c: In function ‘main’:
main.c:436:5: warning: implicit declaration of function ‘print’; did you mean ‘printf’? [-Wimplicit-function-declaration]
     print("prova");
     ^~~~~
     printf
build/main.o: In function `main':
/home/docker-mpi/src/main.c:436: undefined reference to `print'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:450:13: warning: implicit declaration of function ‘updateMasterHashtable’; did you mean ‘freeHashtable’? [-Wimplicit-function-declaration]
             updateMasterHashtable(&slaveHashtable[j]);
             ^~~~~~~~~~~~~~~~~~~~~
             freeHashtable
build/main.o: In function `main':
/home/docker-mpi/src/main.c:450: undefined reference to `updateMasterHashtable'
collect2: error: ld returned 1 exit status
main.c: In function ‘updateMasterHashtable’:
main.c:314:75: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
         printf("Processo %d: Errore - Allocazione di memoria fallita.\n", rank);
                                                                           ^~~~
                                                                           rand
main.c:314:75: note: each undeclared identifier is reported only once for each function it appears in
build/main.o: In function `main':
/home/docker-mpi/src/main.c:450: undefined reference to `updateMasterHashtable'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:539:121: error: ‘i’ undeclared (first use in this function)
                             printf("CONTENUTO PRIMA DI INVIO Processo %d: Word %s, Count %d\n", rank, local_occurrences[i].word, local_occurrences[i].count);
                                                                                                                         ^
main.c:539:121: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:493:25: error: redefinition of ‘allOccurrencesArray’
         OccurrenceNode *allOccurrencesArray = (OccurrenceNode *)malloc(masterHashtableSize * sizeof(OccurrenceNode));
                         ^~~~~~~~~~~~~~~~~~~
main.c:369:25: note: previous definition of ‘allOccurrencesArray’ was here
         OccurrenceNode *allOccurrencesArray = NULL;
                         ^~~~~~~~~~~~~~~~~~~
main.c:512:25: error: redefinition of ‘finalHistogram’
         OccurrenceNode *finalHistogram = (OccurrenceNode *)malloc(N * sizeof(OccurrenceNode));
                         ^~~~~~~~~~~~~~
main.c:370:25: note: previous definition of ‘finalHistogram’ was here
         OccurrenceNode *finalHistogram = NULL;
                         ^~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:512:25: error: redefinition of ‘finalHistogram’
         OccurrenceNode *finalHistogram = (OccurrenceNode *)malloc(N * sizeof(OccurrenceNode));
                         ^~~~~~~~~~~~~~
main.c:370:25: note: previous definition of ‘finalHistogram’ was here
         OccurrenceNode *finalHistogram = NULL;
                         ^~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:518:9: error: ‘allOccurrencesArray’ undeclared (first use in this function); did you mean ‘all_occurrences’?
         allOccurrencesArray = (OccurrenceNode *)malloc(masterHashtableSize * sizeof(OccurrenceNode));
         ^~~~~~~~~~~~~~~~~~~
         all_occurrences
main.c:518:9: note: each undeclared identifier is reported only once for each function it appears in
main.c:537:9: error: ‘finalHistogram’ undeclared (first use in this function)
         finalHistogram = (OccurrenceNode *)malloc(N * sizeof(OccurrenceNode));
         ^~~~~~~~~~~~~~
main.c: At top level:
main.c:547:5: error: expected identifier or ‘(’ before ‘else’
     else
     ^~~~
main.c:631:5: warning: data definition has no type or storage class
     MPI_Finalize();
     ^~~~~~~~~~~~
main.c:631:5: warning: type defaults to ‘int’ in declaration of ‘MPI_Finalize’ [-Wimplicit-int]
main.c:632:5: error: expected identifier or ‘(’ before ‘return’
     return 0;
     ^~~~~~
main.c:633:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
main.c: In function ‘main’:
main.c:498:1: error: too many arguments to function ‘MPI_Recv’
 MPI_Recv(recvBuffer, received_size, MPI_OCCURRENCE_NODE, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE, &mpi_error);
 ^~~~~~~~
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1641:20: note: declared here
 OMPI_DECLSPEC  int MPI_Recv(void *buf, int count, MPI_Datatype datatype, int source,
                    ^~~~~~~~
main.c: In function ‘main’:
main.c:498:80: warning: passing argument 7 of ‘MPI_Recv’ from incompatible pointer type [-Wincompatible-pointer-types]
 MPI_Recv(recvBuffer, received_size, MPI_OCCURRENCE_NODE, 0, 0, MPI_COMM_WORLD, &mpi_error);
                                                                                ^
In file included from main.c:6:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:1641:20: note: expected ‘MPI_Status * {aka struct ompi_status_public_t *}’ but argument is of type ‘int *’
 OMPI_DECLSPEC  int MPI_Recv(void *buf, int count, MPI_Datatype datatype, int source,
                    ^~~~~~~~
main.c: In function ‘main’:
main.c:499:11: error: ‘received_occurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
 MPI_Recv(&received_occurrences, 1, MPI_INT, i, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
           ^~~~~~~~~~~~~~~~~~~~
           local_occurrences
main.c:499:11: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:481:5: error: unknown type name ‘GHashTable’; did you mean ‘Hashtable’?
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
     ^~~~~~~~~~
     Hashtable
main.c:481:24: warning: implicit declaration of function ‘g_hash_table_new’ [-Wimplicit-function-declaration]
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                        ^~~~~~~~~~~~~~~~
main.c:481:41: error: ‘g_str_hash’ undeclared (first use in this function)
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                                         ^~~~~~~~~~
main.c:481:41: note: each undeclared identifier is reported only once for each function it appears in
main.c:481:53: error: ‘g_str_equal’ undeclared (first use in this function); did you mean ‘g_str_hash’?
     GHashTable *hash = g_hash_table_new(g_str_hash, g_str_equal);
                                                     ^~~~~~~~~~~
                                                     g_str_hash
main.c:483:25: error: ‘size’ undeclared (first use in this function); did you mean ‘size_t’?
     for (int i = 1; i < size; ++i) {
                         ^~~~
                         size_t
main.c:497:9: error: too many arguments to function ‘updateMasterHashtable’
         updateMasterHashtable(recvBuffer, received_occurrences, hash);
         ^~~~~~~~~~~~~~~~~~~~~
main.c:281:6: note: declared here
 void updateMasterHashtable(OccurrenceNode *localNode, int rank)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:331:25: error: ‘num_processes’ undeclared (first use in this function)
     for (int i = 1; i < num_processes; ++i)
                         ^~~~~~~~~~~~~
main.c:331:25: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateGlobalHistogram’:
main.c:299:9: warning: implicit declaration of function ‘initMasterHashtable’; did you mean ‘initializeHashtable’? [-Wimplicit-function-declaration]
         initMasterHashtable(&masterHashtable, globalHashtableSize);
         ^~~~~~~~~~~~~~~~~~~
         initializeHashtable
build/main.o: In function `updateGlobalHistogram':
/home/docker-mpi/src/main.c:299: undefined reference to `initMasterHashtable'
collect2: error: ld returned 1 exit status
main.c: In function ‘updateGlobalHistogram’:
main.c:332:29: warning: passing argument 1 of ‘initMasterHashtable’ from incompatible pointer type [-Wincompatible-pointer-types]
         initMasterHashtable(&masterHashtable, globalHashtableSize);
                             ^
main.c:295:6: note: expected ‘MasterHashtable * {aka struct MasterHashtable *}’ but argument is of type ‘Hashtable * {aka struct <anonymous> *}’
 void initMasterHashtable(MasterHashtable *masterHashtable, int size) {
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:346:35: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
         OccurrenceNode *current = masterHashtable.table[hashIndex];
                                   ^~~~~~~~~~~~~~~
main.c:376:23: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         newNode->next = masterHashtable.table[hashIndex];
                       ^
main.c:377:42: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
         masterHashtable.table[hashIndex] = newNode;
                                          ^
main.c: In function ‘updateGlobalHistogram’:
main.c:299:9: warning: implicit declaration of function ‘initMasterHashtable’; did you mean ‘initializeHashtable’? [-Wimplicit-function-declaration]
         initMasterHashtable(&masterHashtable, globalHashtableSize);
         ^~~~~~~~~~~~~~~~~~~
         initializeHashtable
build/main.o: In function `updateGlobalHistogram':
/home/docker-mpi/src/main.c:299: undefined reference to `initMasterHashtable'
collect2: error: ld returned 1 exit status
main.c: In function ‘receiveAndMergeHistograms’:
main.c:395:13: error: too few arguments to function ‘updateGlobalHistogram’
             updateGlobalHistogram(receivedBuffer, receivedCount,num_processes,localHashtable.size);
             ^~~~~~~~~~~~~~~~~~~~~
main.c:304:6: note: declared here
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int num_processes, int localHashtableSize, int my_rank)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:316:30: error: ‘masterHashtable’ undeclared (first use in this function); did you mean ‘initMasterHashtable’?
         initMasterHashtable(&masterHashtable, globalHashtableSize);
                              ^~~~~~~~~~~~~~~
                              initMasterHashtable
main.c:316:30: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:403:13: error: too few arguments to function ‘updateGlobalHistogram’
             updateGlobalHistogram(receivedBuffer, receivedCount,num_processes,localHashtable.size,rank);
             ^~~~~~~~~~~~~~~~~~~~~
main.c:308:6: note: declared here
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int num_processes, int localHashtableSize, int my_rank, Hashtable masterHashtable)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:561:9: error: too few arguments to function ‘receiveAndMergeHistograms’
         receiveAndMergeHistograms(num_processes,rank);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:379:6: note: declared here
 void receiveAndMergeHistograms(int num_processes,int rank, Hashtable masterHashtable) {
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:310:6: error: redefinition of ‘initMasterHashtable’
 void initMasterHashtable(Hashtable *masterHashtable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:282:6: note: previous definition of ‘initMasterHashtable’ was here
 void initMasterHashtable(Hashtable *masterHashtable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘initializeMasterHashtable’:
main.c:339:9: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
     if (rank == MASTER_RANK)
         ^~~~
         rand
main.c:339:9: note: each undeclared identifier is reported only once for each function it appears in
main.c:342:9: error: ‘masterHashtable’ undeclared (first use in this function); did you mean ‘initMasterHashtable’?
         masterHashtable.table = (OccurrenceNode **)malloc(size * sizeof(OccurrenceNode *));
         ^~~~~~~~~~~~~~~
         initMasterHashtable
main.c: In function ‘updateGlobalHashtable’:
main.c:402:77: error: ‘masterHashtable’ is a pointer; did you mean to use ‘->’?
         unsigned int hashIndex = hashFunction(cleanedWord) % masterHashtable.size;
                                                                             ^
                                                                             ->
main.c:406:50: error: ‘masterHashtable’ is a pointer; did you mean to use ‘->’?
         OccurrenceNode *current = masterHashtable.table[hashIndex];
                                                  ^
                                                  ->
main.c:436:40: error: ‘masterHashtable’ is a pointer; did you mean to use ‘->’?
         newNode->next = masterHashtable.table[hashIndex];
                                        ^
                                        ->
main.c:437:24: error: ‘masterHashtable’ is a pointer; did you mean to use ‘->’?
         masterHashtable.table[hashIndex] = newNode;
                        ^
                        ->
main.c: In function ‘receiveAndMergeHistograms’:
main.c:468:104: error: incompatible type for argument 6 of ‘updateGlobalHashtable’
             updateGlobalHashtable(receivedBuffer, receivedCount,num_processes,localHashtable.size,rank,masterHashtable);
                                                                                                        ^~~~~~~~~~~~~~~
main.c:374:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void updateGlobalHashtable(OccurrenceNode *localHistogram, int localHistogramSize, int num_processes, int localHashtableSize, int my_rank, Hashtable *masterHashtable)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:310:6: error: redefinition of ‘initMasterHashtable’
 void initMasterHashtable(Hashtable *masterHashtable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:282:6: note: previous definition of ‘initMasterHashtable’ was here
 void initMasterHashtable(Hashtable *masterHashtable, unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘initializeMasterHashtable’:
main.c:339:9: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
     if (rank == MASTER_RANK)
         ^~~~
         rand
main.c:339:9: note: each undeclared identifier is reported only once for each function it appears in
main.c:342:9: error: ‘masterHashtable’ undeclared (first use in this function); did you mean ‘initMasterHashtable’?
         masterHashtable.table = (OccurrenceNode **)malloc(size * sizeof(OccurrenceNode *));
         ^~~~~~~~~~~~~~~
         initMasterHashtable
main.c: In function ‘updateGlobalHashtable’:
main.c:402:77: error: ‘masterHashtable’ is a pointer; did you mean to use ‘->’?
         unsigned int hashIndex = hashFunction(cleanedWord) % masterHashtable.size;
                                                                             ^
                                                                             ->
main.c:406:50: error: ‘masterHashtable’ is a pointer; did you mean to use ‘->’?
         OccurrenceNode *current = masterHashtable.table[hashIndex];
                                                  ^
                                                  ->
main.c:436:40: error: ‘masterHashtable’ is a pointer; did you mean to use ‘->’?
         newNode->next = masterHashtable.table[hashIndex];
                                        ^
                                        ->
main.c:437:24: error: ‘masterHashtable’ is a pointer; did you mean to use ‘->’?
         masterHashtable.table[hashIndex] = newNode;
                        ^
                        ->
main.c: In function ‘receiveAndMergeHistograms’:
main.c:468:104: error: incompatible type for argument 6 of ‘updateGlobalHashtable’
             updateGlobalHashtable(receivedBuffer, receivedCount,num_processes,localHashtable.size,rank,masterHashtable);
                                                                                                        ^~~~~~~~~~~~~~~
main.c:374:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void updateGlobalHashtable(OccurrenceNode *localHistogram, int localHistogramSize, int num_processes, int localHashtableSize, int my_rank, Hashtable *masterHashtable)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘initializeMasterHashtable’:
main.c:313:9: error: ‘rank’ undeclared (first use in this function); did you mean ‘rand’?
     if (rank == MASTER_RANK)
         ^~~~
         rand
main.c:313:9: note: each undeclared identifier is reported only once for each function it appears in
main.c:316:9: error: ‘masterHashtable’ undeclared (first use in this function); did you mean ‘initMasterHashtable’?
         masterHashtable.table = (OccurrenceNode **)malloc(size * sizeof(OccurrenceNode *));
         ^~~~~~~~~~~~~~~
         initMasterHashtable
main.c: In function ‘updateGlobalHashtable’:
main.c:376:77: error: ‘masterHashtable’ is a pointer; did you mean to use ‘->’?
         unsigned int hashIndex = hashFunction(cleanedWord) % masterHashtable.size;
                                                                             ^
                                                                             ->
main.c:380:50: error: ‘masterHashtable’ is a pointer; did you mean to use ‘->’?
         OccurrenceNode *current = masterHashtable.table[hashIndex];
                                                  ^
                                                  ->
main.c:410:40: error: ‘masterHashtable’ is a pointer; did you mean to use ‘->’?
         newNode->next = masterHashtable.table[hashIndex];
                                        ^
                                        ->
main.c:411:24: error: ‘masterHashtable’ is a pointer; did you mean to use ‘->’?
         masterHashtable.table[hashIndex] = newNode;
                        ^
                        ->
main.c: In function ‘receiveAndMergeHistograms’:
main.c:442:104: error: incompatible type for argument 6 of ‘updateGlobalHashtable’
             updateGlobalHashtable(receivedBuffer, receivedCount,num_processes,localHashtable.size,rank,masterHashtable);
                                                                                                        ^~~~~~~~~~~~~~~
main.c:348:6: note: expected ‘Hashtable * {aka struct <anonymous> *}’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 void updateGlobalHashtable(OccurrenceNode *localHistogram, int localHistogramSize, int num_processes, int localHashtableSize, int my_rank, Hashtable *masterHashtable)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:1:4: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘do’
 ti do l'intero codice per darti una chiara idea:
    ^~
main.c:1:8: warning: missing terminating ' character
 ti do l'intero codice per darti una chiara idea:
        ^
main.c:1:8: error: missing terminating ' character
 ti do l'intero codice per darti una chiara idea:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/stdio.h:41:0,
                 from main.c:2:
/usr/include/x86_64-linux-gnu/bits/libio.h:306:3: error: unknown type name ‘size_t’
   size_t __pad5;
   ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:309:67: error: ‘size_t’ undeclared here (not in a function); did you mean ‘__size_t’?
   char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];
                                                                   ^~~~~~
                                                                   __size_t
/usr/include/x86_64-linux-gnu/bits/libio.h:337:62: error: expected declaration specifiers or ‘...’ before ‘size_t’
 typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);
                                                              ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:346:6: error: expected declaration specifiers or ‘...’ before ‘size_t’
      size_t __n);
      ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:467:19: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘_IO_sgetn’
 extern _IO_size_t _IO_sgetn (_IO_FILE *, void *, _IO_size_t);
                   ^~~~~~~~~
In file included from main.c:2:0:
/usr/include/stdio.h:278:35: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
                                   ^~~~~~
/usr/include/stdio.h:284:47: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __THROW __wur;
                                               ^~~~~~
/usr/include/stdio.h:295:20: error: expected declaration specifiers or ‘...’ before ‘size_t’
       int __modes, size_t __n) __THROW;
                    ^~~~~~
/usr/include/stdio.h:301:10: error: expected declaration specifiers or ‘...’ before ‘size_t’
          size_t __size) __THROW;
          ^~~~~~
/usr/include/stdio.h:340:44: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int snprintf (char *__restrict __s, size_t __maxlen,
                                            ^~~~~~
/usr/include/stdio.h:344:45: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int vsnprintf (char *__restrict __s, size_t __maxlen,
                                             ^~~~~~
/usr/include/stdio.h:604:11: error: expected declaration specifiers or ‘...’ before ‘size_t’
           size_t *__restrict __n, int __delimiter,
           ^~~~~~
/usr/include/stdio.h:607:9: error: expected declaration specifiers or ‘...’ before ‘size_t’
         size_t *__restrict __n, int __delimiter,
         ^~~~~~
/usr/include/stdio.h:617:8: error: expected declaration specifiers or ‘...’ before ‘size_t’
        size_t *__restrict __n,
        ^~~~~~
/usr/include/stdio.h:646:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘fread’
 extern size_t fread (void *__restrict __ptr, size_t __size,
               ^~~~~
/usr/include/stdio.h:652:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘fwrite’
 extern size_t fwrite (const void *__restrict __ptr, size_t __size,
               ^~~~~~
/usr/include/stdio.h:673:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘fread_unlocked’
 extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
               ^~~~~~~~~~~~~~
/usr/include/stdio.h:675:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘fwrite_unlocked’
 extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
               ^~~~~~~~~~~~~~~
In file included from main.c:3:0:
/usr/include/stdlib.h:97:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘__ctype_get_mb_cur_max’
 extern size_t __ctype_get_mb_cur_max (void) __THROW __wur;
               ^~~~~~~~~~~~~~~~~~~~~~
In file included from main.c:3:0:
/usr/include/stdlib.h:411:4: error: expected declaration specifiers or ‘...’ before ‘size_t’
    size_t __statelen) __THROW __nonnull ((2));
    ^~~~~~
/usr/include/stdlib.h:441:4: error: expected declaration specifiers or ‘...’ before ‘size_t’
    size_t __statelen,
    ^~~~~~
/usr/include/stdlib.h:539:22: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *malloc (size_t __size) __THROW __attribute_malloc__ __wur;
                      ^~~~~~
/usr/include/stdlib.h:541:22: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *calloc (size_t __nmemb, size_t __size)
                      ^~~~~~
/usr/include/stdlib.h:541:38: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *calloc (size_t __nmemb, size_t __size)
                                      ^~~~~~
/usr/include/stdlib.h:549:36: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *realloc (void *__ptr, size_t __size)
                                    ^~~~~~
In file included from /usr/include/stdlib.h:566:0,
                 from main.c:3:
/usr/include/alloca.h:32:22: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *alloca (size_t __size) __THROW;
                      ^~~~~~
In file included from main.c:3:0:
/usr/include/stdlib.h:572:22: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *valloc (size_t __size) __THROW __attribute_malloc__ __wur;
                      ^~~~~~
/usr/include/stdlib.h:577:45: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
                                             ^~~~~~
/usr/include/stdlib.h:577:65: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
                                                                 ^~~~~~
/usr/include/stdlib.h:583:29: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *aligned_alloc (size_t __alignment, size_t __size)
                             ^~~~~~
/usr/include/stdlib.h:583:49: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *aligned_alloc (size_t __alignment, size_t __size)
                                                 ^~~~~~
/usr/include/stdlib.h:818:9: error: expected declaration specifiers or ‘...’ before ‘size_t’
         size_t __nmemb, size_t __size, __compar_fn_t __compar)
         ^~~~~~
/usr/include/stdlib.h:818:25: error: expected declaration specifiers or ‘...’ before ‘size_t’
         size_t __nmemb, size_t __size, __compar_fn_t __compar)
                         ^~~~~~
/usr/include/stdlib.h:827:34: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void qsort (void *__base, size_t __nmemb, size_t __size,
                                  ^~~~~~
/usr/include/stdlib.h:827:50: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void qsort (void *__base, size_t __nmemb, size_t __size,
                                                  ^~~~~~
/usr/include/stdlib.h:901:6: error: expected declaration specifiers or ‘...’ before ‘size_t’
      size_t __len) __THROW __nonnull ((3, 4, 5));
      ^~~~~~
/usr/include/stdlib.h:904:6: error: expected declaration specifiers or ‘...’ before ‘size_t’
      size_t __len) __THROW __nonnull ((3, 4, 5));
      ^~~~~~
/usr/include/stdlib.h:908:31: error: expected declaration specifiers or ‘...’ before ‘size_t’
       char *__restrict __buf, size_t __len)
                               ^~~~~~
/usr/include/stdlib.h:912:31: error: expected declaration specifiers or ‘...’ before ‘size_t’
       char *__restrict __buf, size_t __len)
                               ^~~~~~
/usr/include/stdlib.h:919:36: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int mblen (const char *__s, size_t __n) __THROW;
                                    ^~~~~~
/usr/include/stdlib.h:923:34: error: expected declaration specifiers or ‘...’ before ‘size_t’
      const char *__restrict __s, size_t __n) __THROW;
                                  ^~~~~~
/usr/include/stdlib.h:930:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘mbstowcs’
 extern size_t mbstowcs (wchar_t *__restrict  __pwcs,
               ^~~~~~~~
/usr/include/stdlib.h:933:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘wcstombs’
 extern size_t wcstombs (char *__restrict __s,
               ^~~~~~~~
In file included from main.c:4:0:
/usr/include/string.h:43:8: error: expected declaration specifiers or ‘...’ before ‘size_t’
        size_t __n) __THROW __nonnull ((1, 2));
        ^~~~~~
/usr/include/string.h:46:56: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *memmove (void *__dest, const void *__src, size_t __n)
                                                        ^~~~~~
/usr/include/string.h:54:18: error: expected declaration specifiers or ‘...’ before ‘size_t’
         int __c, size_t __n)
                  ^~~~~~
/usr/include/string.h:60:42: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *memset (void *__s, int __c, size_t __n) __THROW __nonnull ((1));
                                          ^~~~~~
/usr/include/string.h:63:56: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int memcmp (const void *__s1, const void *__s2, size_t __n)
                                                        ^~~~~~
/usr/include/string.h:90:48: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *memchr (const void *__s, int __c, size_t __n)
                                                ^~~~~~
/usr/include/string.h:125:39: error: expected declaration specifiers or ‘...’ before ‘size_t’
         const char *__restrict __src, size_t __n)
                                       ^~~~~~
/usr/include/string.h:133:9: error: expected declaration specifiers or ‘...’ before ‘size_t’
         size_t __n) __THROW __nonnull ((1, 2));
         ^~~~~~
/usr/include/string.h:139:57: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int strncmp (const char *__s1, const char *__s2, size_t __n)
                                                         ^~~~~~
/usr/include/string.h:146:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strxfrm’
 extern size_t strxfrm (char *__restrict __dest,
               ^~~~~~~
In file included from main.c:4:0:
/usr/include/string.h:159:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strxfrm_l’
 extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
               ^~~~~~~~~
/usr/include/string.h:174:45: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern char *strndup (const char *__string, size_t __n)
                                             ^~~~~~
/usr/include/string.h:272:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strcspn’
 extern size_t strcspn (const char *__s, const char *__reject)
               ^~~~~~~
/usr/include/string.h:276:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strspn’
 extern size_t strspn (const char *__s, const char *__accept)
               ^~~~~~
/usr/include/string.h:384:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strlen’
 extern size_t strlen (const char *__s)
               ^~~~~~
/usr/include/string.h:390:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strnlen’
 extern size_t strnlen (const char *__string, size_t __maxlen)
               ^~~~~~~
In file included from /usr/include/features.h:424:0,
                 from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33,
                 from /usr/include/stdio.h:27,
                 from main.c:2:
/usr/include/string.h:409:12: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int __REDIRECT_NTH (strerror_r,
            ^
In file included from /usr/include/string.h:431:0,
                 from main.c:4:
/usr/include/strings.h:34:54: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int bcmp (const void *__s1, const void *__s2, size_t __n)
                                                      ^~~~~~
/usr/include/strings.h:38:53: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void bcopy (const void *__src, void *__dest, size_t __n)
                                                     ^~~~~~
/usr/include/strings.h:42:31: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void bzero (void *__s, size_t __n) __THROW __nonnull ((1));
                               ^~~~~~
/usr/include/strings.h:120:61: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
                                                             ^~~~~~
/usr/include/strings.h:134:6: error: expected declaration specifiers or ‘...’ before ‘size_t’
      size_t __n, locale_t __loc)
      ^~~~~~
In file included from main.c:4:0:
/usr/include/string.h:435:40: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void explicit_bzero (void *__s, size_t __n) __THROW __nonnull ((1));
                                        ^~~~~~
/usr/include/string.h:457:34: error: expected declaration specifiers or ‘...’ before ‘size_t’
    const char *__restrict __src, size_t __n)
                                  ^~~~~~
/usr/include/string.h:460:39: error: expected declaration specifiers or ‘...’ before ‘size_t’
         const char *__restrict __src, size_t __n)
                                       ^~~~~~
In file included from main.c:5:0:
/usr/include/dirent.h:354:5: error: expected declaration specifiers or ‘...’ before ‘size_t’
     size_t __nbytes,
     ^~~~~~
In file included from main.c:7:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:362:5: error: expected specifier-qualifier-list before ‘size_t’
     size_t _ucount;
     ^~~~~~
main.c: In function ‘initializeHashtable’:
main.c:54:47: warning: implicit declaration of function ‘malloc’ [-Wimplicit-function-declaration]
     localHashtable.table = (OccurrenceNode **)malloc(size * sizeof(OccurrenceNode *));
                                               ^~~~~~
main.c:54:47: warning: incompatible implicit declaration of built-in function ‘malloc’
main.c:54:47: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘removePunctuation’:
main.c:107:12: error: expected ‘;’ before ‘len’
     size_t len = strlen(word);
            ^~~
main.c:108:9: error: ‘len’ undeclared (first use in this function)
     if (len == 0)
         ^~~
main.c:108:9: note: each undeclared identifier is reported only once for each function it appears in
main.c:111:12: error: expected ‘;’ before ‘i’
     size_t i, j = 0;
            ^
main.c:112:10: error: ‘i’ undeclared (first use in this function)
     for (i = 0; i < len; ++i)
          ^
main.c:116:18: error: ‘j’ undeclared (first use in this function)
             word[j++] = tolower(word[i]); // Converti la parola in minuscolo
                  ^
main.c: In function ‘updateWordCount’:
main.c:126:5: warning: implicit declaration of function ‘strncpy’ [-Wimplicit-function-declaration]
     strncpy(cleanedWord, word, MAX_WORD_LENGTH - 1);
     ^~~~~~~
main.c:126:5: warning: incompatible implicit declaration of built-in function ‘strncpy’
main.c:126:5: note: include ‘<string.h>’ or provide a declaration of ‘strncpy’
main.c:169:49: warning: incompatible implicit declaration of built-in function ‘malloc’
     OccurrenceNode *newNode = (OccurrenceNode *)malloc(sizeof(OccurrenceNode));
                                                 ^~~~~~
main.c:169:49: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c:194:43: warning: implicit declaration of function ‘realloc’ [-Wimplicit-function-declaration]
     local_occurrences = (OccurrenceNode *)realloc(local_occurrences, (local_total_occurrences + 1) * sizeof(OccurrenceNode));
                                           ^~~~~~~
main.c:194:43: warning: incompatible implicit declaration of built-in function ‘realloc’
main.c:194:43: note: include ‘<stdlib.h>’ or provide a declaration of ‘realloc’
main.c: In function ‘get_total_file_size’:
main.c:222:9: warning: implicit declaration of function ‘snprintf’ [-Wimplicit-function-declaration]
         snprintf(filepath, sizeof(filepath), "%s/%s", input_dir, entry->d_name);
         ^~~~~~~~
main.c:222:9: warning: incompatible implicit declaration of built-in function ‘snprintf’
main.c:222:9: note: include ‘<stdio.h>’ or provide a declaration of ‘snprintf’
main.c: In function ‘initializeMasterHashtable’:
main.c:284:48: warning: incompatible implicit declaration of built-in function ‘malloc’
     masterHashtable.table = (OccurrenceNode **)malloc(size * sizeof(OccurrenceNode *));
                                                ^~~~~~
main.c:284:48: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘updateGlobalHistogram’:
main.c:300:9: warning: incompatible implicit declaration of built-in function ‘strncpy’
         strncpy(cleanedWord, localHistogram[i].word, MAX_WORD_LENGTH - 1);
         ^~~~~~~
main.c:300:9: note: include ‘<string.h>’ or provide a declaration of ‘strncpy’
main.c:321:53: warning: incompatible implicit declaration of built-in function ‘malloc’
         OccurrenceNode *newNode = (OccurrenceNode *)malloc(sizeof(OccurrenceNode));
                                                     ^~~~~~
main.c:321:53: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘receiveAndMergeHistograms’:
main.c:355:60: warning: incompatible implicit declaration of built-in function ‘malloc’
         OccurrenceNode *receivedBuffer = (OccurrenceNode *)malloc(receivedCount * sizeof(OccurrenceNode));
                                                            ^~~~~~
main.c:355:60: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: At top level:
main.c:374:6: error: redefinition of ‘receiveAndMergeHistograms’
 void receiveAndMergeHistograms(int num_processes) {
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:339:6: note: previous definition of ‘receiveAndMergeHistograms’ was here
 void receiveAndMergeHistograms(int num_processes)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:388:60: warning: incompatible implicit declaration of built-in function ‘malloc’
         OccurrenceNode *receivedBuffer = (OccurrenceNode *)malloc(receivedCount * sizeof(OccurrenceNode));
                                                            ^~~~~~
main.c:388:60: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c:399:9: error: too few arguments to function ‘updateGlobalHistogram’
         updateGlobalHistogram(receivedBuffer, receivedCount);
         ^~~~~~~~~~~~~~~~~~~~~
main.c:293:6: note: declared here
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int totalParole)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:421:44: warning: incompatible implicit declaration of built-in function ‘malloc’
     MPI_Request *requests = (MPI_Request *)malloc((num_processes - 1) * sizeof(MPI_Request));
                                            ^~~~~~
main.c:421:44: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c:474:17: warning: incompatible implicit declaration of built-in function ‘snprintf’
                 snprintf(filepath, sizeof(filepath), "%s/%s", INPUT_DIR, entry->d_name);
                 ^~~~~~~~
main.c:474:17: note: include ‘<stdio.h>’ or provide a declaration of ‘snprintf’
main.c:483:21: warning: implicit declaration of function ‘fread’; did you mean ‘free’? [-Wimplicit-function-declaration]
                     fread(all_data + current_offset, sizeof(char), file_size, file);
                     ^~~~~
                     free
main.c:610:13: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
             memcpy(local_occurrences_buffer, local_occurrences, parolecontate * sizeof(OccurrenceNode));
             ^~~~~~
main.c:610:13: warning: incompatible implicit declaration of built-in function ‘memcpy’
main.c:610:13: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
main.c:373:6: error: redefinition of ‘receiveAndMergeHistograms’
 void receiveAndMergeHistograms(int num_processes) {
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:338:6: note: previous definition of ‘receiveAndMergeHistograms’ was here
 void receiveAndMergeHistograms(int num_processes)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:398:9: error: too few arguments to function ‘updateGlobalHistogram’
         updateGlobalHistogram(receivedBuffer, receivedCount);
         ^~~~~~~~~~~~~~~~~~~~~
main.c:292:6: note: declared here
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int totalParole)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:363:9: error: too few arguments to function ‘updateGlobalHistogram’
         updateGlobalHistogram(receivedBuffer, receivedCount);
         ^~~~~~~~~~~~~~~~~~~~~
main.c:292:6: note: declared here
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int totalParole)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:406:6: error: redefinition of ‘receiveAndMergeHistograms’
 void receiveAndMergeHistograms(int num_processes)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:353:6: note: previous definition of ‘receiveAndMergeHistograms’ was here
 void receiveAndMergeHistograms(int num_processes)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:416:14: error: ‘receivedBuffer’ undeclared (first use in this function)
         free(receivedBuffer);
              ^~~~~~~~~~~~~~
main.c:416:14: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:389:5: warning: implicit declaration of function ‘printGlobalHashtable’; did you mean ‘printLocalHashtable’? [-Wimplicit-function-declaration]
     printGlobalHashtable();
     ^~~~~~~~~~~~~~~~~~~~
     printLocalHashtable
main.c: At top level:
main.c:393:6: warning: conflicting types for ‘printGlobalHashtable’
 void printGlobalHashtable()
      ^~~~~~~~~~~~~~~~~~~~
main.c:389:5: note: previous implicit declaration of ‘printGlobalHashtable’ was here
     printGlobalHashtable();
     ^~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:189:21: error: ‘parolecontate’ undeclared (first use in this function)
 newNode->position = parolecontate;
                     ^~~~~~~~~~~~~
main.c:189:21: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateGlobalHistogram’:
main.c:282:34: warning: implicit declaration of function ‘hashFunction’ [-Wimplicit-function-declaration]
         unsigned int hashIndex = hashFunction(cleanedWord) % masterHashtable.size;
                                  ^~~~~~~~~~~~
build/main.o: In function `updateGlobalHistogram':
/home/docker-mpi/src/main.c:282: undefined reference to `hashFunction'
collect2: error: ld returned 1 exit status
main.c: In function ‘receiveAndMergeHistograms’:
main.c:394:34: error: ‘MPI_LOCAL_OCCURRENCE_NODE’ undeclared (first use in this function); did you mean ‘MPI_OCCURRENCE_NODE’?
             MPI_Recv(newNode, 1, MPI_LOCAL_OCCURRENCE_NODE, source_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~
                                  MPI_OCCURRENCE_NODE
main.c:394:34: note: each undeclared identifier is reported only once for each function it appears in
main.c:411:62: error: ‘totalParole’ undeclared (first use in this function)
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                                                              ^~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:394:34: error: ‘MPI_LOCAL_OCCURRENCE_NODE’ undeclared (first use in this function); did you mean ‘MPI_OCCURRENCE_NODE’?
             MPI_Recv(newNode, 1, MPI_LOCAL_OCCURRENCE_NODE, source_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~
                                  MPI_OCCURRENCE_NODE
main.c:394:34: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:568:49: error: ‘totalParole’ undeclared (first use in this function); did you mean ‘total_size’?
         receiveAndMergeHistograms(num_processes,totalParole);
                                                 ^~~~~~~~~~~
                                                 total_size
main.c: In function ‘receiveAndMergeHistograms’:
main.c:394:34: error: ‘MPI_LOCAL_OCCURRENCE_NODE’ undeclared (first use in this function); did you mean ‘MPI_OCCURRENCE_NODE’?
             MPI_Recv(newNode, 1, MPI_LOCAL_OCCURRENCE_NODE, source_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~
                                  MPI_OCCURRENCE_NODE
main.c:394:34: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:409:9: error: ‘totalParole’ undeclared (first use in this function)
         totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
main.c:409:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:409:25: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘+=’ token
         int totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
                         ^~
main.c:409:25: error: expected expression before ‘+=’ token
main.c:412:62: error: ‘totalParole’ undeclared (first use in this function)
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                                                              ^~~~~~~~~~~
main.c:412:62: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:409:9: error: ‘totalParole’ undeclared (first use in this function)
         totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
main.c:409:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateGlobalHistogram’:
main.c:280:5: error: too few arguments to function ‘initializeMasterHashtable’
     initializeMasterHashtable();
     ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:262:6: note: declared here
 void initializeMasterHashtable(int size) {
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:409:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                               ^~~~~~~~~~~~~~
main.c:277:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:409:62: warning: passing argument 3 of ‘updateGlobalHistogram’ makes pointer from integer without a cast [-Wint-conversion]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                                                              ^~~~~~~~~~~
main.c:277:6: note: expected ‘int *’ but argument is of type ‘int’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:409:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                               ^~~~~~~~~~~~~~
main.c:277:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:409:62: warning: passing argument 3 of ‘updateGlobalHistogram’ makes pointer from integer without a cast [-Wint-conversion]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                                                              ^~~~~~~~~~~
main.c:277:6: note: expected ‘int *’ but argument is of type ‘int’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:410:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount, &globalIndexCounter);
                               ^~~~~~~~~~~~~~
main.c:278:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:295:57: error: invalid type argument of unary ‘*’ (have ‘int’)
         OccurrenceNode *current = masterHashtable.table[*globalIndexCounter];
                                                         ^~~~~~~~~~~~~~~~~~~
main.c:326:33: error: invalid type argument of unary ‘*’ (have ‘int’)
             newNode->position = *globalIndexCounter;
                                 ^~~~~~~~~~~~~~~~~~~
main.c:329:51: error: invalid type argument of unary ‘*’ (have ‘int’)
             newNode->next = masterHashtable.table[*globalIndexCounter];
                                                   ^~~~~~~~~~~~~~~~~~~
main.c:330:35: error: invalid type argument of unary ‘*’ (have ‘int’)
             masterHashtable.table[*globalIndexCounter] = newNode;
                                   ^~~~~~~~~~~~~~~~~~~
main.c:336:14: error: invalid type argument of unary ‘*’ (have ‘int’)
             (*globalIndexCounter)++;
              ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:410:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount);
                               ^~~~~~~~~~~~~~
main.c:278:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:295:57: error: invalid type argument of unary ‘*’ (have ‘int’)
         OccurrenceNode *current = masterHashtable.table[*globalIndexCounter];
                                                         ^~~~~~~~~~~~~~~~~~~
main.c:323:22: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘LocalOccurrenceNode {aka struct LocalOccurrenceNode}’
             *newNode = localHistogram[i];
                      ^
main.c:326:33: error: invalid type argument of unary ‘*’ (have ‘int’)
             newNode->position = *globalIndexCounter;
                                 ^~~~~~~~~~~~~~~~~~~
main.c:329:51: error: invalid type argument of unary ‘*’ (have ‘int’)
             newNode->next = masterHashtable.table[*globalIndexCounter];
                                                   ^~~~~~~~~~~~~~~~~~~
main.c:330:35: error: invalid type argument of unary ‘*’ (have ‘int’)
             masterHashtable.table[*globalIndexCounter] = newNode;
                                   ^~~~~~~~~~~~~~~~~~~
main.c:336:14: error: invalid type argument of unary ‘*’ (have ‘int’)
             (*globalIndexCounter)++;
              ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:323:22: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘LocalOccurrenceNode {aka struct LocalOccurrenceNode}’
             *newNode = localHistogram[i];
                      ^
main.c: In function ‘receiveAndMergeHistograms’:
main.c:411:62: warning: passing argument 3 of ‘updateGlobalHistogram’ makes pointer from integer without a cast [-Wint-conversion]
         updateGlobalHistogram(receivedBuffer, receivedCount, globalIndexCounter);
                                                              ^~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘int *’ but argument is of type ‘int’
 void updateGlobalHistogram(LocalOccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:323:22: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘LocalOccurrenceNode {aka struct LocalOccurrenceNode}’
             *newNode = localHistogram[i];
                      ^
main.c: In function ‘receiveAndMergeHistograms’:
main.c:411:62: warning: passing argument 3 of ‘updateGlobalHistogram’ makes pointer from integer without a cast [-Wint-conversion]
         updateGlobalHistogram(receivedBuffer, receivedCount, globalIndexCounter);
                                                              ^~~~~~~~~~~~~~~~~~
main.c:278:6: note: expected ‘int *’ but argument is of type ‘int’
 void updateGlobalHistogram(LocalOccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:323:22: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘LocalOccurrenceNode {aka struct LocalOccurrenceNode}’
             *newNode = localHistogram[i];
                      ^
main.c: In function ‘updateGlobalHistogram’:
main.c:295:57: error: invalid type argument of unary ‘*’ (have ‘int’)
         OccurrenceNode *current = masterHashtable.table[*globalIndexCounter];
                                                         ^~~~~~~~~~~~~~~~~~~
main.c:323:22: error: incompatible types when assigning to type ‘OccurrenceNode {aka struct OccurrenceNode}’ from type ‘LocalOccurrenceNode {aka struct LocalOccurrenceNode}’
             *newNode = localHistogram[i];
                      ^
main.c:326:33: error: invalid type argument of unary ‘*’ (have ‘int’)
             newNode->position = *globalIndexCounter;
                                 ^~~~~~~~~~~~~~~~~~~
main.c:329:51: error: invalid type argument of unary ‘*’ (have ‘int’)
             newNode->next = masterHashtable.table[*globalIndexCounter];
                                                   ^~~~~~~~~~~~~~~~~~~
main.c:330:35: error: invalid type argument of unary ‘*’ (have ‘int’)
             masterHashtable.table[*globalIndexCounter] = newNode;
                                   ^~~~~~~~~~~~~~~~~~~
main.c:336:14: error: invalid type argument of unary ‘*’ (have ‘int’)
             (*globalIndexCounter)++;
              ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:295:57: error: invalid type argument of unary ‘*’ (have ‘int’)
         OccurrenceNode *current = masterHashtable.table[*globalIndexCounter];
                                                         ^~~~~~~~~~~~~~~~~~~
main.c:326:33: error: invalid type argument of unary ‘*’ (have ‘int’)
             newNode->position = *globalIndexCounter;
                                 ^~~~~~~~~~~~~~~~~~~
main.c:329:51: error: invalid type argument of unary ‘*’ (have ‘int’)
             newNode->next = masterHashtable.table[*globalIndexCounter];
                                                   ^~~~~~~~~~~~~~~~~~~
main.c:330:35: error: invalid type argument of unary ‘*’ (have ‘int’)
             masterHashtable.table[*globalIndexCounter] = newNode;
                                   ^~~~~~~~~~~~~~~~~~~
main.c:336:14: error: invalid type argument of unary ‘*’ (have ‘int’)
             (*globalIndexCounter)++;
              ^~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:410:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount);
                               ^~~~~~~~~~~~~~
main.c:278:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:410:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount, &globalIndexCounter);
                               ^~~~~~~~~~~~~~
main.c:278:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:409:63: error: ‘globalIndexCounter’ undeclared (first use in this function)
         updateGlobalHistogram(receivedBuffer, receivedCount, &globalIndexCounter);
                                                               ^~~~~~~~~~~~~~~~~~
main.c:409:63: note: each undeclared identifier is reported only once for each function it appears in
main.c:409:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount, &globalIndexCounter);
                               ^~~~~~~~~~~~~~
main.c:277:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:409:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                               ^~~~~~~~~~~~~~
main.c:277:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:409:62: warning: passing argument 3 of ‘updateGlobalHistogram’ makes pointer from integer without a cast [-Wint-conversion]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                                                              ^~~~~~~~~~~
main.c:277:6: note: expected ‘int *’ but argument is of type ‘int’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:280:5: error: too few arguments to function ‘initializeMasterHashtable’
     initializeMasterHashtable();
     ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:262:6: note: declared here
 void initializeMasterHashtable(int size) {
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:409:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                               ^~~~~~~~~~~~~~
main.c:277:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:409:62: warning: passing argument 3 of ‘updateGlobalHistogram’ makes pointer from integer without a cast [-Wint-conversion]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                                                              ^~~~~~~~~~~
main.c:277:6: note: expected ‘int *’ but argument is of type ‘int’
 void updateGlobalHistogram(OccurrenceNode *localHistogram, int localHistogramSize, int *globalIndexCounter)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:57:22: error: redefinition of ‘local_occurrences_head’
 LocalOccurrenceNode *local_occurrences_head = NULL;
                      ^~~~~~~~~~~~~~~~~~~~~~
main.c:54:22: note: previous definition of ‘local_occurrences_head’ was here
 LocalOccurrenceNode *local_occurrences_head = NULL;
                      ^~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:283:26: warning: implicit declaration of function ‘hashFunction’ [-Wimplicit-function-declaration]
         int hash_index = hashFunction(current->word, masterHashtable.size);
                          ^~~~~~~~~~~~
main.c:302:13: warning: implicit declaration of function ‘addWordToGlobalHistogram’; did you mean ‘updateGlobalHistogram’? [-Wimplicit-function-declaration]
             addWordToGlobalHistogram(current->word, current->count, hash_index, total_words);
             ^~~~~~~~~~~~~~~~~~~~~~~~
             updateGlobalHistogram
build/main.o: In function `updateGlobalHistogram':
/home/docker-mpi/src/main.c:283: undefined reference to `hashFunction'
/home/docker-mpi/src/main.c:302: undefined reference to `addWordToGlobalHistogram'
collect2: error: ld returned 1 exit status
main.c: In function ‘addWordToGlobalHistogram’:
main.c:290:19: error: assignment to expression with array type
     newNode->word = strdup(word); // Assicurati di avere una copia della parola
                   ^
main.c: In function ‘receiveAndMergeHistograms’:
main.c:408:9: error: too many arguments to function ‘updateGlobalHistogram’
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
         ^~~~~~~~~~~~~~~~~~~~~
main.c:313:6: note: declared here
 void updateGlobalHistogram(LocalOccurrenceNode *local_occurrences, int local_count)
      ^~~~~~~~~~~~~~~~~~~~~
build/main.o: In function `updateGlobalHistogram':
/home/docker-mpi/src/main.c:283: undefined reference to `hashFunction'
/home/docker-mpi/src/main.c:302: undefined reference to `addWordToGlobalHistogram'
collect2: error: ld returned 1 exit status
main.c: In function ‘receiveAndMergeHistograms’:
main.c:409:9: error: too many arguments to function ‘updateGlobalHistogram’
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
         ^~~~~~~~~~~~~~~~~~~~~
main.c:314:6: note: declared here
 void updateGlobalHistogram(LocalOccurrenceNode *local_occurrences, int local_count)
      ^~~~~~~~~~~~~~~~~~~~~
build/main.o: In function `updateGlobalHistogram':
/home/docker-mpi/src/main.c:283: undefined reference to `hashFunction'
/home/docker-mpi/src/main.c:302: undefined reference to `addWordToGlobalHistogram'
collect2: error: ld returned 1 exit status
main.c: In function ‘updateGlobalHistogram’:
main.c:283:26: warning: implicit declaration of function ‘hashFunction’ [-Wimplicit-function-declaration]
         int hash_index = hashFunction(current->word, masterHashtable.size);
                          ^~~~~~~~~~~~
main.c:302:13: warning: implicit declaration of function ‘addWordToGlobalHistogram’; did you mean ‘updateGlobalHistogram’? [-Wimplicit-function-declaration]
             addWordToGlobalHistogram(current->word, current->count, hash_index, total_words);
             ^~~~~~~~~~~~~~~~~~~~~~~~
             updateGlobalHistogram
build/main.o: In function `updateGlobalHistogram':
/home/docker-mpi/src/main.c:283: undefined reference to `hashFunction'
/home/docker-mpi/src/main.c:302: undefined reference to `addWordToGlobalHistogram'
collect2: error: ld returned 1 exit status
main.c: In function ‘receiveAndMergeHistograms’:
main.c:398:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                               ^~~~~~~~~~~~~~
main.c:295:6: note: expected ‘GlobalHistogram * {aka struct <anonymous> *}’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(GlobalHistogram* histogram, const char* word) {
      ^~~~~~~~~~~~~~~~~~~~~
main.c:398:47: warning: passing argument 2 of ‘updateGlobalHistogram’ makes pointer from integer without a cast [-Wint-conversion]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                                               ^~~~~~~~~~~~~
main.c:295:6: note: expected ‘const char *’ but argument is of type ‘int’
 void updateGlobalHistogram(GlobalHistogram* histogram, const char* word) {
      ^~~~~~~~~~~~~~~~~~~~~
main.c:398:9: error: too many arguments to function ‘updateGlobalHistogram’
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
         ^~~~~~~~~~~~~~~~~~~~~
main.c:295:6: note: declared here
 void updateGlobalHistogram(GlobalHistogram* histogram, const char* word) {
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:557:51: error: expected expression before ‘OccurrenceNode’
     updateGlobalHistogram(&globalHistogram, (char)OccurrenceNode.word);
                                                   ^~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:318:5: warning: implicit declaration of function ‘insertWord’; did you mean ‘strtold’? [-Wimplicit-function-declaration]
     insertWord(word, count, &gh->table[hashIndex]);
     ^~~~~~~~~~
     strtold
main.c: At top level:
main.c:321:6: warning: conflicting types for ‘insertWord’
 void insertWord(char *word, int count, node **head) {
      ^~~~~~~~~~
main.c:318:5: note: previous implicit declaration of ‘insertWord’ was here
     insertWord(word, count, &gh->table[hashIndex]);
     ^~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:407:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                               ^~~~~~~~~~~~~~
main.c:303:6: note: expected ‘char *’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(char *word, int count, globalHistogram *gh) {
      ^~~~~~~~~~~~~~~~~~~~~
main.c:407:62: warning: passing argument 3 of ‘updateGlobalHistogram’ makes pointer from integer without a cast [-Wint-conversion]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                                                              ^~~~~~~~~~~
main.c:303:6: note: expected ‘globalHistogram * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void updateGlobalHistogram(char *word, int count, globalHistogram *gh) {
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:408:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                               ^~~~~~~~~~~~~~
main.c:318:6: note: expected ‘char *’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(char *word, int count, globalHistogram *gh) {
      ^~~~~~~~~~~~~~~~~~~~~
main.c:408:62: warning: passing argument 3 of ‘updateGlobalHistogram’ makes pointer from integer without a cast [-Wint-conversion]
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
                                                              ^~~~~~~~~~~
main.c:318:6: note: expected ‘globalHistogram * {aka struct <anonymous> *}’ but argument is of type ‘int’
 void updateGlobalHistogram(char *word, int count, globalHistogram *gh) {
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘printLocalOccurrences’:
main.c:356:50: error: ‘LocalOccurrenceNode {aka struct LocalOccurrenceNode}’ has no member named ‘parola’
         printf("Parola: %s, Count: %d\n", current->parola, current->count);
                                                  ^~
main.c: In function ‘printGlobalHashtable’:
main.c:362:25: error: ‘HASHTABLE_SIZE’ undeclared (first use in this function); did you mean ‘S_BLKSIZE’?
     for (int i = 0; i < HASHTABLE_SIZE; ++i) {
                         ^~~~~~~~~~~~~~
                         S_BLKSIZE
main.c:362:25: note: each undeclared identifier is reported only once for each function it appears in
main.c:363:9: error: unknown type name ‘GlobalOccurrenceNode’; did you mean ‘LocalOccurrenceNode’?
         GlobalOccurrenceNode *current = globalHashtable[i];
         ^~~~~~~~~~~~~~~~~~~~
         LocalOccurrenceNode
main.c:363:41: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
         GlobalOccurrenceNode *current = globalHashtable[i];
                                         ^~~~~~~~~~~~~~~
                                         localHashtable
main.c:365:40: error: request for member ‘parola’ in something not a structure or union
             printf("(%s, %d) ", current->parola, current->count);
                                        ^~
main.c:365:57: error: request for member ‘count’ in something not a structure or union
             printf("(%s, %d) ", current->parola, current->count);
                                                         ^~
main.c:366:30: error: request for member ‘next’ in something not a structure or union
             current = current->next;
                              ^~
main.c: In function ‘printGlobalHashtable’:
main.c:363:35: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
         OccurrenceNode *current = globalHashtable[i];
                                   ^~~~~~~~~~~~~~~
                                   localHashtable
main.c:363:35: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘printGlobalHashtable’:
main.c:363:49: error: subscripted value is neither array nor pointer nor vector
         OccurrenceNode *current = localHashtable[i];
                                                 ^
main.c: In function ‘receiveAndMergeHistograms’:
main.c:415:9: warning: implicit declaration of function ‘printLocalOccurrences’; did you mean ‘sendLocalOccurrences’? [-Wimplicit-function-declaration]
         printLocalOccurrences(receivedBuffer);  // Aggiungi una funzione di stampa per le occorrenze locali
         ^~~~~~~~~~~~~~~~~~~~~
         sendLocalOccurrences
build/main.o: In function `receiveAndMergeHistograms':
/home/docker-mpi/src/main.c:415: undefined reference to `printLocalOccurrences'
collect2: error: ld returned 1 exit status
main.c:66:1: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘MPI_Datatype’
 MPI_Datatype MPI_OCCURRENCE_NODE;
 ^~~~~~~~~~~~
main.c: In function ‘sendLocalOccurrences’:
main.c:231:30: error: ‘MPI_OCCURRENCE_NODE’ undeclared (first use in this function); did you mean ‘OMPI_COMM_TYPE_NODE’?
         MPI_Send(current, 1, MPI_OCCURRENCE_NODE, MASTER_RANK, 0, MPI_COMM_WORLD);
                              ^~~~~~~~~~~~~~~~~~~
                              OMPI_COMM_TYPE_NODE
main.c:231:30: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘updateGlobalHistogram’:
main.c:304:44: error: ‘globalHashtable’ undeclared (first use in this function); did you mean ‘localHashtable’?
         GlobalOccurrenceNode* globalNode = globalHashtable[hashIndex];
                                            ^~~~~~~~~~~~~~~
                                            localHashtable
main.c: In function ‘receiveAndMergeHistograms’:
main.c:398:34: error: ‘MPI_OCCURRENCE_NODE’ undeclared (first use in this function); did you mean ‘OMPI_COMM_TYPE_NODE’?
             MPI_Recv(newNode, 1, MPI_OCCURRENCE_NODE, source_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                  ^~~~~~~~~~~~~~~~~~~
                                  OMPI_COMM_TYPE_NODE
main.c: In function ‘main’:
main.c:453:61: error: ‘MPI_OCCURRENCE_NODE’ undeclared (first use in this function); did you mean ‘OMPI_COMM_TYPE_NODE’?
     MPI_Type_create_struct(2, blockcounts, offsets, types, &MPI_OCCURRENCE_NODE);
                                                             ^~~~~~~~~~~~~~~~~~~
                                                             OMPI_COMM_TYPE_NODE
main.c:64:23: error: variably modified ‘globalHashtable’ at file scope
 GlobalOccurrenceNode* globalHashtable[masterHashtable.size];
                       ^~~~~~~~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:304:44: error: incompatible types when initializing type ‘GlobalOccurrenceNode * {aka struct GlobalOccurrenceNode *}’ using type ‘GlobalOccurrenceNode {aka struct GlobalOccurrenceNode}’
         GlobalOccurrenceNode* globalNode = globalHashtable[hashIndex];
                                            ^~~~~~~~~~~~~~~
main.c:333:44: error: incompatible types when assigning to type ‘GlobalOccurrenceNode {aka struct GlobalOccurrenceNode}’ from type ‘GlobalOccurrenceNode * {aka struct GlobalOccurrenceNode *}’
                 globalHashtable[hashIndex] = newNode;
                                            ^
main.c: In function ‘updateGlobalHistogram’:
main.c:304:44: error: incompatible types when initializing type ‘GlobalOccurrenceNode * {aka struct GlobalOccurrenceNode *}’ using type ‘GlobalOccurrenceNode {aka struct GlobalOccurrenceNode}’
         GlobalOccurrenceNode* globalNode = globalHashtable[hashIndex];
                                            ^~~~~~~~~~~~~~~
main.c:333:44: error: incompatible types when assigning to type ‘GlobalOccurrenceNode {aka struct GlobalOccurrenceNode}’ from type ‘GlobalOccurrenceNode * {aka struct GlobalOccurrenceNode *}’
                 globalHashtable[hashIndex] = newNode;
                                            ^
main.c: In function ‘receiveAndMergeHistograms’:
main.c:437:9: error: too few arguments to function ‘updateGlobalHistogram’
         updateGlobalHistogram(receivedBuffer, receivedCount, totalParole);
         ^~~~~~~~~~~~~~~~~~~~~
main.c:297:6: note: declared here
 void updateGlobalHistogram(LocalOccurrenceNode *localHistogram, int localHistogramSize, int totalParole, unsigned int masterHashtableSize)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:403:29: error: ‘receivedCount’ undeclared (first use in this function); did you mean ‘receivedBuffer’?
         for (int j = 0; j < receivedCount; ++j) {
                             ^~~~~~~~~~~~~
                             receivedBuffer
main.c:403:29: note: each undeclared identifier is reported only once for each function it appears in
main.c:412:55: error: ‘source_rank’ undeclared (first use in this function)
             MPI_Recv(newNode, 1, MPI_OCCURRENCE_NODE, source_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                                       ^~~~~~~~~~~
main.c:429:9: error: ‘totalParole’ undeclared (first use in this function)
         totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:407:9: error: ‘totalsize’ undeclared (first use in this function); did you mean ‘totalParole’?
         totalsize=+ receivedCount;
         ^~~~~~~~~
         totalParole
main.c:407:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:603:9: error: expected ‘;’ before ‘initializeMasterHashtable’
         initializeMasterHashtable(totalParole);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:407:9: error: ‘totalsize’ undeclared (first use in this function); did you mean ‘totalParole’?
         totalsize=+ receivedCount;
         ^~~~~~~~~
         totalParole
main.c:407:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:407:9: error: ‘totalsize’ undeclared (first use in this function); did you mean ‘totalParole’?
         totalsize=+ receivedCount;
         ^~~~~~~~~
         totalParole
main.c:407:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:407:9: error: ‘totalsize’ undeclared (first use in this function)
         totalsize=+ receivedCount;
         ^~~~~~~~~
main.c:407:9: note: each undeclared identifier is reported only once for each function it appears in
main.c:438:9: error: ‘totalParole’ undeclared (first use in this function); did you mean ‘totalsize’?
         totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
         totalsize
main.c: In function ‘receiveAndMergeHistograms’:
main.c:438:9: error: ‘totalParole’ undeclared (first use in this function)
         totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
main.c:438:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:438:9: error: ‘totalParole’ undeclared (first use in this function)
         totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
main.c:438:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:403:29: error: ‘receivedCount’ undeclared (first use in this function); did you mean ‘receivedBuffer’?
         for (int j = 0; j < receivedCount; ++j) {
                             ^~~~~~~~~~~~~
                             receivedBuffer
main.c:403:29: note: each undeclared identifier is reported only once for each function it appears in
main.c:412:55: error: ‘source_rank’ undeclared (first use in this function)
             MPI_Recv(newNode, 1, MPI_OCCURRENCE_NODE, source_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                                       ^~~~~~~~~~~
main.c:429:9: error: ‘totalParole’ undeclared (first use in this function)
         totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
main.c: In function ‘main’:
main.c:603:9: error: expected ‘;’ before ‘initializeMasterHashtable’
         initializeMasterHashtable(100);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:407:9: error: ‘totalsize’ undeclared (first use in this function)
         totalsize=+ receivedCount;
         ^~~~~~~~~
main.c:407:9: note: each undeclared identifier is reported only once for each function it appears in
main.c:438:9: error: ‘totalParole’ undeclared (first use in this function); did you mean ‘totalsize’?
         totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
         totalsize
main.c: In function ‘receiveAndMergeHistograms’:
main.c:438:9: error: ‘totalParole’ undeclared (first use in this function)
         totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
main.c:438:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:438:9: error: ‘totalParole’ undeclared (first use in this function)
         totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
main.c:438:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:403:29: error: ‘receivedCount’ undeclared (first use in this function); did you mean ‘receivedBuffer’?
         for (int j = 0; j < receivedCount; ++j) {
                             ^~~~~~~~~~~~~
                             receivedBuffer
main.c:403:29: note: each undeclared identifier is reported only once for each function it appears in
main.c:412:55: error: ‘source_rank’ undeclared (first use in this function)
             MPI_Recv(newNode, 1, MPI_OCCURRENCE_NODE, source_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                                       ^~~~~~~~~~~
main.c:429:9: error: ‘totalParole’ undeclared (first use in this function)
         totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
main.c: In function ‘receiveAndMergeHistograms’:
main.c:403:29: error: ‘receivedCount’ undeclared (first use in this function); did you mean ‘receivedBuffer’?
         for (int j = 0; j < receivedCount; ++j) {
                             ^~~~~~~~~~~~~
                             receivedBuffer
main.c:403:29: note: each undeclared identifier is reported only once for each function it appears in
main.c:412:55: error: ‘source_rank’ undeclared (first use in this function)
             MPI_Recv(newNode, 1, MPI_OCCURRENCE_NODE, source_rank, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
                                                       ^~~~~~~~~~~
main.c:429:9: error: ‘totalParole’ undeclared (first use in this function)
         totalParole += receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
main.c: In function ‘sendLocalOccurrences’:
main.c:235:5: warning: implicit declaration of function ‘cleanWord’; did you mean ‘clearerr’? [-Wimplicit-function-declaration]
     cleanWord(current->word);
     ^~~~~~~~~
     clearerr
build/main.o: In function `sendLocalOccurrences':
/home/docker-mpi/src/main.c:235: undefined reference to `cleanWord'
collect2: error: ld returned 1 exit status
main.c: In function ‘receiveAndMergeHistograms’:
main.c:415:9: error: ‘totalParole’ undeclared (first use in this function)
         totalParole = totalParole + receivedCount;
         ^~~~~~~~~~~
main.c:415:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:452:9: error: ‘totalParole’ undeclared (first use in this function)
         totalParole =+receivedCount; // Aggiorna il conteggio totale delle parole
         ^~~~~~~~~~~
main.c:452:9: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:617:9: warning: implicit declaration of function ‘print’; did you mean ‘printf’? [-Wimplicit-function-declaration]
         print("okkkkkkkkk");
         ^~~~~
         printf
build/main.o: In function `main':
/home/docker-mpi/src/main.c:617: undefined reference to `print'
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:623:41: warning: passing argument 2 of ‘writeCSV’ from incompatible pointer type [-Wincompatible-pointer-types]
         writeCSV("final_histogram.csv", masterHashtable.table, masterHashtable.size);
                                         ^~~~~~~~~~~~~~~
main.c:258:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void writeCSV(const char *filename, OccurrenceNode *histogram, int size)
      ^~~~~~~~
main.c: In function ‘main’:
main.c:622:41: warning: passing argument 2 of ‘writeCSV’ from incompatible pointer type [-Wincompatible-pointer-types]
         writeCSV("final_histogram.csv", masterHashtable.table, masterHashtable.size);
                                         ^~~~~~~~~~~~~~~
main.c:258:6: note: expected ‘OccurrenceNode * {aka struct OccurrenceNode *}’ but argument is of type ‘OccurrenceNode ** {aka struct OccurrenceNode **}’
 void writeCSV(const char *filename, OccurrenceNode *histogram, int size)
      ^~~~~~~~
main.c: In function ‘writeCSV’:
main.c:281:41: error: invalid operands to binary + (have ‘char *’ and ‘char *’)
             fprintf(csvFile, "Word: %s" + " - Count: %d\n", cleanedWord, current->count);
                              ~~~~~~~~~~ ^
main.c: In function ‘main’:
main.c:647:5: error: expected ‘}’ before ‘else’
     else
     ^~~~
main.c: In function ‘main’:
main.c:603:102: warning: comparison between pointer and integer
             while ((end_byte < total_size + 1 ) && ((all_data[end_byte] != ' ')||(all_data[end_byte] != ".")) )
                                                                                                      ^~
main.c: In function ‘main’:
main.c:675:34: warning: passing argument 2 of ‘strtok’ makes pointer from integer without a cast [-Wint-conversion]
             token = strtok(NULL, (" " || "." || ','));
                                  ^
In file included from main.c:3:0:
/usr/include/string.h:335:14: note: expected ‘const char * restrict’ but argument is of type ‘int’
 extern char *strtok (char *__restrict __s, const char *__restrict __delim)
              ^~~~~~
main.c: In function ‘updateWordCount’:
main.c:139:5: warning: implicit declaration of function ‘removePunctuation’; did you mean ‘removePunctuationAndSpaces’? [-Wimplicit-function-declaration]
     removePunctuation(cleanedWord);
     ^~~~~~~~~~~~~~~~~
     removePunctuationAndSpaces
build/main.o: In function `updateWordCount':
/home/docker-mpi/src/main.c:139: undefined reference to `removePunctuation'
build/main.o: In function `sendLocalOccurrences':
/home/docker-mpi/src/main.c:235: undefined reference to `removePunctuation'
build/main.o: In function `writeCSV':
/home/docker-mpi/src/main.c:275: undefined reference to `removePunctuation'
build/main.o: In function `updateGlobalHistogram':
/home/docker-mpi/src/main.c:327: undefined reference to `removePunctuation'
build/main.o: In function `printGlobalHashtable':
/home/docker-mpi/src/main.c:390: undefined reference to `removePunctuation'
build/main.o:/home/docker-mpi/src/main.c:447: more undefined references to `removePunctuation' follow
collect2: error: ld returned 1 exit status
build/main.o: In function `updateWordCount':
/home/docker-mpi/src/main.c:139: undefined reference to `removePunctuation'
build/main.o: In function `sendLocalOccurrences':
/home/docker-mpi/src/main.c:235: undefined reference to `removePunctuation'
build/main.o: In function `writeCSV':
/home/docker-mpi/src/main.c:275: undefined reference to `removePunctuation'
build/main.o: In function `updateGlobalHistogram':
/home/docker-mpi/src/main.c:327: undefined reference to `removePunctuation'
build/main.o: In function `printGlobalHashtable':
/home/docker-mpi/src/main.c:390: undefined reference to `removePunctuation'
build/main.o:/home/docker-mpi/src/main.c:447: more undefined references to `removePunctuation' follow
collect2: error: ld returned 1 exit status
main.c: In function ‘main’:
main.c:630:5: error: expected ‘}’ before ‘else’
     else
     ^~~~
main.c:318:35: warning: ‘struct Histogram’ declared inside parameter list will not be visible outside of this definition or declaration
 void updateGlobalHistogram(struct Histogram *globalHistogram, char *word, int count)
                                   ^~~~~~~~~
main.c: In function ‘updateGlobalHistogram’:
main.c:320:17: error: too few arguments to function ‘hashFunction’
     int index = hashFunction(word) % globalHistogram->size;
                 ^~~~~~~~~~~~
main.c:306:5: note: declared here
 int hashFunction(const char *word, int tableSize)
     ^~~~~~~~~~~~
main.c:320:53: error: dereferencing pointer to incomplete type ‘struct Histogram’
     int index = hashFunction(word) % globalHistogram->size;
                                                     ^~
main.c:332:26: error: ‘struct HistogramNode’ has no member named ‘next’
         current = current->next;
                          ^~
main.c:336:5: warning: implicit declaration of function ‘insertHistogramNode’; did you mean ‘compareHistogramNodes’? [-Wimplicit-function-declaration]
     insertHistogramNode(globalHistogram, word, count);
     ^~~~~~~~~~~~~~~~~~~
     compareHistogramNodes
main.c: In function ‘receiveAndMergeHistograms’:
main.c:434:31: warning: passing argument 1 of ‘updateGlobalHistogram’ from incompatible pointer type [-Wincompatible-pointer-types]
         updateGlobalHistogram(receivedBuffer, receivedCount);
                               ^~~~~~~~~~~~~~
main.c:318:6: note: expected ‘struct Histogram *’ but argument is of type ‘LocalOccurrenceNode * {aka struct LocalOccurrenceNode *}’
 void updateGlobalHistogram(struct Histogram *globalHistogram, char *word, int count)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:434:47: warning: passing argument 2 of ‘updateGlobalHistogram’ makes pointer from integer without a cast [-Wint-conversion]
         updateGlobalHistogram(receivedBuffer, receivedCount);
                                               ^~~~~~~~~~~~~
main.c:318:6: note: expected ‘char *’ but argument is of type ‘int’
 void updateGlobalHistogram(struct Histogram *globalHistogram, char *word, int count)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:434:9: error: too few arguments to function ‘updateGlobalHistogram’
         updateGlobalHistogram(receivedBuffer, receivedCount);
         ^~~~~~~~~~~~~~~~~~~~~
main.c:318:6: note: declared here
 void updateGlobalHistogram(struct Histogram *globalHistogram, char *word, int count)
      ^~~~~~~~~~~~~~~~~~~~~
main.c: In function ‘main’:
main.c:670:32: warning: format ‘%c’ expects argument of type ‘int’, but argument 2 has type ‘char **’ [-Wformat=]
 printf("TOKEN PRIMA DI WHILE: %c",&token);
                               ~^  ~~~~~~
main.c:677:35: warning: format ‘%c’ expects argument of type ‘int’, but argument 2 has type ‘char **’ [-Wformat=]
     printf("TOKEN dopo DI WHILE: %c",&token);
                                  ~^  ~~~~~~
main.c: In function ‘main’:
main.c:670:32: warning: format ‘%c’ expects argument of type ‘int’, but argument 2 has type ‘char *’ [-Wformat=]
 printf("TOKEN PRIMA DI WHILE: %c",token);
                               ~^
                               %s
main.c:677:35: warning: format ‘%c’ expects argument of type ‘int’, but argument 2 has type ‘char *’ [-Wformat=]
     printf("TOKEN dopo DI WHILE: %c",token);
                                  ~^
                                  %s
main.c: In function ‘main’:
main.c:449:8: error: expected identifier or ‘(’ before ‘[’ token
     int[2] = {1, MAX_WORD_LENGTH};
        ^
main.c:452:31: error: ‘blockcounts’ undeclared (first use in this function)
     MPI_Type_create_struct(2, blockcounts, offsets, types, &MPI_OCCURRENCE_NODE);
                               ^~~~~~~~~~~
main.c:452:31: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘receiveAndMergeHistograms’:
main.c:436:10: error: ‘receivedBuffer’ undeclared (first use in this function)
     free(receivedBuffer);
          ^~~~~~~~~~~~~~
main.c:436:10: note: each undeclared identifier is reported only once for each function it appears in
main.c:1:1: error: expected identifier or ‘(’ before ‘<’ token
 <stdlib.h>
 ^
In file included from main.c:2:0:
/usr/include/string.h:43:8: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
        size_t __n) __THROW __nonnull ((1, 2));
        ^~~~~~
        __size_t
/usr/include/string.h:46:56: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern void *memmove (void *__dest, const void *__src, size_t __n)
                                                        ^~~~~~
                                                        __size_t
/usr/include/string.h:54:18: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
         int __c, size_t __n)
                  ^~~~~~
                  __size_t
/usr/include/string.h:60:42: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern void *memset (void *__s, int __c, size_t __n) __THROW __nonnull ((1));
                                          ^~~~~~
                                          __size_t
/usr/include/string.h:63:56: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern int memcmp (const void *__s1, const void *__s2, size_t __n)
                                                        ^~~~~~
                                                        __size_t
/usr/include/string.h:90:48: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern void *memchr (const void *__s, int __c, size_t __n)
                                                ^~~~~~
                                                __size_t
/usr/include/string.h:125:39: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
         const char *__restrict __src, size_t __n)
                                       ^~~~~~
                                       __size_t
/usr/include/string.h:133:9: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
         size_t __n) __THROW __nonnull ((1, 2));
         ^~~~~~
         __size_t
/usr/include/string.h:139:57: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern int strncmp (const char *__s1, const char *__s2, size_t __n)
                                                         ^~~~~~
                                                         __size_t
/usr/include/string.h:146:8: error: unknown type name ‘size_t’
 extern size_t strxfrm (char *__restrict __dest,
        ^~~~~~
/usr/include/string.h:147:40: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
          const char *__restrict __src, size_t __n)
                                        ^~~~~~
                                        __size_t
In file included from main.c:2:0:
/usr/include/string.h:159:8: error: unknown type name ‘size_t’
 extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
        ^~~~~~
/usr/include/string.h:159:59: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
                                                           ^~~~~~
                                                           __size_t
/usr/include/string.h:174:45: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern char *strndup (const char *__string, size_t __n)
                                             ^~~~~~
                                             __size_t
/usr/include/string.h:272:8: error: unknown type name ‘size_t’
 extern size_t strcspn (const char *__s, const char *__reject)
        ^~~~~~
/usr/include/string.h:276:8: error: unknown type name ‘size_t’
 extern size_t strspn (const char *__s, const char *__accept)
        ^~~~~~
/usr/include/string.h:384:8: error: unknown type name ‘size_t’
 extern size_t strlen (const char *__s)
        ^~~~~~
/usr/include/string.h:390:8: error: unknown type name ‘size_t’
 extern size_t strnlen (const char *__string, size_t __maxlen)
        ^~~~~~
/usr/include/string.h:390:46: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern size_t strnlen (const char *__string, size_t __maxlen)
                                              ^~~~~~
                                              __size_t
In file included from /usr/include/features.h:424:0,
                 from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33,
                 from /usr/include/string.h:26,
                 from main.c:2:
/usr/include/string.h:409:12: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern int __REDIRECT_NTH (strerror_r,
            ^
In file included from /usr/include/string.h:431:0,
                 from main.c:2:
/usr/include/strings.h:34:54: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern int bcmp (const void *__s1, const void *__s2, size_t __n)
                                                      ^~~~~~
                                                      __size_t
/usr/include/strings.h:38:53: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern void bcopy (const void *__src, void *__dest, size_t __n)
                                                     ^~~~~~
                                                     __size_t
/usr/include/strings.h:42:31: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern void bzero (void *__s, size_t __n) __THROW __nonnull ((1));
                               ^~~~~~
                               __size_t
/usr/include/strings.h:120:61: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
                                                             ^~~~~~
                                                             __size_t
/usr/include/strings.h:134:6: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
      size_t __n, locale_t __loc)
      ^~~~~~
      __size_t
In file included from main.c:2:0:
/usr/include/string.h:435:40: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
 extern void explicit_bzero (void *__s, size_t __n) __THROW __nonnull ((1));
                                        ^~~~~~
                                        __size_t
/usr/include/string.h:457:34: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
    const char *__restrict __src, size_t __n)
                                  ^~~~~~
                                  __size_t
/usr/include/string.h:460:39: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
         const char *__restrict __src, size_t __n)
                                       ^~~~~~
                                       __size_t
In file included from main.c:3:0:
/usr/include/dirent.h:354:5: error: unknown type name ‘size_t’; did you mean ‘__size_t’?
     size_t __nbytes,
     ^~~~~~
     __size_t
In file included from main.c:5:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:362:5: error: unknown type name ‘size_t’
     size_t _ucount;
     ^~~~~~
main.c: In function ‘initializeHashtable’:
main.c:71:47: warning: implicit declaration of function ‘malloc’ [-Wimplicit-function-declaration]
     localHashtable.table = (OccurrenceNode **)malloc(size * sizeof(OccurrenceNode *));
                                               ^~~~~~
main.c:71:47: warning: incompatible implicit declaration of built-in function ‘malloc’
main.c:71:47: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘freeHashtable’:
main.c:90:13: warning: implicit declaration of function ‘free’ [-Wimplicit-function-declaration]
             free(temp);
             ^~~~
main.c:90:13: warning: incompatible implicit declaration of built-in function ‘free’
main.c:90:13: note: include ‘<stdlib.h>’ or provide a declaration of ‘free’
main.c:93:5: warning: incompatible implicit declaration of built-in function ‘free’
     free(localHashtable.table);
     ^~~~
main.c:93:5: note: include ‘<stdlib.h>’ or provide a declaration of ‘free’
main.c: In function ‘updateWordCount’:
main.c:126:5: warning: implicit declaration of function ‘strncpy’ [-Wimplicit-function-declaration]
     strncpy(cleanedWord, word, MAX_WORD_LENGTH - 1);
     ^~~~~~~
main.c:126:5: warning: incompatible implicit declaration of built-in function ‘strncpy’
main.c:126:5: note: include ‘<string.h>’ or provide a declaration of ‘strncpy’
main.c:138:13: warning: implicit declaration of function ‘printf’ [-Wimplicit-function-declaration]
             printf("Processo %d: Word %s , Count aggiornayo a %d\n", rank, cleanedWord, current->count);
             ^~~~~~
main.c:138:13: warning: incompatible implicit declaration of built-in function ‘printf’
main.c:138:13: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
main.c:145:59: warning: incompatible implicit declaration of built-in function ‘malloc’
     LocalOccurrenceNode *newNode = (LocalOccurrenceNode *)malloc(sizeof(LocalOccurrenceNode));
                                                           ^~~~~~
main.c:145:59: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c:148:9: warning: incompatible implicit declaration of built-in function ‘printf’
         printf("Processo %d: Errore - Allocazione di memoria fallita.\n", rank);
         ^~~~~~
main.c:148:9: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
main.c:160:5: warning: incompatible implicit declaration of built-in function ‘printf’
     printf("Processo %d: Word %s aggiunta. Count: 1\n", rank, cleanedWord);
     ^~~~~~
main.c:160:5: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
main.c: In function ‘get_total_file_size’:
main.c:178:9: warning: implicit declaration of function ‘snprintf’ [-Wimplicit-function-declaration]
         snprintf(filepath, sizeof(filepath), "%s/%s", input_dir, entry->d_name);
         ^~~~~~~~
main.c:178:9: warning: incompatible implicit declaration of built-in function ‘snprintf’
main.c:178:9: note: include ‘<stdio.h>’ or provide a declaration of ‘snprintf’
main.c: In function ‘writeCSV’:
main.c:231:5: error: unknown type name ‘FILE’
     FILE *csvFile = fopen(filename, "w");
     ^~~~
main.c:231:21: warning: implicit declaration of function ‘fopen’ [-Wimplicit-function-declaration]
     FILE *csvFile = fopen(filename, "w");
                     ^~~~~
main.c:231:21: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
main.c:234:9: warning: implicit declaration of function ‘perror’; did you mean ‘strerror’? [-Wimplicit-function-declaration]
         perror("Errore nell'apertura del file CSV");
         ^~~~~~
         strerror
main.c:238:5: warning: implicit declaration of function ‘fprintf’ [-Wimplicit-function-declaration]
     fprintf(csvFile, "Il numero finale delle occorrenze di ogni Word è il seguente.\n");
     ^~~~~~~
main.c:238:5: warning: incompatible implicit declaration of built-in function ‘fprintf’
main.c:238:5: note: include ‘<stdio.h>’ or provide a declaration of ‘fprintf’
main.c:258:5: warning: implicit declaration of function ‘fclose’ [-Wimplicit-function-declaration]
     fclose(csvFile);
     ^~~~~~
main.c: In function ‘initializeMasterHashtable’:
main.c:266:48: warning: incompatible implicit declaration of built-in function ‘malloc’
     masterHashtable.table = (OccurrenceNode **)malloc(size * sizeof(OccurrenceNode *));
                                                ^~~~~~
main.c:266:48: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘updateGlobalHistogram’:
main.c:296:9: warning: incompatible implicit declaration of built-in function ‘strncpy’
         strncpy(cleanedWord, currentNode->word, MAX_WORD_LENGTH - 1);
         ^~~~~~~
main.c:296:9: note: include ‘<string.h>’ or provide a declaration of ‘strncpy’
main.c:328:57: warning: incompatible implicit declaration of built-in function ‘malloc’
             OccurrenceNode *newNode = (OccurrenceNode *)malloc(sizeof(OccurrenceNode));
                                                         ^~~~~~
main.c:328:57: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c:331:17: warning: incompatible implicit declaration of built-in function ‘printf’
                 printf("Processo MASTER: Errore - Allocazione di memoria fallita.\n");
                 ^~~~~~
main.c:331:17: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
main.c: In function ‘printGlobalHashtable’:
main.c:363:13: warning: incompatible implicit declaration of built-in function ‘printf’
             printf("(%s, %d)\n", cleanedWord, current->count);
             ^~~~~~
main.c:363:13: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
main.c: In function ‘receiveAndMergeHistograms’:
main.c:394:67: warning: incompatible implicit declaration of built-in function ‘malloc’
             LocalOccurrenceNode *newNode = (LocalOccurrenceNode *)malloc(sizeof(LocalOccurrenceNode));
                                                                   ^~~~~~
main.c:394:67: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c:399:17: warning: incompatible implicit declaration of built-in function ‘printf’
                 printf("Processo MASTER: Errore - Allocazione di memoria fallita.\n");
                 ^~~~~~
main.c:399:17: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
main.c:427:5: warning: incompatible implicit declaration of built-in function ‘printf’
     printf("\nHashtable globale dopo il merge:\n");
     ^~~~~~
main.c:427:5: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
main.c: In function ‘main’:
main.c:445:44: warning: incompatible implicit declaration of built-in function ‘malloc’
     MPI_Request *requests = (MPI_Request *)malloc((num_processes - 1) * sizeof(MPI_Request));
                                            ^~~~~~
main.c:445:44: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c:496:17: warning: incompatible implicit declaration of built-in function ‘snprintf’
                 snprintf(filepath, sizeof(filepath), "%s/%s", INPUT_DIR, entry->d_name);
                 ^~~~~~~~
main.c:496:17: note: include ‘<stdio.h>’ or provide a declaration of ‘snprintf’
main.c:498:17: error: unknown type name ‘FILE’
                 FILE *file = fopen(filepath, "r");
                 ^~~~
main.c:498:30: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
                 FILE *file = fopen(filepath, "r");
                              ^~~~~
main.c:501:21: warning: implicit declaration of function ‘fseek’ [-Wimplicit-function-declaration]
                     fseek(file, 0, SEEK_END);
                     ^~~~~
main.c:501:36: error: ‘SEEK_END’ undeclared (first use in this function); did you mean ‘MPI_SEEK_END’?
                     fseek(file, 0, SEEK_END);
                                    ^~~~~~~~
                                    MPI_SEEK_END
main.c:501:36: note: each undeclared identifier is reported only once for each function it appears in
main.c:502:38: warning: implicit declaration of function ‘ftell’; did you mean ‘ffsll’? [-Wimplicit-function-declaration]
                     long file_size = ftell(file);
                                      ^~~~~
                                      ffsll
main.c:503:36: error: ‘SEEK_SET’ undeclared (first use in this function); did you mean ‘SEEK_END’?
                     fseek(file, 0, SEEK_SET);
                                    ^~~~~~~~
                                    SEEK_END
main.c:505:21: warning: implicit declaration of function ‘fread’ [-Wimplicit-function-declaration]
                     fread(all_data + current_offset, sizeof(char), file_size, file);
                     ^~~~~
main.c:527:9: warning: incompatible implicit declaration of built-in function ‘printf’
         printf("Processo %d: Total size: %ld, Avg partition size: %ld, Extra bytes: %ld\n", rank, total_size, avg_partition_size, extra_bytes);
         ^~~~~~
main.c:527:9: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
main.c:628:13: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
             memcpy(local_occurrences_buffer, local_occurrences, parolecontate * sizeof(OccurrenceNode));
             ^~~~~~
main.c:628:13: warning: incompatible implicit declaration of built-in function ‘memcpy’
main.c:628:13: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
main.c:632:13: warning: incompatible implicit declaration of built-in function ‘free’
             free(local_occurrences_buffer);
             ^~~~
main.c:632:13: note: include ‘<stdlib.h>’ or provide a declaration of ‘free’
main.c: In function ‘main’:
main.c:648:9: error: expected ‘;’ before ‘}’ token
         }
         ^
main.c: In function ‘writeCSV’:
main.c:263:6: warning: passing argument 1 of ‘free’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
 free(filename);  // Aggiunta questa linea per liberare la memoria del buffer del nome del file
      ^~~~~~~~
In file included from main.c:2:0:
/usr/include/stdlib.h:563:13: note: expected ‘void *’ but argument is of type ‘const char *’
 extern void free (void *__ptr) __THROW;
             ^~~~
main.c: In function ‘main’:
main.c:651:6: error: ‘all_data’ undeclared (first use in this function); did you mean ‘local_data’?
 free(all_data);
      ^~~~~~~~
      local_data
main.c:651:6: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘writeCSV’:
main.c:263:6: warning: passing argument 1 of ‘free’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
 free(filename);  // Aggiunta questa linea per liberare la memoria del buffer del nome del file
      ^~~~~~~~
In file included from main.c:2:0:
/usr/include/stdlib.h:563:13: note: expected ‘void *’ but argument is of type ‘const char *’
 extern void free (void *__ptr) __THROW;
             ^~~~
main.c: In function ‘main’:
main.c:654:6: error: ‘all_data’ undeclared (first use in this function); did you mean ‘alloca’?
 free(all_data);
      ^~~~~~~~
      alloca
main.c:654:6: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘writeCSV’:
main.c:263:6: warning: passing argument 1 of ‘free’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
 free(filename);  // Aggiunta questa linea per liberare la memoria del buffer del nome del file
      ^~~~~~~~
In file included from main.c:2:0:
/usr/include/stdlib.h:563:13: note: expected ‘void *’ but argument is of type ‘const char *’
 extern void free (void *__ptr) __THROW;
             ^~~~
main.c:585:1: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before numeric constant
 7 DICEMBRE 2023 ORE 22:30 
 ^
main.c:626:1: warning: useless type name in empty declaration
 } OccurrenceNode;
 ^
main.c:634:3: error: conflicting types for ‘Hashtable’
 } Hashtable;
   ^~~~~~~~~
main.c:26:3: note: previous declaration of ‘Hashtable’ was here
 } Hashtable;
   ^~~~~~~~~
main.c:636:16: error: redefinition of ‘struct HistogramNode’
 typedef struct HistogramNode
                ^~~~~~~~~~~~~
main.c:28:16: note: originally defined here
 typedef struct HistogramNode
                ^~~~~~~~~~~~~
main.c:640:3: error: conflicting types for ‘HistogramNode’
 } HistogramNode;
   ^~~~~~~~~~~~~
main.c:32:3: note: previous declaration of ‘HistogramNode’ was here
 } HistogramNode;
   ^~~~~~~~~~~~~
main.c:643:11: error: conflicting types for ‘localHashtable’
 Hashtable localHashtable;
           ^~~~~~~~~~~~~~
main.c:35:11: note: previous declaration of ‘localHashtable’ was here
 Hashtable localHashtable;
           ^~~~~~~~~~~~~~
main.c:645:5: error: redefinition of ‘total_occurrences’
 int total_occurrences = 0;
     ^~~~~~~~~~~~~~~~~
main.c:36:5: note: previous definition of ‘total_occurrences’ was here
 int total_occurrences = 0;
     ^~~~~~~~~~~~~~~~~
main.c:651:6: error: redefinition of ‘initializeHashtable’
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:42:6: note: previous definition of ‘initializeHashtable’ was here
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:665:17: error: redefinition of ‘all_occurrences’
 OccurrenceNode *all_occurrences = NULL;
                 ^~~~~~~~~~~~~~~
main.c:56:17: note: previous definition of ‘all_occurrences’ was here
 OccurrenceNode *all_occurrences = NULL;
                 ^~~~~~~~~~~~~~~
main.c:666:17: error: redefinition of ‘local_occurrences’
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:57:17: note: previous definition of ‘local_occurrences’ was here
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:669:6: error: redefinition of ‘freeHashtable’
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:60:6: note: previous definition of ‘freeHashtable’ was here
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:690:14: error: redefinition of ‘hashFunction’
 unsigned int hashFunction(const char *word)
              ^~~~~~~~~~~~
main.c:81:14: note: previous definition of ‘hashFunction’ was here
 unsigned int hashFunction(const char *word)
              ^~~~~~~~~~~~
main.c:701:6: error: redefinition of ‘removePunctuation’
 void removePunctuation(char *word)
      ^~~~~~~~~~~~~~~~~
main.c:92:6: note: previous definition of ‘removePunctuation’ was here
 void removePunctuation(char *word)
      ^~~~~~~~~~~~~~~~~
main.c:720:6: error: redefinition of ‘updateWordCount’
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:110:6: note: previous definition of ‘updateWordCount’ was here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:763:6: error: redefinition of ‘get_total_file_size’
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c:154:6: note: previous definition of ‘get_total_file_size’ was here
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c:790:6: error: redefinition of ‘printLocalHashtable’
 void printLocalHashtable(int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:181:6: note: previous definition of ‘printLocalHashtable’ was here
 void printLocalHashtable(int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:806:5: error: redefinition of ‘compareHistogramNodes’
 int compareHistogramNodes(const void *a, const void *b)
     ^~~~~~~~~~~~~~~~~~~~~
main.c:196:5: note: previous definition of ‘compareHistogramNodes’ was here
 int compareHistogramNodes(const void *a, const void *b)
     ^~~~~~~~~~~~~~~~~~~~~
main.c:812:5: error: redefinition of ‘compareOccurrenceNodes’
 int compareOccurrenceNodes(const void *a, const void *b)
     ^~~~~~~~~~~~~~~~~~~~~~
main.c:202:5: note: previous definition of ‘compareOccurrenceNodes’ was here
 int compareOccurrenceNodes(const void *a, const void *b)
     ^~~~~~~~~~~~~~~~~~~~~~
main.c:818:6: error: redefinition of ‘writeCSV’
 void writeCSV(const char *filename, OccurrenceNode *histogram, int size)
      ^~~~~~~~
main.c:208:6: note: previous definition of ‘writeCSV’ was here
 void writeCSV(const char *filename, OccurrenceNode *histogram, int size)
      ^~~~~~~~
main.c:882:5: error: redefinition of ‘main’
 int main(int argc, char **argv)
     ^~~~
main.c:229:5: note: previous definition of ‘main’ was here
 int main(int argc, char **argv)
     ^~~~
main.c: In function ‘updateWordCount’:
main.c:142:13: warning: attempt to free a non-heap object ‘cleanedWord’ [-Wfree-nonheap-object]
             free(cleanedWord);  // Libera la memoria
             ^~~~~~~~~~~~~~~~~
main.c:153:9: warning: attempt to free a non-heap object ‘cleanedWord’ [-Wfree-nonheap-object]
         free(cleanedWord);  // Libera la memoria
         ^~~~~~~~~~~~~~~~~
main.c: In function ‘updateWordCount’:
main.c:142:13: warning: attempt to free a non-heap object ‘cleanedWord’ [-Wfree-nonheap-object]
             free(cleanedWord);  // Libera la memoria
             ^~~~~~~~~~~~~~~~~
main.c:153:9: warning: attempt to free a non-heap object ‘cleanedWord’ [-Wfree-nonheap-object]
         free(cleanedWord);  // Libera la memoria
         ^~~~~~~~~~~~~~~~~
/bin/sh: 1: valgrind: not found
/bin/sh: 1: valgrind: not found
In file included from /usr/include/stdio.h:33:0,
                 from main.c:2:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:1: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘typedef’
 typedef __SIZE_TYPE__ size_t;
 ^~~~~~~
In file included from /usr/include/stdio.h:41:0,
                 from main.c:2:
/usr/include/x86_64-linux-gnu/bits/libio.h:306:3: error: unknown type name ‘size_t’
   size_t __pad5;
   ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:309:67: error: ‘size_t’ undeclared here (not in a function); did you mean ‘__size_t’?
   char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];
                                                                   ^~~~~~
                                                                   __size_t
/usr/include/x86_64-linux-gnu/bits/libio.h:337:62: error: expected declaration specifiers or ‘...’ before ‘size_t’
 typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);
                                                              ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:346:6: error: expected declaration specifiers or ‘...’ before ‘size_t’
      size_t __n);
      ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:467:19: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘_IO_sgetn’
 extern _IO_size_t _IO_sgetn (_IO_FILE *, void *, _IO_size_t);
                   ^~~~~~~~~
In file included from main.c:2:0:
/usr/include/stdio.h:278:35: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
                                   ^~~~~~
/usr/include/stdio.h:284:47: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __THROW __wur;
                                               ^~~~~~
/usr/include/stdio.h:295:20: error: expected declaration specifiers or ‘...’ before ‘size_t’
       int __modes, size_t __n) __THROW;
                    ^~~~~~
/usr/include/stdio.h:301:10: error: expected declaration specifiers or ‘...’ before ‘size_t’
          size_t __size) __THROW;
          ^~~~~~
/usr/include/stdio.h:340:44: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int snprintf (char *__restrict __s, size_t __maxlen,
                                            ^~~~~~
/usr/include/stdio.h:344:45: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int vsnprintf (char *__restrict __s, size_t __maxlen,
                                             ^~~~~~
/usr/include/stdio.h:604:11: error: expected declaration specifiers or ‘...’ before ‘size_t’
           size_t *__restrict __n, int __delimiter,
           ^~~~~~
/usr/include/stdio.h:607:9: error: expected declaration specifiers or ‘...’ before ‘size_t’
         size_t *__restrict __n, int __delimiter,
         ^~~~~~
/usr/include/stdio.h:617:8: error: expected declaration specifiers or ‘...’ before ‘size_t’
        size_t *__restrict __n,
        ^~~~~~
/usr/include/stdio.h:646:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘fread’
 extern size_t fread (void *__restrict __ptr, size_t __size,
               ^~~~~
/usr/include/stdio.h:652:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘fwrite’
 extern size_t fwrite (const void *__restrict __ptr, size_t __size,
               ^~~~~~
/usr/include/stdio.h:673:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘fread_unlocked’
 extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
               ^~~~~~~~~~~~~~
/usr/include/stdio.h:675:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘fwrite_unlocked’
 extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
               ^~~~~~~~~~~~~~~
In file included from main.c:3:0:
/usr/include/stdlib.h:97:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘__ctype_get_mb_cur_max’
 extern size_t __ctype_get_mb_cur_max (void) __THROW __wur;
               ^~~~~~~~~~~~~~~~~~~~~~
In file included from main.c:3:0:
/usr/include/stdlib.h:411:4: error: expected declaration specifiers or ‘...’ before ‘size_t’
    size_t __statelen) __THROW __nonnull ((2));
    ^~~~~~
/usr/include/stdlib.h:441:4: error: expected declaration specifiers or ‘...’ before ‘size_t’
    size_t __statelen,
    ^~~~~~
/usr/include/stdlib.h:539:22: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *malloc (size_t __size) __THROW __attribute_malloc__ __wur;
                      ^~~~~~
/usr/include/stdlib.h:541:22: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *calloc (size_t __nmemb, size_t __size)
                      ^~~~~~
/usr/include/stdlib.h:541:38: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *calloc (size_t __nmemb, size_t __size)
                                      ^~~~~~
/usr/include/stdlib.h:549:36: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *realloc (void *__ptr, size_t __size)
                                    ^~~~~~
In file included from /usr/include/stdlib.h:566:0,
                 from main.c:3:
/usr/include/alloca.h:32:22: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *alloca (size_t __size) __THROW;
                      ^~~~~~
In file included from main.c:3:0:
/usr/include/stdlib.h:572:22: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *valloc (size_t __size) __THROW __attribute_malloc__ __wur;
                      ^~~~~~
/usr/include/stdlib.h:577:45: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
                                             ^~~~~~
/usr/include/stdlib.h:577:65: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
                                                                 ^~~~~~
/usr/include/stdlib.h:583:29: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *aligned_alloc (size_t __alignment, size_t __size)
                             ^~~~~~
/usr/include/stdlib.h:583:49: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *aligned_alloc (size_t __alignment, size_t __size)
                                                 ^~~~~~
/usr/include/stdlib.h:818:9: error: expected declaration specifiers or ‘...’ before ‘size_t’
         size_t __nmemb, size_t __size, __compar_fn_t __compar)
         ^~~~~~
/usr/include/stdlib.h:818:25: error: expected declaration specifiers or ‘...’ before ‘size_t’
         size_t __nmemb, size_t __size, __compar_fn_t __compar)
                         ^~~~~~
/usr/include/stdlib.h:827:34: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void qsort (void *__base, size_t __nmemb, size_t __size,
                                  ^~~~~~
/usr/include/stdlib.h:827:50: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void qsort (void *__base, size_t __nmemb, size_t __size,
                                                  ^~~~~~
/usr/include/stdlib.h:901:6: error: expected declaration specifiers or ‘...’ before ‘size_t’
      size_t __len) __THROW __nonnull ((3, 4, 5));
      ^~~~~~
/usr/include/stdlib.h:904:6: error: expected declaration specifiers or ‘...’ before ‘size_t’
      size_t __len) __THROW __nonnull ((3, 4, 5));
      ^~~~~~
/usr/include/stdlib.h:908:31: error: expected declaration specifiers or ‘...’ before ‘size_t’
       char *__restrict __buf, size_t __len)
                               ^~~~~~
/usr/include/stdlib.h:912:31: error: expected declaration specifiers or ‘...’ before ‘size_t’
       char *__restrict __buf, size_t __len)
                               ^~~~~~
/usr/include/stdlib.h:919:36: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int mblen (const char *__s, size_t __n) __THROW;
                                    ^~~~~~
/usr/include/stdlib.h:923:34: error: expected declaration specifiers or ‘...’ before ‘size_t’
      const char *__restrict __s, size_t __n) __THROW;
                                  ^~~~~~
/usr/include/stdlib.h:930:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘mbstowcs’
 extern size_t mbstowcs (wchar_t *__restrict  __pwcs,
               ^~~~~~~~
/usr/include/stdlib.h:933:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘wcstombs’
 extern size_t wcstombs (char *__restrict __s,
               ^~~~~~~~
In file included from main.c:4:0:
/usr/include/string.h:43:8: error: expected declaration specifiers or ‘...’ before ‘size_t’
        size_t __n) __THROW __nonnull ((1, 2));
        ^~~~~~
/usr/include/string.h:46:56: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *memmove (void *__dest, const void *__src, size_t __n)
                                                        ^~~~~~
/usr/include/string.h:54:18: error: expected declaration specifiers or ‘...’ before ‘size_t’
         int __c, size_t __n)
                  ^~~~~~
/usr/include/string.h:60:42: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *memset (void *__s, int __c, size_t __n) __THROW __nonnull ((1));
                                          ^~~~~~
/usr/include/string.h:63:56: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int memcmp (const void *__s1, const void *__s2, size_t __n)
                                                        ^~~~~~
/usr/include/string.h:90:48: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *memchr (const void *__s, int __c, size_t __n)
                                                ^~~~~~
/usr/include/string.h:125:39: error: expected declaration specifiers or ‘...’ before ‘size_t’
         const char *__restrict __src, size_t __n)
                                       ^~~~~~
/usr/include/string.h:133:9: error: expected declaration specifiers or ‘...’ before ‘size_t’
         size_t __n) __THROW __nonnull ((1, 2));
         ^~~~~~
/usr/include/string.h:139:57: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int strncmp (const char *__s1, const char *__s2, size_t __n)
                                                         ^~~~~~
/usr/include/string.h:146:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strxfrm’
 extern size_t strxfrm (char *__restrict __dest,
               ^~~~~~~
In file included from main.c:4:0:
/usr/include/string.h:159:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strxfrm_l’
 extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
               ^~~~~~~~~
/usr/include/string.h:174:45: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern char *strndup (const char *__string, size_t __n)
                                             ^~~~~~
/usr/include/string.h:272:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strcspn’
 extern size_t strcspn (const char *__s, const char *__reject)
               ^~~~~~~
/usr/include/string.h:276:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strspn’
 extern size_t strspn (const char *__s, const char *__accept)
               ^~~~~~
/usr/include/string.h:384:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strlen’
 extern size_t strlen (const char *__s)
               ^~~~~~
/usr/include/string.h:390:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strnlen’
 extern size_t strnlen (const char *__string, size_t __maxlen)
               ^~~~~~~
In file included from /usr/include/features.h:424:0,
                 from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33,
                 from /usr/include/stdio.h:27,
                 from main.c:2:
/usr/include/string.h:409:12: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int __REDIRECT_NTH (strerror_r,
            ^
In file included from /usr/include/string.h:431:0,
                 from main.c:4:
/usr/include/strings.h:34:54: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int bcmp (const void *__s1, const void *__s2, size_t __n)
                                                      ^~~~~~
/usr/include/strings.h:38:53: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void bcopy (const void *__src, void *__dest, size_t __n)
                                                     ^~~~~~
/usr/include/strings.h:42:31: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void bzero (void *__s, size_t __n) __THROW __nonnull ((1));
                               ^~~~~~
/usr/include/strings.h:120:61: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
                                                             ^~~~~~
/usr/include/strings.h:134:6: error: expected declaration specifiers or ‘...’ before ‘size_t’
      size_t __n, locale_t __loc)
      ^~~~~~
In file included from main.c:4:0:
/usr/include/string.h:435:40: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void explicit_bzero (void *__s, size_t __n) __THROW __nonnull ((1));
                                        ^~~~~~
/usr/include/string.h:457:34: error: expected declaration specifiers or ‘...’ before ‘size_t’
    const char *__restrict __src, size_t __n)
                                  ^~~~~~
/usr/include/string.h:460:39: error: expected declaration specifiers or ‘...’ before ‘size_t’
         const char *__restrict __src, size_t __n)
                                       ^~~~~~
In file included from main.c:5:0:
/usr/include/dirent.h:354:5: error: expected declaration specifiers or ‘...’ before ‘size_t’
     size_t __nbytes,
     ^~~~~~
In file included from main.c:7:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:362:5: error: expected specifier-qualifier-list before ‘size_t’
     size_t _ucount;
     ^~~~~~
main.c: In function ‘initializeHashtable’:
main.c:81:47: warning: implicit declaration of function ‘malloc’ [-Wimplicit-function-declaration]
     localHashtable.table = (OccurrenceNode **)malloc(size * sizeof(OccurrenceNode *));
                                               ^~~~~~
main.c:81:47: warning: incompatible implicit declaration of built-in function ‘malloc’
main.c:81:47: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘updateWordCount’:
main.c:140:5: warning: implicit declaration of function ‘strncpy’ [-Wimplicit-function-declaration]
     strncpy(cleanedWord, word, MAX_WORD_LENGTH - 1);
     ^~~~~~~
main.c:140:5: warning: incompatible implicit declaration of built-in function ‘strncpy’
main.c:140:5: note: include ‘<string.h>’ or provide a declaration of ‘strncpy’
main.c:159:59: warning: incompatible implicit declaration of built-in function ‘malloc’
     LocalOccurrenceNode *newNode = (LocalOccurrenceNode *)malloc(sizeof(LocalOccurrenceNode));
                                                           ^~~~~~
main.c:159:59: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘get_total_file_size’:
main.c:193:9: warning: implicit declaration of function ‘snprintf’ [-Wimplicit-function-declaration]
         snprintf(filepath, sizeof(filepath), "%s/%s", input_dir, entry->d_name);
         ^~~~~~~~
main.c:193:9: warning: incompatible implicit declaration of built-in function ‘snprintf’
main.c:193:9: note: include ‘<stdio.h>’ or provide a declaration of ‘snprintf’
main.c: In function ‘initializeMasterHashtable’:
main.c:298:48: warning: incompatible implicit declaration of built-in function ‘malloc’
     masterHashtable.table = (OccurrenceNode **)malloc(size * sizeof(OccurrenceNode *));
                                                ^~~~~~
main.c:298:48: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘updateGlobalHistogram’:
main.c:328:9: warning: incompatible implicit declaration of built-in function ‘strncpy’
         strncpy(cleanedWord, currentNode->word, MAX_WORD_LENGTH - 1);
         ^~~~~~~
main.c:328:9: note: include ‘<string.h>’ or provide a declaration of ‘strncpy’
main.c:360:57: warning: incompatible implicit declaration of built-in function ‘malloc’
             OccurrenceNode *newNode = (OccurrenceNode *)malloc(sizeof(OccurrenceNode));
                                                         ^~~~~~
main.c:360:57: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘receiveAndMergeHistograms’:
main.c:437:67: warning: incompatible implicit declaration of built-in function ‘malloc’
             LocalOccurrenceNode *newNode = (LocalOccurrenceNode *)malloc(sizeof(LocalOccurrenceNode));
                                                                   ^~~~~~
main.c:437:67: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘main’:
main.c:499:44: warning: incompatible implicit declaration of built-in function ‘malloc’
     MPI_Request *requests = (MPI_Request *)malloc((num_processes - 1) * sizeof(MPI_Request));
                                            ^~~~~~
main.c:499:44: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c:552:17: warning: incompatible implicit declaration of built-in function ‘snprintf’
                 snprintf(filepath, sizeof(filepath), "%s/%s", INPUT_DIR, entry->d_name);
                 ^~~~~~~~
main.c:552:17: note: include ‘<stdio.h>’ or provide a declaration of ‘snprintf’
main.c:561:21: warning: implicit declaration of function ‘fread’; did you mean ‘free’? [-Wimplicit-function-declaration]
                     fread(all_data + current_offset, sizeof(char), file_size, file);
                     ^~~~~
                     free
main.c:694:13: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
             memcpy(local_occurrences_buffer, local_occurrences, parolecontate * sizeof(OccurrenceNode));
             ^~~~~~
main.c:694:13: warning: incompatible implicit declaration of built-in function ‘memcpy’
main.c:694:13: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
main.c: In function ‘main’:
main.c:664:5: error: too few arguments to function ‘free’
     free();
     ^~~~
In file included from main.c:2:0:
/usr/include/stdlib.h:563:13: note: declared here
 extern void free (void *__ptr) __THROW;
             ^~~~
main.c: In function ‘initializeMasterHashtable’:
main.c:282:10: error: incompatible type for argument 1 of ‘free’
     free(masterHashtable);
          ^~~~~~~~~~~~~~~
In file included from main.c:2:0:
/usr/include/stdlib.h:563:13: note: expected ‘void *’ but argument is of type ‘Hashtable {aka struct <anonymous>}’
 extern void free (void *__ptr) __THROW;
             ^~~~
main.c:723:1: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before numeric constant
 12 Dic corretto :
 ^~
main.c:744:1: warning: useless type name in empty declaration
 } OccurrenceNode;
 ^
main.c:751:3: error: conflicting types for ‘Hashtable’
 } Hashtable;
   ^~~~~~~~~
main.c:27:3: note: previous declaration of ‘Hashtable’ was here
 } Hashtable;
   ^~~~~~~~~
main.c:753:16: error: redefinition of ‘struct HistogramNode’
 typedef struct HistogramNode
                ^~~~~~~~~~~~~
main.c:29:16: note: originally defined here
 typedef struct HistogramNode
                ^~~~~~~~~~~~~
main.c:757:3: error: conflicting types for ‘HistogramNode’
 } HistogramNode;
   ^~~~~~~~~~~~~
main.c:33:3: note: previous declaration of ‘HistogramNode’ was here
 } HistogramNode;
   ^~~~~~~~~~~~~
main.c:760:11: error: conflicting types for ‘localHashtable’
 Hashtable localHashtable;
           ^~~~~~~~~~~~~~
main.c:36:11: note: previous declaration of ‘localHashtable’ was here
 Hashtable localHashtable;
           ^~~~~~~~~~~~~~
main.c:762:11: error: conflicting types for ‘masterHashtable’
 Hashtable masterHashtable;
           ^~~~~~~~~~~~~~~
main.c:38:11: note: previous declaration of ‘masterHashtable’ was here
 Hashtable masterHashtable;
           ^~~~~~~~~~~~~~~
main.c:763:17: error: redefinition of ‘all_occurrences’
 OccurrenceNode *all_occurrences = NULL;
                 ^~~~~~~~~~~~~~~
main.c:39:17: note: previous definition of ‘all_occurrences’ was here
 OccurrenceNode *all_occurrences = NULL;
                 ^~~~~~~~~~~~~~~
main.c:764:17: error: redefinition of ‘local_occurrences’
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:40:17: note: previous definition of ‘local_occurrences’ was here
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:769:16: error: redefinition of ‘struct LocalOccurrenceNode’
 typedef struct LocalOccurrenceNode
                ^~~~~~~~~~~~~~~~~~~
main.c:45:16: note: originally defined here
 typedef struct LocalOccurrenceNode
                ^~~~~~~~~~~~~~~~~~~
main.c:774:3: error: conflicting types for ‘LocalOccurrenceNode’
 } LocalOccurrenceNode;
   ^~~~~~~~~~~~~~~~~~~
main.c:50:3: note: previous declaration of ‘LocalOccurrenceNode’ was here
 } LocalOccurrenceNode;
   ^~~~~~~~~~~~~~~~~~~
main.c:776:22: error: conflicting types for ‘local_occurrences_head’
 LocalOccurrenceNode *local_occurrences_head = NULL;
                      ^~~~~~~~~~~~~~~~~~~~~~
main.c:52:22: note: previous definition of ‘local_occurrences_head’ was here
 LocalOccurrenceNode *local_occurrences_head = NULL;
                      ^~~~~~~~~~~~~~~~~~~~~~
main.c:778:16: error: redefinition of ‘struct GlobalOccurrenceNode’
 typedef struct GlobalOccurrenceNode
                ^~~~~~~~~~~~~~~~~~~~
main.c:54:16: note: originally defined here
 typedef struct GlobalOccurrenceNode
                ^~~~~~~~~~~~~~~~~~~~
main.c:783:3: error: conflicting types for ‘GlobalOccurrenceNode’
 } GlobalOccurrenceNode;
   ^~~~~~~~~~~~~~~~~~~~
main.c:59:3: note: previous declaration of ‘GlobalOccurrenceNode’ was here
 } GlobalOccurrenceNode;
   ^~~~~~~~~~~~~~~~~~~~
main.c:789:3: error: conflicting types for ‘GlobalHashtable’
 } GlobalHashtable;
   ^~~~~~~~~~~~~~~
main.c:65:3: note: previous declaration of ‘GlobalHashtable’ was here
 } GlobalHashtable;
   ^~~~~~~~~~~~~~~
main.c:791:5: error: redefinition of ‘totalParole’
 int totalParole = 0;
     ^~~~~~~~~~~
main.c:67:5: note: previous definition of ‘totalParole’ was here
 int totalParole = 0;
     ^~~~~~~~~~~
main.c:797:6: error: redefinition of ‘initializeHashtable’
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:73:6: note: previous definition of ‘initializeHashtable’ was here
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:814:6: error: redefinition of ‘freeHashtable’
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:90:6: note: previous definition of ‘freeHashtable’ was here
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:843:6: error: redefinition of ‘removePunctuation’
 void removePunctuation(char *word)
      ^~~~~~~~~~~~~~~~~
main.c:119:6: note: previous definition of ‘removePunctuation’ was here
 void removePunctuation(char *word)
      ^~~~~~~~~~~~~~~~~
main.c:857:6: error: redefinition of ‘updateWordCount’
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:133:6: note: previous definition of ‘updateWordCount’ was here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:899:6: error: redefinition of ‘get_total_file_size’
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c:175:6: note: previous definition of ‘get_total_file_size’ was here
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c:926:6: error: redefinition of ‘printLocalHashtable’
 void printLocalHashtable(int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:202:6: note: previous definition of ‘printLocalHashtable’ was here
 void printLocalHashtable(int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:939:6: error: redefinition of ‘sendLocalOccurrences’
 void sendLocalOccurrences(int rank)
      ^~~~~~~~~~~~~~~~~~~~
main.c:215:6: note: previous definition of ‘sendLocalOccurrences’ was here
 void sendLocalOccurrences(int rank)
      ^~~~~~~~~~~~~~~~~~~~
main.c:967:5: error: redefinition of ‘compareHistogramNodes’
 int compareHistogramNodes(const void *a, const void *b)
     ^~~~~~~~~~~~~~~~~~~~~
main.c:243:5: note: previous definition of ‘compareHistogramNodes’ was here
 int compareHistogramNodes(const void *a, const void *b)
     ^~~~~~~~~~~~~~~~~~~~~
main.c:973:5: error: redefinition of ‘compareOccurrenceNodes’
 int compareOccurrenceNodes(const void *a, const void *b)
     ^~~~~~~~~~~~~~~~~~~~~~
main.c:249:5: note: previous definition of ‘compareOccurrenceNodes’ was here
 int compareOccurrenceNodes(const void *a, const void *b)
     ^~~~~~~~~~~~~~~~~~~~~~
main.c:978:6: error: conflicting types for ‘writeCSV’
 void writeCSV(const char *filename, Hashtable *hashTable)
      ^~~~~~~~
main.c:254:6: note: previous definition of ‘writeCSV’ was here
 void writeCSV(const char *filename, Hashtable *hashTable)
      ^~~~~~~~
main.c:1011:6: error: redefinition of ‘initializeMasterHashtable’
 void initializeMasterHashtable(int size)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:287:6: note: previous definition of ‘initializeMasterHashtable’ was here
 void initializeMasterHashtable(int size)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:1028:5: error: redefinition of ‘hashFunction’
 int hashFunction(const char *word, int tableSize)
     ^~~~~~~~~~~~
main.c:304:5: note: previous definition of ‘hashFunction’ was here
 int hashFunction(const char *word, int tableSize)
     ^~~~~~~~~~~~
main.c:1040:6: error: conflicting types for ‘updateGlobalHistogram’
 void updateGlobalHistogram(LocalOccurrenceNode *localHistogram, int localHistogramSize)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:316:6: note: previous definition of ‘updateGlobalHistogram’ was here
 void updateGlobalHistogram(LocalOccurrenceNode *localHistogram, int localHistogramSize)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:1104:6: error: redefinition of ‘printGlobalHashtable’
 void printGlobalHashtable()
      ^~~~~~~~~~~~~~~~~~~~
main.c:380:6: note: previous definition of ‘printGlobalHashtable’ was here
 void printGlobalHashtable()
      ^~~~~~~~~~~~~~~~~~~~
main.c:1122:6: error: conflicting types for ‘printLocalOccurrences’
 void printLocalOccurrences(LocalOccurrenceNode *head)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:398:6: note: previous definition of ‘printLocalOccurrences’ was here
 void printLocalOccurrences(LocalOccurrenceNode *head)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:1133:6: error: redefinition of ‘receiveAndMergeHistograms’
 void receiveAndMergeHistograms(int num_processes)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:409:6: note: previous definition of ‘receiveAndMergeHistograms’ was here
 void receiveAndMergeHistograms(int num_processes)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:1201:5: error: redefinition of ‘main’
 int main(int argc, char **argv)
     ^~~~
main.c:478:5: note: previous definition of ‘main’ was here
 int main(int argc, char **argv)
     ^~~~
main.c:1486:1: error: expected identifier or ‘(’ before ‘++’ token
 ++++++++++++++++++++++++
 ^~
main.c:1508:1: warning: useless type name in empty declaration
 } OccurrenceNode;
 ^
main.c:1515:3: error: conflicting types for ‘Hashtable’
 } Hashtable;
   ^~~~~~~~~
main.c:751:3: note: previous declaration of ‘Hashtable’ was here
 } Hashtable;
   ^~~~~~~~~
main.c:1517:16: error: redefinition of ‘struct HistogramNode’
 typedef struct HistogramNode
                ^~~~~~~~~~~~~
main.c:753:16: note: originally defined here
 typedef struct HistogramNode
                ^~~~~~~~~~~~~
main.c:1521:3: error: conflicting types for ‘HistogramNode’
 } HistogramNode;
   ^~~~~~~~~~~~~
main.c:757:3: note: previous declaration of ‘HistogramNode’ was here
 } HistogramNode;
   ^~~~~~~~~~~~~
main.c:1523:11: error: conflicting types for ‘localHashtable’
 Hashtable localHashtable;
           ^~~~~~~~~~~~~~
main.c:36:11: note: previous declaration of ‘localHashtable’ was here
 Hashtable localHashtable;
           ^~~~~~~~~~~~~~
main.c:1524:11: error: conflicting types for ‘masterHashtable’
 Hashtable masterHashtable;
           ^~~~~~~~~~~~~~~
main.c:38:11: note: previous declaration of ‘masterHashtable’ was here
 Hashtable masterHashtable;
           ^~~~~~~~~~~~~~~
main.c:1525:17: error: redefinition of ‘all_occurrences’
 OccurrenceNode *all_occurrences = NULL;
                 ^~~~~~~~~~~~~~~
main.c:39:17: note: previous definition of ‘all_occurrences’ was here
 OccurrenceNode *all_occurrences = NULL;
                 ^~~~~~~~~~~~~~~
main.c:1526:17: error: redefinition of ‘local_occurrences’
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:40:17: note: previous definition of ‘local_occurrences’ was here
 OccurrenceNode *local_occurrences = NULL;
                 ^~~~~~~~~~~~~~~~~
main.c:1529:16: error: redefinition of ‘struct LocalOccurrenceNode’
 typedef struct LocalOccurrenceNode
                ^~~~~~~~~~~~~~~~~~~
main.c:769:16: note: originally defined here
 typedef struct LocalOccurrenceNode
                ^~~~~~~~~~~~~~~~~~~
main.c:1534:3: error: conflicting types for ‘LocalOccurrenceNode’
 } LocalOccurrenceNode;
   ^~~~~~~~~~~~~~~~~~~
main.c:774:3: note: previous declaration of ‘LocalOccurrenceNode’ was here
 } LocalOccurrenceNode;
   ^~~~~~~~~~~~~~~~~~~
main.c:1536:22: error: conflicting types for ‘local_occurrences_head’
 LocalOccurrenceNode *local_occurrences_head = NULL;
                      ^~~~~~~~~~~~~~~~~~~~~~
main.c:52:22: note: previous definition of ‘local_occurrences_head’ was here
 LocalOccurrenceNode *local_occurrences_head = NULL;
                      ^~~~~~~~~~~~~~~~~~~~~~
main.c:1538:16: error: redefinition of ‘struct GlobalOccurrenceNode’
 typedef struct GlobalOccurrenceNode
                ^~~~~~~~~~~~~~~~~~~~
main.c:778:16: note: originally defined here
 typedef struct GlobalOccurrenceNode
                ^~~~~~~~~~~~~~~~~~~~
main.c:1543:3: error: conflicting types for ‘GlobalOccurrenceNode’
 } GlobalOccurrenceNode;
   ^~~~~~~~~~~~~~~~~~~~
main.c:783:3: note: previous declaration of ‘GlobalOccurrenceNode’ was here
 } GlobalOccurrenceNode;
   ^~~~~~~~~~~~~~~~~~~~
main.c:1549:3: error: conflicting types for ‘GlobalHashtable’
 } GlobalHashtable;
   ^~~~~~~~~~~~~~~
main.c:789:3: note: previous declaration of ‘GlobalHashtable’ was here
 } GlobalHashtable;
   ^~~~~~~~~~~~~~~
main.c:1551:5: error: redefinition of ‘totalParole’
 int totalParole = 0;
     ^~~~~~~~~~~
main.c:67:5: note: previous definition of ‘totalParole’ was here
 int totalParole = 0;
     ^~~~~~~~~~~
main.c:1557:6: error: redefinition of ‘initializeHashtable’
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:73:6: note: previous definition of ‘initializeHashtable’ was here
 void initializeHashtable(unsigned int size)
      ^~~~~~~~~~~~~~~~~~~
main.c:1569:6: error: redefinition of ‘freeHashtable’
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:90:6: note: previous definition of ‘freeHashtable’ was here
 void freeHashtable()
      ^~~~~~~~~~~~~
main.c:1599:6: error: redefinition of ‘removePunctuation’
 void removePunctuation(char *word)
      ^~~~~~~~~~~~~~~~~
main.c:119:6: note: previous definition of ‘removePunctuation’ was here
 void removePunctuation(char *word)
      ^~~~~~~~~~~~~~~~~
main.c:1613:6: error: redefinition of ‘updateWordCount’
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:133:6: note: previous definition of ‘updateWordCount’ was here
 void updateWordCount(const char *word, int rank)
      ^~~~~~~~~~~~~~~
main.c:1654:6: error: redefinition of ‘get_total_file_size’
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c:175:6: note: previous definition of ‘get_total_file_size’ was here
 long get_total_file_size(DIR *dir, const char *input_dir)
      ^~~~~~~~~~~~~~~~~~~
main.c:1681:6: error: redefinition of ‘printLocalHashtable’
 void printLocalHashtable(int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:202:6: note: previous definition of ‘printLocalHashtable’ was here
 void printLocalHashtable(int rank)
      ^~~~~~~~~~~~~~~~~~~
main.c:1693:6: error: redefinition of ‘sendLocalOccurrences’
 void sendLocalOccurrences(int rank)
      ^~~~~~~~~~~~~~~~~~~~
main.c:215:6: note: previous definition of ‘sendLocalOccurrences’ was here
 void sendLocalOccurrences(int rank)
      ^~~~~~~~~~~~~~~~~~~~
main.c:1721:6: error: conflicting types for ‘writeCSV’
 void writeCSV(const char *filename, Hashtable *hashTable)
      ^~~~~~~~
main.c:254:6: note: previous definition of ‘writeCSV’ was here
 void writeCSV(const char *filename, Hashtable *hashTable)
      ^~~~~~~~
main.c:1753:6: error: redefinition of ‘initializeMasterHashtable’
 void initializeMasterHashtable(int size)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:287:6: note: previous definition of ‘initializeMasterHashtable’ was here
 void initializeMasterHashtable(int size)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:1767:5: error: redefinition of ‘hashFunction’
 int hashFunction(const char *word, int tableSize)
     ^~~~~~~~~~~~
main.c:304:5: note: previous definition of ‘hashFunction’ was here
 int hashFunction(const char *word, int tableSize)
     ^~~~~~~~~~~~
main.c:1779:6: error: conflicting types for ‘updateGlobalHistogram’
 void updateGlobalHistogram(LocalOccurrenceNode *localHistogram, int localHistogramSize)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:316:6: note: previous definition of ‘updateGlobalHistogram’ was here
 void updateGlobalHistogram(LocalOccurrenceNode *localHistogram, int localHistogramSize)
      ^~~~~~~~~~~~~~~~~~~~~
main.c:1843:6: error: redefinition of ‘printGlobalHashtable’
 void printGlobalHashtable()
      ^~~~~~~~~~~~~~~~~~~~
main.c:380:6: note: previous definition of ‘printGlobalHashtable’ was here
 void printGlobalHashtable()
      ^~~~~~~~~~~~~~~~~~~~
main.c:1861:6: error: redefinition of ‘receiveAndMergeHistograms’
 void receiveAndMergeHistograms(int num_processes)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:409:6: note: previous definition of ‘receiveAndMergeHistograms’ was here
 void receiveAndMergeHistograms(int num_processes)
      ^~~~~~~~~~~~~~~~~~~~~~~~~
main.c:1923:5: error: redefinition of ‘main’
 int main(int argc, char **argv)
     ^~~~
main.c:478:5: note: previous definition of ‘main’ was here
 int main(int argc, char **argv)
     ^~~~
In file included from /usr/include/stdio.h:33:0,
                 from main.c:2:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:216:1: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘typedef’
 typedef __SIZE_TYPE__ size_t;
 ^~~~~~~
In file included from /usr/include/stdio.h:41:0,
                 from main.c:2:
/usr/include/x86_64-linux-gnu/bits/libio.h:306:3: error: unknown type name ‘size_t’
   size_t __pad5;
   ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:309:67: error: ‘size_t’ undeclared here (not in a function); did you mean ‘__size_t’?
   char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];
                                                                   ^~~~~~
                                                                   __size_t
/usr/include/x86_64-linux-gnu/bits/libio.h:337:62: error: expected declaration specifiers or ‘...’ before ‘size_t’
 typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);
                                                              ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:346:6: error: expected declaration specifiers or ‘...’ before ‘size_t’
      size_t __n);
      ^~~~~~
/usr/include/x86_64-linux-gnu/bits/libio.h:467:19: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘_IO_sgetn’
 extern _IO_size_t _IO_sgetn (_IO_FILE *, void *, _IO_size_t);
                   ^~~~~~~~~
In file included from main.c:2:0:
/usr/include/stdio.h:278:35: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
                                   ^~~~~~
/usr/include/stdio.h:284:47: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __THROW __wur;
                                               ^~~~~~
/usr/include/stdio.h:295:20: error: expected declaration specifiers or ‘...’ before ‘size_t’
       int __modes, size_t __n) __THROW;
                    ^~~~~~
/usr/include/stdio.h:301:10: error: expected declaration specifiers or ‘...’ before ‘size_t’
          size_t __size) __THROW;
          ^~~~~~
/usr/include/stdio.h:340:44: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int snprintf (char *__restrict __s, size_t __maxlen,
                                            ^~~~~~
/usr/include/stdio.h:344:45: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int vsnprintf (char *__restrict __s, size_t __maxlen,
                                             ^~~~~~
/usr/include/stdio.h:604:11: error: expected declaration specifiers or ‘...’ before ‘size_t’
           size_t *__restrict __n, int __delimiter,
           ^~~~~~
/usr/include/stdio.h:607:9: error: expected declaration specifiers or ‘...’ before ‘size_t’
         size_t *__restrict __n, int __delimiter,
         ^~~~~~
/usr/include/stdio.h:617:8: error: expected declaration specifiers or ‘...’ before ‘size_t’
        size_t *__restrict __n,
        ^~~~~~
/usr/include/stdio.h:646:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘fread’
 extern size_t fread (void *__restrict __ptr, size_t __size,
               ^~~~~
/usr/include/stdio.h:652:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘fwrite’
 extern size_t fwrite (const void *__restrict __ptr, size_t __size,
               ^~~~~~
/usr/include/stdio.h:673:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘fread_unlocked’
 extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
               ^~~~~~~~~~~~~~
/usr/include/stdio.h:675:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘fwrite_unlocked’
 extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
               ^~~~~~~~~~~~~~~
In file included from main.c:3:0:
/usr/include/stdlib.h:97:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘__ctype_get_mb_cur_max’
 extern size_t __ctype_get_mb_cur_max (void) __THROW __wur;
               ^~~~~~~~~~~~~~~~~~~~~~
In file included from main.c:3:0:
/usr/include/stdlib.h:411:4: error: expected declaration specifiers or ‘...’ before ‘size_t’
    size_t __statelen) __THROW __nonnull ((2));
    ^~~~~~
/usr/include/stdlib.h:441:4: error: expected declaration specifiers or ‘...’ before ‘size_t’
    size_t __statelen,
    ^~~~~~
/usr/include/stdlib.h:539:22: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *malloc (size_t __size) __THROW __attribute_malloc__ __wur;
                      ^~~~~~
/usr/include/stdlib.h:541:22: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *calloc (size_t __nmemb, size_t __size)
                      ^~~~~~
/usr/include/stdlib.h:541:38: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *calloc (size_t __nmemb, size_t __size)
                                      ^~~~~~
/usr/include/stdlib.h:549:36: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *realloc (void *__ptr, size_t __size)
                                    ^~~~~~
In file included from /usr/include/stdlib.h:566:0,
                 from main.c:3:
/usr/include/alloca.h:32:22: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *alloca (size_t __size) __THROW;
                      ^~~~~~
In file included from main.c:3:0:
/usr/include/stdlib.h:572:22: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *valloc (size_t __size) __THROW __attribute_malloc__ __wur;
                      ^~~~~~
/usr/include/stdlib.h:577:45: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
                                             ^~~~~~
/usr/include/stdlib.h:577:65: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
                                                                 ^~~~~~
/usr/include/stdlib.h:583:29: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *aligned_alloc (size_t __alignment, size_t __size)
                             ^~~~~~
/usr/include/stdlib.h:583:49: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *aligned_alloc (size_t __alignment, size_t __size)
                                                 ^~~~~~
/usr/include/stdlib.h:818:9: error: expected declaration specifiers or ‘...’ before ‘size_t’
         size_t __nmemb, size_t __size, __compar_fn_t __compar)
         ^~~~~~
/usr/include/stdlib.h:818:25: error: expected declaration specifiers or ‘...’ before ‘size_t’
         size_t __nmemb, size_t __size, __compar_fn_t __compar)
                         ^~~~~~
/usr/include/stdlib.h:827:34: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void qsort (void *__base, size_t __nmemb, size_t __size,
                                  ^~~~~~
/usr/include/stdlib.h:827:50: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void qsort (void *__base, size_t __nmemb, size_t __size,
                                                  ^~~~~~
/usr/include/stdlib.h:901:6: error: expected declaration specifiers or ‘...’ before ‘size_t’
      size_t __len) __THROW __nonnull ((3, 4, 5));
      ^~~~~~
/usr/include/stdlib.h:904:6: error: expected declaration specifiers or ‘...’ before ‘size_t’
      size_t __len) __THROW __nonnull ((3, 4, 5));
      ^~~~~~
/usr/include/stdlib.h:908:31: error: expected declaration specifiers or ‘...’ before ‘size_t’
       char *__restrict __buf, size_t __len)
                               ^~~~~~
/usr/include/stdlib.h:912:31: error: expected declaration specifiers or ‘...’ before ‘size_t’
       char *__restrict __buf, size_t __len)
                               ^~~~~~
/usr/include/stdlib.h:919:36: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int mblen (const char *__s, size_t __n) __THROW;
                                    ^~~~~~
/usr/include/stdlib.h:923:34: error: expected declaration specifiers or ‘...’ before ‘size_t’
      const char *__restrict __s, size_t __n) __THROW;
                                  ^~~~~~
/usr/include/stdlib.h:930:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘mbstowcs’
 extern size_t mbstowcs (wchar_t *__restrict  __pwcs,
               ^~~~~~~~
/usr/include/stdlib.h:933:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘wcstombs’
 extern size_t wcstombs (char *__restrict __s,
               ^~~~~~~~
In file included from main.c:4:0:
/usr/include/string.h:43:8: error: expected declaration specifiers or ‘...’ before ‘size_t’
        size_t __n) __THROW __nonnull ((1, 2));
        ^~~~~~
/usr/include/string.h:46:56: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *memmove (void *__dest, const void *__src, size_t __n)
                                                        ^~~~~~
/usr/include/string.h:54:18: error: expected declaration specifiers or ‘...’ before ‘size_t’
         int __c, size_t __n)
                  ^~~~~~
/usr/include/string.h:60:42: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *memset (void *__s, int __c, size_t __n) __THROW __nonnull ((1));
                                          ^~~~~~
/usr/include/string.h:63:56: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int memcmp (const void *__s1, const void *__s2, size_t __n)
                                                        ^~~~~~
/usr/include/string.h:90:48: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void *memchr (const void *__s, int __c, size_t __n)
                                                ^~~~~~
/usr/include/string.h:125:39: error: expected declaration specifiers or ‘...’ before ‘size_t’
         const char *__restrict __src, size_t __n)
                                       ^~~~~~
/usr/include/string.h:133:9: error: expected declaration specifiers or ‘...’ before ‘size_t’
         size_t __n) __THROW __nonnull ((1, 2));
         ^~~~~~
/usr/include/string.h:139:57: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int strncmp (const char *__s1, const char *__s2, size_t __n)
                                                         ^~~~~~
/usr/include/string.h:146:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strxfrm’
 extern size_t strxfrm (char *__restrict __dest,
               ^~~~~~~
In file included from main.c:4:0:
/usr/include/string.h:159:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strxfrm_l’
 extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
               ^~~~~~~~~
/usr/include/string.h:174:45: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern char *strndup (const char *__string, size_t __n)
                                             ^~~~~~
/usr/include/string.h:272:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strcspn’
 extern size_t strcspn (const char *__s, const char *__reject)
               ^~~~~~~
/usr/include/string.h:276:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strspn’
 extern size_t strspn (const char *__s, const char *__accept)
               ^~~~~~
/usr/include/string.h:384:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strlen’
 extern size_t strlen (const char *__s)
               ^~~~~~
/usr/include/string.h:390:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘strnlen’
 extern size_t strnlen (const char *__string, size_t __maxlen)
               ^~~~~~~
In file included from /usr/include/features.h:424:0,
                 from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33,
                 from /usr/include/stdio.h:27,
                 from main.c:2:
/usr/include/string.h:409:12: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int __REDIRECT_NTH (strerror_r,
            ^
In file included from /usr/include/string.h:431:0,
                 from main.c:4:
/usr/include/strings.h:34:54: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int bcmp (const void *__s1, const void *__s2, size_t __n)
                                                      ^~~~~~
/usr/include/strings.h:38:53: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void bcopy (const void *__src, void *__dest, size_t __n)
                                                     ^~~~~~
/usr/include/strings.h:42:31: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void bzero (void *__s, size_t __n) __THROW __nonnull ((1));
                               ^~~~~~
/usr/include/strings.h:120:61: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
                                                             ^~~~~~
/usr/include/strings.h:134:6: error: expected declaration specifiers or ‘...’ before ‘size_t’
      size_t __n, locale_t __loc)
      ^~~~~~
In file included from main.c:4:0:
/usr/include/string.h:435:40: error: expected declaration specifiers or ‘...’ before ‘size_t’
 extern void explicit_bzero (void *__s, size_t __n) __THROW __nonnull ((1));
                                        ^~~~~~
/usr/include/string.h:457:34: error: expected declaration specifiers or ‘...’ before ‘size_t’
    const char *__restrict __src, size_t __n)
                                  ^~~~~~
/usr/include/string.h:460:39: error: expected declaration specifiers or ‘...’ before ‘size_t’
         const char *__restrict __src, size_t __n)
                                       ^~~~~~
In file included from main.c:5:0:
/usr/include/dirent.h:354:5: error: expected declaration specifiers or ‘...’ before ‘size_t’
     size_t __nbytes,
     ^~~~~~
In file included from main.c:7:0:
/usr/lib/x86_64-linux-gnu/openmpi/include/mpi.h:362:5: error: expected specifier-qualifier-list before ‘size_t’
     size_t _ucount;
     ^~~~~~
main.c: In function ‘initializeHashtable’:
main.c:81:47: warning: implicit declaration of function ‘malloc’ [-Wimplicit-function-declaration]
     localHashtable.table = (OccurrenceNode **)malloc(size * sizeof(OccurrenceNode *));
                                               ^~~~~~
main.c:81:47: warning: incompatible implicit declaration of built-in function ‘malloc’
main.c:81:47: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘updateWordCount’:
main.c:140:5: warning: implicit declaration of function ‘strncpy’ [-Wimplicit-function-declaration]
     strncpy(cleanedWord, word, MAX_WORD_LENGTH - 1);
     ^~~~~~~
main.c:140:5: warning: incompatible implicit declaration of built-in function ‘strncpy’
main.c:140:5: note: include ‘<string.h>’ or provide a declaration of ‘strncpy’
main.c:159:59: warning: incompatible implicit declaration of built-in function ‘malloc’
     LocalOccurrenceNode *newNode = (LocalOccurrenceNode *)malloc(sizeof(LocalOccurrenceNode));
                                                           ^~~~~~
main.c:159:59: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘get_total_file_size’:
main.c:193:9: warning: implicit declaration of function ‘snprintf’ [-Wimplicit-function-declaration]
         snprintf(filepath, sizeof(filepath), "%s/%s", input_dir, entry->d_name);
         ^~~~~~~~
main.c:193:9: warning: incompatible implicit declaration of built-in function ‘snprintf’
main.c:193:9: note: include ‘<stdio.h>’ or provide a declaration of ‘snprintf’
main.c: In function ‘initializeMasterHashtable’:
main.c:298:48: warning: incompatible implicit declaration of built-in function ‘malloc’
     masterHashtable.table = (OccurrenceNode **)malloc(size * sizeof(OccurrenceNode *));
                                                ^~~~~~
main.c:298:48: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘updateGlobalHistogram’:
main.c:328:9: warning: incompatible implicit declaration of built-in function ‘strncpy’
         strncpy(cleanedWord, currentNode->word, MAX_WORD_LENGTH - 1);
         ^~~~~~~
main.c:328:9: note: include ‘<string.h>’ or provide a declaration of ‘strncpy’
main.c:360:57: warning: incompatible implicit declaration of built-in function ‘malloc’
             OccurrenceNode *newNode = (OccurrenceNode *)malloc(sizeof(OccurrenceNode));
                                                         ^~~~~~
main.c:360:57: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘receiveAndMergeHistograms’:
main.c:437:67: warning: incompatible implicit declaration of built-in function ‘malloc’
             LocalOccurrenceNode *newNode = (LocalOccurrenceNode *)malloc(sizeof(LocalOccurrenceNode));
                                                                   ^~~~~~
main.c:437:67: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c: In function ‘main’:
main.c:499:44: warning: incompatible implicit declaration of built-in function ‘malloc’
     MPI_Request *requests = (MPI_Request *)malloc((num_processes - 1) * sizeof(MPI_Request));
                                            ^~~~~~
main.c:499:44: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
main.c:552:17: warning: incompatible implicit declaration of built-in function ‘snprintf’
                 snprintf(filepath, sizeof(filepath), "%s/%s", INPUT_DIR, entry->d_name);
                 ^~~~~~~~
main.c:552:17: note: include ‘<stdio.h>’ or provide a declaration of ‘snprintf’
main.c:561:21: warning: implicit declaration of function ‘fread’; did you mean ‘free’? [-Wimplicit-function-declaration]
                     fread(all_data + current_offset, sizeof(char), file_size, file);
                     ^~~~~
                     free
main.c:694:13: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
             memcpy(local_occurrences_buffer, local_occurrences, parolecontate * sizeof(OccurrenceNode));
             ^~~~~~
main.c:694:13: warning: incompatible implicit declaration of built-in function ‘memcpy’
main.c:694:13: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
main.c: In function ‘sortGlobalHashtable’:
main.c:451:31: error: invalid use of void expression
         hashTable->table[i] = (OccurrenceNode *)qsort(hashTable->table[i], hashTable->table[i]->count, sizeof(OccurrenceNode), compareOccurrences);
                               ^
main.c: In function ‘sortOccurrencesList’:
main.c:440:58: error: ‘compareOccurrences’ undeclared (first use in this function); did you mean ‘local_occurrences’?
     qsort(*list, (*list)->count, sizeof(OccurrenceNode), compareOccurrences);
                                                          ^~~~~~~~~~~~~~~~~~
                                                          local_occurrences
main.c:440:58: note: each undeclared identifier is reported only once for each function it appears in
main.c: In function ‘main’:
main.c:643:21: error: redefinition of ‘allOccurrencesArray’
     OccurrenceNode *allOccurrencesArray = (OccurrenceNode *)malloc(totalOccurrences * sizeof(OccurrenceNode));
                     ^~~~~~~~~~~~~~~~~~~
main.c:526:25: note: previous definition of ‘allOccurrencesArray’ was here
         OccurrenceNode *allOccurrencesArray = NULL;
                         ^~~~~~~~~~~~~~~~~~~
